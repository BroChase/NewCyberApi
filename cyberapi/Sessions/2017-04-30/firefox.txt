[{"uri": "https://krebsonsecurity.com/2011/02/java-6-update-24-plugs-21-securty-holes/", "date": "2011-02-17T00:00:00.000Z", "author": "Brian Krebs", "title": "Java 6 Update 24 Plugs 21 Security Holes", "body": "A new version of Java fixes at least 21 security flaws in the widely-distributed software bundle.\nUpdates are available for Windows, Linux and Solaris users.\n\nIf you\u2019re curious about the security updates included in Java 6 Update 24, see the release notes\nfrom Oracle. As I have shown in many stories on this blog, outdated Java installations can give bad\nguys and malware a foothold on your system, so if you use Java, please keep it updated. If you have\nJava installed but can\u2019t remember why, you might consider simply uninstalling it altogether (you can\nalways reinstall it later). I only keep Java installed on one system of mine, and I disable the Java\nplugin from within Mozilla Firefox (Tools, Add-ons, Plugins).\n\nUpdates are available from within Java (click the Update tab from the Java entry in the Windows\ncontrol panel), or from Java.com. Mac users will need to wait until Apple releases a separate update\nto fix these flaws on OS X because the company maintains its own version of Java (for now, anyway).\n\n", "polarity": 0.0446969696969697, "subjectivity": 0.5676406926406926, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/01/microsoft-exploit-published-for-windows-flaw/", "date": "2011-01-28T00:00:00.000Z", "author": "Brian Krebs", "title": "Microsoft: Exploit Published for Windows Flaw", "body": "Microsoft warned today that hackers have published instructions for attacking a previously unknown\nsecurity hole in all versions of Windows that could be exploited to siphon user data or trick users\ninto installing malicious code.\n\nRedmond published an advisory about a vulnerability in the way Windows handles MHTML code that could\nlet attackers run Javascript code if the user is browsing a malicious site using Internet Explorer.\nAs Wolfgang Kandek, chief technology officer at Qualys notes, that means that IE is the only known\nexploit vehicle for this flaw, and that other browsers such as Firefox and Chrome are not affected\nin their default configuration because they don\u2019t support MHTML without the installation of specific\nadd-ons.\n\nMicrosoft said it may issue a patch to fix the flaw, but that in the meantime IE users who are\nconcerned about this threat can use a supplied \u201cFixIt\u201d tool to help shore up the way Windows handles\nMHTML documents. The enable that fix, visit this link and click the FixIt icon.\n\n", "polarity": -0.045, "subjectivity": 0.52, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/11/flash-update-plugs-18-security-holes/", "date": "2010-11-05T00:00:00.000Z", "author": "Brian Krebs", "title": "Flash Update Plugs 18 Security Holes", "body": "Adobe on Thursday released an update to its Flash Player software that fixes at least 18 security\nvulnerabilities, including one that is being exploited in targeted attacks.\n\nThe Flash update brings the latest version to v 10.1.102.64. To find out if your computer has Flash\ninstalled (it almost certainly does) and what version it may be running, go here. The new version is\navailable from this link, but be aware that if you accept all of the default settings, the update\nmay include additional software, such as a toolbar or anti-virus scanner.\n\nIf you\u2019d like to avoid Adobe\u2019s obnoxious Download Manager and all these extras, grab the update from\nthis link instead. Updates are available for Windows, Macintosh, Linux, and Solaris versions of\nFlash.\n\nIf you use Internet Explorer in addition to other browsers, you will need to apply this update\ntwice: Once to install the Flash Active X plugin for IE, and again to update other browsers, such as\nFirefox or Google Chrome (you may find that Google has already updated their browser with this fix).\nAlso, while it\u2019s not strictly necessary, Adobe recommends that users uninstall the previous version\nof Flash before updating to the latest copy of Flash. Instructions and tools for removing Flash are\nhere.\n\nMore information on the vulnerabilities fixed in this patch is available in the Adobe advisory.\n\n", "polarity": 0.1417027417027417, "subjectivity": 0.494035594035594, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/09/security-fix-for-critical-adobe-flash-flaw/", "date": "2010-09-20T00:00:00.000Z", "author": "Brian Krebs", "title": "Security Fix for Critical Adobe Flash Flaw", "body": "Adobe Systems Inc. today rushed out a software update to remedy a dangerous security hole in its\nubiquitous Flash Player that hackers have been exploiting to break into vulnerable systems.\n\nAdobe recommends users of Adobe Flash Player 10.1.82.76 and earlier versions for Windows, Macintosh,\nLinux, and Solaris update to Adobe Flash Player 10.1.85.3, and users of Adobe Flash Player\n10.1.92.10 for Android update to Adobe Flash Player 10.1.95.1. Updates are available from this link.\n\nAdobe\u2019s advisory on this flaw is here. The same security vulnerability also exists in the latest\nversions of Adobe Reader and Acrobat, although Adobe says it doesn\u2019t plan to fix this vulnerability\nin those products until the week of Oct. 4.\n\nNote that if you use both Internet Explorer and non-IE  browsers, you\u2019re going to need to apply this\nupdate at least twice, once  by visiting the Flash Player installation page with IE and then again\nwith Firefox, Opera  or Safari. Google Chrome users can update to Chrome  6.0.472.62 to grab this\nlatest Flash update. To check which version of Flash you have installed, visit this link.\n\nAlso, unless you want some \u201cfree\u201d  software \u2014 like McAfee Security Scan or whatever browser toolbar\nAdobe is bundling with  Flash player this month \u2014 remember to uncheck that option before you agree\nto download the software.\n\n", "polarity": 0.044444444444444446, "subjectivity": 0.6027777777777777, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/09/adobe-warns-of-attacks-on-new-flash-flaw/", "date": "2010-09-13T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe Warns of Attacks on New Flash Flaw", "body": "Adobe Systems Inc. warned Monday that attackers are exploiting a previously unknown security hole in\nits Flash Player, multimedia software that is installed on most computers.\n\nAdobe said a critical vulnerability exists in Adobe Flash Player versions 10.1.82.76 and earlier,\nfor Windows, Mac, Linux, Solaris, UNIX and Android operating systems. In a security advisory, Adobe\nwarned that the flaw could cause Flash to crash and potentially allow an attacker to seize complete\ncontrol over an affected system.\n\nWorse still, there are reports that this vulnerability is being actively exploited in the wild\nagainst Adobe Flash Player. Adobe\u2019s advisory states that while the latest versions of Adobe Acrobat\nand Reader also contain the vulnerable Flash components, the company is not aware of attacks against\nthe Flash flaw in those programs.\n\nThat last bit may be of little comfort to Adobe Acrobat and Reader users: Last week, Adobe issued a\nsimilar advisory warning that hackers were attacking an as-yet unpatched critical flaw in both of\nthose programs.\n\nAdobe said it is in the process of finalizing a fix for the Flash issue and expects to provide an\nupdate for Flash Player on Windows, Mac, and Android systems during the week of Sept. 27, 2010.\nUpdates to fix the Flash flaw in Adobe Reader and Acrobat should be ready by the week of October 4,\n2010, Adobe said.\n\nFlash is one of those Web components that can be difficult to do without. I often urge readers who\nuse Firefox to install and use the Noscript add-on, which blocks Flash-based content by default and\nlets the user decide which Flash videos to enable.\n\n", "polarity": -0.0287280701754386, "subjectivity": 0.5464912280701755, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/08/adobe-apple-issue-security-updates/", "date": "2010-08-25T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Apple Issue Security Updates", "body": "Both Adobe and Apple have released security updates or alerts in the past 24 hours. Adobe pushed out\na critical patch that fixes at least 20 vulnerabilities in its Shockwave Player, while Apple issued\nupdates to correct 13 flaws in Mac OS X systems.\n\nThe Adobe patch applies to Shockwave Player 11.5.7.609 and earlier on Windows and Mac operating\nsystems. Adobe recommends that users upgrade to Shockwave Player 11.5.8.612, available at this link.\nBut before you do that, you might want to visit this link, which will tell you whether or not you\nneed to update, and indeed whether you currently have Shockwave installed at all. If you visit it\nand don\u2019t see an animation, then you don\u2019t have Shockwave (and probably aren\u2019t missing it either).\n\nOne other note about Shockwave: Firefox users may notice a \u201cShockwave Flash\u201d entry when they click\n\u201cTools,\u201d \u201cAdd-0ns,\u201d and then the \u201cPlugins\u201d tab. For reasons that are too complicated to explain in\none breath, this is actually Adobe\u2019s name for its regular Flash player, which most people probably\ndo want installed because can be difficult to browse and use the Internet without it.\u00a0 By the way,\nif you haven\u2019t updated your Flash Player in a while, Adobe issued a new version of that software on\nAug 10 that plugged a half dozen security holes.\n\nApple\u2019s update affects Mac OS X Server 10.5, Mac OS X 10.5.8 , Mac OS X Server 10.6 , Mac OS X\n10.6.4 and is available via Software Update or from Apple Downloads.\n\n", "polarity": -0.037831439393939396, "subjectivity": 0.42957094988344985, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/06/security-updates-for-firefox-opera-browsers/", "date": "2010-06-23T00:00:00.000Z", "author": "Brian Krebs", "title": "Security Updates for Firefox, Opera Browsers", "body": "Mozilla has shipped a new version of Firefox that corrects a number of vulnerabilities in the\nbrowser. Separately, a new version of Opera is available that fixes at least five security flaws in\nthe software.\n\nFirefox version 3.6.4 addresses seven security holes ranging from lesser bugs to critical flaws.\nMozilla says this latest version of Firefox also does a better job of handling plugin crashes, so\nthat if a plugin causes problems when the user browses a site, Firefox will simply let the plugin\ncrash instead of tying up the entire browser process. Firefox should auto-update (usually on your\nnext restart of the browser), but you can force an update check by clicking \u201cHelp,\u201d and then \u201cCheck\nfor Updates\u201d (when I did this, I noticed that in its place was the \u201cApply Downloaded Update Now,\u201d\noption, indicating that Firefox had already fetched this upgrade.\n\nMozilla also shipped, 3.5.10, an update that fixes at least nine security vulnerabilities in its\n3.5.x line of Firefox. The software maker will only continue to support this version of Firefox for\nanother couple of months, so if you\u2019re on the 3.5.x line, you might consider upgrading soon (don\u2019t\nknow which version you\u2019re using, click \u201cHelp\u201d and \u201cAbout Mozilla Firefox\u201d).\n\nOpera\u2019s update brings the browser to version 10.54, which corrects a few critical vulnerabilities.\nOpera now includes an auto-update feature, so Opera users may already have been notified about this\nupdate (I wasn\u2019t). In any case, Opera is urging users to upgrade to the latest version, available\nhere.\n\n", "polarity": 0.08459595959595961, "subjectivity": 0.5134018759018759, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/06/drug-charges-against-accused-attipad-hacker/", "date": "2010-06-17T00:00:00.000Z", "author": "Brian Krebs", "title": "Drug Charges Against Accused AT&T/iPad Hacker", "body": "A hacker in a group that discovered the AT&T iPad-related flaw was arrested on drug charges\nfollowing the execution of an FBI search warrant of his home in Arkansas on Tuesday, according to\npublished reports.\n\nCNET\u2019s Elinor Mills writes that the FBI found a broad selection of narcotics at the home of a man\ntied to \u201cGoatse Security,\u201d the group that recently claimed responsibility for extracting contact\ninformation on more than 114,000\u00a0 iPad customers from AT&T\u2019s Web site.\n\nFrom the CNET story:\n\nAuernheimer is quite a colorful character. I met him in 2006 at the Toorcon security conference in\nSan Diego, where he and Mischa Spiegelmock \u2013 an employee for blogging service LiveJournal \u2013 were\ndelivering a talk on what they claimed was an unpatched security flaw in Mozilla\u2019s Firefox browser\nthat hackers were supposedly attacking to compromise Web surfers. At the time, Auernheimer\nintroduced himself as Andrew \u201cWeev\u201d Wbeelsoi.\n\nThat presentation \u2014 which called on security researchers everywhere to stop publicizing and  fixing\nsoftware security vulnerabilities \u2014 was at times hilarious and bizarre. Weev started out by\ninforming the audience that he was delivering his speech while tripping on acid. When I followed up\nwith Weev after that talk to get more details on their claims, it was fairly plain that he wasn\u2019t\nkidding about the acid trip. However, the two hackers would later admit to me that they didn\u2019t\nreally have the zero day exploits that they claimed, and that they were just trying to have a little\nfun with the security industry.\n\n", "polarity": 0.1815934065934066, "subjectivity": 0.378434065934066, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/05/mozilla-plugin-check-now-does-windows-sort-of/", "date": "2010-05-26T00:00:00.000Z", "author": "Brian Krebs", "title": "Mozilla Plugin Check Now Does Windows (Sort of)", "body": "Mozilla\u2018s Plugin Check Web site, which inspects Firefox browsers for outdated and insecure plugins,\nnow checks other browsers \u2014 including Apple\u2018s Safari, Google\u2018s Chrome, Opera, and (to a far lesser\nextent) even Internet Explorer.\n\nThe Plugin Check site looks for a range of outdated plugins, and now works on Safari 4, Google\nChrome\u00a0 4 and up, Mozilla Firefox 3.0 and up, and Opera 10.5. This is a nice idea, and it works to\nsome degree, but the page couldn\u2019t locate version information for about seven of ten plugins I\ncurrently have in Firefox.\n\nSimilarly it detected version information for three out of nine of my plugins on my Macbook Pro\u2019s\nSafari installation, although it helpfully informed me of an outdated Flash player on my Mac (doh!).\nIt also detected version numbers for just two of 11 plugins apparently installed in my Google Chrome\nbrowser.\n\nMozilla\u2019s Plugin Check also partially supports IE7 and IE8, although when I visited it with IE, I\nreceived an interesting result. I went there with a virgin install of IE8 that didn\u2019t have any third\nparty plugins installed. But rather than tell me I was secure\u00a0 because it could detect no plugins at\nall, Mozilla\u2019s site actually prompted me to install Adobe\u2019s Flash Player (screen shot below), one of\nthe most-attacked browser plugins of all.\n\nIt would be great to see this technology start to detect more plugins. In the meantime, if you\u2019re\nrunning Windows and want help keeping up to date with the latest patches, I\u2019d recommend Secunia\u2018s\nPersonal Software Inspector, a program that periodically reminds you about insecure programs and\nplugins, and even includes links to download the latest patches.\n\n", "polarity": 0.061956521739130424, "subjectivity": 0.5445652173913045, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/04/rogue-antivirus-gangs-seize-on-mcafee-snafu/", "date": "2010-04-22T00:00:00.000Z", "author": "Brian Krebs", "title": "Rogue Antivirus Gangs Seize on McAfee Snafu", "body": "Purveyors of rogue anti-virus, a.k.a. \u201cscareware,\u201d often seize upon hot trending topics in their\ndaily efforts to beef up the search engine rankings of their booby-trapped landing pages. So it\u2019s\nperhaps no surprise that these scammers are capitalizing on search terms surrounding McAfee, which\njust yesterday shipped a faulty anti-virus update that caused serious problems for a large number of\ncustomers.\n\nSearching for McAfee\u2019s free scanning tool along with the name of yesterday\u2019s bad update returns page\nafter page of results that when visited launch the familiar come-ons that try to frighten visitors\ninto purchasing bogus (if not also malicious) anti-virus products. I took the screen shots here with\nInternet Explorer 8, because as usual the booby-trapped pages simply would not load with the\nnoscript add-on enabled in my version of Firefox.\n\nUpdate 11:08 a.m. ET: Panda Security just published a similar post which lists a number of McAfee-\nrelated search terms that can lead to sites like those in the screen\u00a0 shots below.\n\n", "polarity": -0.00400432900432899, "subjectivity": 0.4835497835497835, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/03/microsoft-warns-of-internet-explorer-0day/", "date": "2010-03-09T00:00:00.000Z", "author": "Brian Krebs", "title": "Microsoft Warns of Internet Explorer 0day", "body": "Microsoft issued two security patches today to plug important security holes in its Windows\noperating system and Office software. The software giant also warned that it is aware of hackers\nexploiting yet another unpatched security flaw in older versions of its Internet Explorer Web\nbrowser.\n\nMicrosoft said it is investigating public reports that hackers have worked out how to exploit a\npreviously unknown security hole in IE versions 6 and 7 as a vehicle for installing malicious\nsoftware. Redmond says it is only seeing this flaw being used in \u201ctargeted\u201d attacks at this point,\nbut of course these types of pinprick attacks on unpatched vulnerabilities in IE often precede their\nmuch wider exploitation by the criminal hacking community.\n\nIf you depend on IE for browsing the Web, upgrade to IE8 if possible. Otherwise, consider switching\nto an alternative browser, particularly something like Firefox with an add-on that blocks scripts by\ndefault, such as Noscript or Request Policy. Yes, these add-ons take a bit getting used to, but from\nwhere I sit, allowing Javascipt and Flash to load unrestricted as you browse the web is simply\nunsafe on today\u2019s Internet.\n\nOne of the updates Microsoft released today fixes a problem with the Windows Movie Maker application\nas shipped on Windows XP and Vista. The second patch fixes at least seven vulnerabilities in\nMicrosoft Excel that Microsoft said are present in all supported versions of Microsoft Office,\nincluded Mac Office 2004 and 2008.\n\nUpdates (including IE8) are available through the Microsoft Update Web site, or via Automatic\nUpdate.\n\n", "polarity": 0.04607843137254902, "subjectivity": 0.4700280112044818, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/lets-encrypt-celebrates-big-https-milestone/118856/", "date": "2016-06-23T00:00:00.000Z", "author": "Tom Spring", "title": "Let\u2019s Encrypt Celebrates Big HTTPS Milestone", "body": "Certificate authority Let\u2019s Encrypt is celebrating a major milestone in the young nonprofit\u2019s\nexistence issuing its 5 millionth certificate this month. Let\u2019s Encrypt launched to the general\npublic just seven months ago. \n\n\u201cOur goal is to get the entire web 100 percent HTTPS,\u201d said Josh Aas, executive director for the\nInternet Security Research Group, the nonprofit that helped launch Let\u2019s Encrypt. \u201cBy adding 5\nmillion certificates, representing 7 million unique domains, we are now within reach of encrypting\n50 percent of all internet traffic,\u201d Aas said in an interview with Threatpost. \n\nIn December 2015, according to data culled from Firefox telemetry, roughly 39.5 percent of Firefox\nbrowser page loads were protected by HTTPS connections. Today the number is 45 percent. \n\n\u201cWe thought 5 million certificates was a hard goal to reach, but with the success we are seeing the\n50 percent milestone looks like a possibility this year,\u201d Aas said. \n\nHTTPS is key to securing communications between a client and server and thwarting attacks such as\nlast year\u2019s so-called Great Cannon attack. HTTPS is a combination of the HyperText Transfer Protocol\n(HTTPS) and the Secure Socket Layer (SSL) protocol. Together, HTTPS, encrypts communication sessions\nbetween a computer\u2019s a web browser and a web server. The absence of HTTPS leaves that connection\nbetween browser and web server vulnerable to sniffing attacks with tools such as Firesheep that can\nintercept unencrypted data. \n\nAas said some major players on the web,such as online retailers and online advertisers, are still\nreluctant to adopt more secure internet communications. Aas explains the transition can be\ncomplicated because some companies own hundreds of domains. \n\nIn other cases some websites that aggregate content from multiple sites will run into browser\nlimitations that prevent HTTP content from rendering correctly alongside HTTPS content in one\nbrowser window. For example, any online advertisers whose ads do not use HTTPS, will have problems\nrendering its ads on HTTPS sites. \n\n\u201cAs a community, increased awareness about HTTPS is impressive,\u201d Aas said. By lowering the cost to\nzero and making it easy for companies to migrate to a more secure web, the next 5 million sites to\nadopt HTTPS will be even easier to attain, he said. \n\nLet\u2019s Encrypt efforts compliment additional efforts within the industry. In May, Google flipped the\nswitch on default HTTPS support for its free domain service provider Blogspot, upping the security\nante for the millions of users of the popular platform. The move is part of Google\u2019s larger HTTPS\neverywhere initiative, announced at Google I/O in 2014. \n\nIn June 2015, WordPress announced it would be serving all *.wordpress.com subdomains only over HTTPS\nby the end of 2015. Companies such as Facebook have supported HTTPS support since 2011. \n\n", "polarity": 0.16041666666666668, "subjectivity": 0.5458333333333334, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/firefox-47-fixes-13-vulnerabilities-removes-click-to-activate-plugin-whitelist/118544/", "date": "2016-06-08T00:00:00.000Z", "author": "Chris Brook", "title": "Firefox 47 Fixes 13 Vulnerabilities, Removes Click-To-Activate Plugin Whitelist", "body": "Mozilla fixed\u00a013 security\u00a0issues, including two critical vulnerabilities that could have led to\nspoofing and clickjacking, among other issues, when it updated Firefox to the latest build, Firefox\n47, this week. \n\nOne of the issues, a buffer overflow, could have resulted in a potentially exploitable crash\naccording to an advisory published by the company on Tuesday. According a security researcher that\ngoes by the handle firehack, the\u00a0overflow could have popped up\u00a0when the browser\u00a0parsed HTML5\nfragments in a foreign context. When a fragment was inserted into an existing document, it could\u2019ve\ncrashed the browser. \n\nThe second critical issue corresponds to not one, but several memory safety bugs reported by 14\ndifferent Mozilla developers and community members. The details of the bugs weren\u2019t revealed, but\naccording to the advisory the likeliness that some could be exploited to run arbitrary code was high\nenough that it warranted fixing. \n\nA handful of vulnerabilities branded high by the company were also fixed in Firefox this week,\nincluding two out-of-bounds write vulnerabilities and two use-after-free vulnerabilities. If\nexploited they could lead to privilege escalation, a potential crash, and persistent denial of\nservice attacks, to name a few outcomes. In addition to the DoS attack, an attacker would be\u00a0able\nto\u00a0manipulate pointerlock, a web API, so that it could lead to spoofing and clickjacking attacks,\nMozilla warns. \n\nFirefox 47\u00a0also switches all NPAPI plugins, other than Flash, to click-to-activate by default. \n\nThe whitelist plugin has been expired in the eyes of Mozilla developers for a while now. Mozilla\npreviously announced plans to completely remove support for NPAPI plugins in Firefox by the end of\n2016. This week\u2019s move should preemptively\u00a0help thwart attackers who have increasingly preyed on\nplugin exploits. Benjamin Smedberg, an Engineering Manager at Mozilla rationalized a few months ago\nthat there would be a minority of users affected by the move, but the bulk of the plugins are\nneither used nor relevant. Either way, users should still be able to activate them manually. \n\nFor the most part, plugins have remained a steady source of performance problems, crashes, and\nsecurity incidents for users, regardless of the browser.\u00a0Google\u2019s Chrome browser and Microsoft\u2019s\nEdge browser have already removed support for legacy plugins over the past year. \n\nThe latest Firefox update also brings a handful of aesthetic changes to the browser, including\nimprovements to YouTube playback, a sidebar for synced tabs, and a number of web platform\nchanges.\u00a0The update\u00a0can be applied\u00a0either through Firefox\u2019s update mechanism, through Firefox.com.\nSome Android users who\u00a0update Firefox through Google Play will be doing so for the last time.\nMozilla previously announced that\u00a0Firefox 47 is\u00a0the last version Android Gingerbread it will\nsupport. \n\n", "polarity": 0.07188172043010753, "subjectivity": 0.4490860215053763, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/stolen-twitter-credentials-latest-dataset-for-sale/118575/", "date": "2016-06-09T00:00:00.000Z", "author": "Michael Mimoso", "title": "Stolen Twitter Credentials Latest Dataset For Sale", "body": "Tens of millions of Twitter account records including cleartext passwords are up for sale on a black\nmarket site, the latest cache of bundled credentials for major online services to be made available. \n\nThe Twitter records have been analyzed by LeakedSource, which said in a post yesterday that a\nRussian hacker known as Tessa88 provided it was the data set. Tessa88 has also provided LeakedSource\nwith hundreds of millions of MySpace and VK.com credentials. \n\nAn anonymous LeakedSource representative told Threatpost today that Tessa88 is \u201ccloser to black\n[hat] than white.\u201d \n\n\u201cHe has some very big connections in the Russian hacker community,\u201d LeakedSource\u2019s representative\nsaid. \u201cWe know he has access to lots of data and is from Russia.\u201d \n\nLeakedSource said it has 32,888,300 Twitter records containing email addresses, usernames, secondary\nemails and plaintext passwords. LeakedSource said it does not believe Twitter was breached, but\nrather the victims had their credentials stolen by malware capable of sniffing passwords stored in\nChrome and Firefox. \n\n\u201cThat\u2019s just our very, very strong theory based on the proof provided. We\u2019ve seen various types of\nmalware but this would be along the lines of a RAT (remote administration tool),\u201d LeakedSource told\nThreatpost. \u201cGenerally these are used to DDoS websites but almost all of them have a single one\nclick button to force your victims to send their browser passwords. It would be the same thing that\npeople did when they hacked TeamViewer users.\u201d \n\nLeakedSource has shared its data with Twitter. A request for comment from Twitter was not returned\nin time for publication. It\u2019s believed Twitter could shortly force a password reset on affected\nusers. \n\nThe fact that the credentials are in plaintext, LeakedSource said, lends credence to the theory that\nTwitter was not breached. Instead they were stolen directly from users before they were encrypted. \n\n\u201cEnough of them are so difficult to decrypt that it is unlikely they were stolen from Twitter\nbecause they store passwords in Bcrypt,\u201d LeakedSource said, adding that a large number of users in\nthe data set have their passwords set as \u201c\u201d indicating the username is stored in the browser without\nthe password. \n\nA ZDNet report from today says the Twitter passwords are available for 10 Bitcoin, or about $5750\nUSD. \n\nAs for the passwords, the quality is poor. According to LeakedSource, the top Twitter password in\nthe data set is 123456 (120,417 times) with seven other permutations of that in the top 10 along\nwith \u201cqwerty\u201d and \u201cpassword.\u201d \n\nLeakedSource also theorizes that most of the malware infections were in Russia, given that more than\nsix million email domains in the data set are either mail.ru or yandex.ru domains. Yahoo, Hotmail\nand Gmail domains round out the top five. \n\nThe issue illustrates the risks associated with password reuse where one major collection of\ncredentials can take down user accounts across a number of web-based services. \n\n\u201cHonestly, as an industry we are in some pretty serious denial about passwords and password reuse,\u201d\nsaid Jessy Irwin, security empress at AgileBits, the makers of the 1Password password manager. \u201cIt\u2019s\nlow hanging fruit for hackers. The security industry focuses on the latest zero days and malware.\nMeanwhile, passwords are the same as they were 30 years ago \u2013 the weakest link in even the most\nsecure system,\u201d she said. \n\n", "polarity": 0.10199924414210129, "subjectivity": 0.45650982615268343, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/researcher-pockets-30000-in-chrome-bounties/118337/", "date": "2016-05-27T00:00:00.000Z", "author": "Michael Mimoso", "title": "Researcher Pockets $30,000 in Chrome Bounties", "body": "Security researcher Mariusz Mlynski is having a good month. \n\nHaving cashed in earlier in May to the tune of $15,500, Mlynski pocketed another $30,000 courtesy of\nGoogle\u2019s bug bounty program after four high-severity vulnerabilities were patched in the Chrome\nbrowser, each worth $7,500 to the white-hat hacker. \n\nOn Thursday afternoon, Google pushed out Chrome version 51.0.2704.63, which included 42 security\nfixes and a long list of payouts via its bounty program. \n\nMlynski was at the top of the list, scoring big cash prizes for two separate cross-origin bypasses\nin Blink, a web browser engine developed as part of Google\u2019s Chromium project. He also found cross-\norigin bypasses in Chrome extensions and extension bindings. \n\nMlynski is from Poland, and for years has been one of the dominant browser vulnerability\nresearchers, in particular at the annual Pwn2Own contest. In 2015, he used a cross-origin bug in\nFirefox to gain Windows admin privileges on a machine, earning himself $55,000; in 2014 he won\nanother $50,000 with chaining together two Firefox flaws to gain privilege escalation on a Windows\nmachine. \n\nRob Wu, a student at TU/e in the Netherlands, also earned a $7,500 bounty for a cross-origin bypass\nin extension bindings. Wu earned four bounties, good for $13,000. \n\nIn all, Google paid out 23 bounties for Chrome bugs; the other vulnerabilities patched Thursday were\nfound internally. The bugs that earned bounties are: \n\n[$7500][590118] High CVE-2016-1672: Cross-origin bypass in extension bindings. Credit to Mariusz\nMlynski. \n\n[$7500][597532] High CVE-2016-1673: Cross-origin bypass in Blink. Credit to Mariusz Mlynski. \n\n[$7500][598165] High CVE-2016-1674: Cross-origin bypass in extensions. Credit to Mariusz Mlynski. \n\n[$7500][600182] High CVE-2016-1675: Cross-origin bypass in Blink. Credit to Mariusz Mlynski. \n\n[$7500][604901] High CVE-2016-1676: Cross-origin bypass in extension bindings. Credit to Rob Wu. \n\n[$4000][602970] Medium CVE-2016-1677: Type confusion in V8. Credit to Guang Gong of Qihoo 360. \n\n[$3500][595259] High CVE-2016-1678: Heap overflow in V8. Credit to Christian Holler. \n\n[$3500][606390] High CVE-2016-1679: Heap use-after-free in V8 bindings. Credit to Rob Wu. \n\n[$3000][589848] High CVE-2016-1680: Heap use-after-free in Skia. Credit to Atte Kettunen of OUSPG. \n\n[$3000][613160] High CVE-2016-1681: Heap overflow in PDFium. Credit to Aleksandar Nikolic of Cisco\nTalos. \n\n[$1000][579801] Medium CVE-2016-1682: CSP bypass for ServiceWorker. Credit to KingstonTime. \n\n[$1000][583156] Medium CVE-2016-1683: Out-of-bounds access in libxslt. Credit to Nicolas Gregoire. \n\n[$1000][583171] Medium CVE-2016-1684: Integer overflow in libxslt. Credit to Nicolas Gregoire. \n\n[$1000][601362] Medium CVE-2016-1685: Out-of-bounds read in PDFium. Credit to Ke Liu of Tencent\u2019s\nXuanwu LAB. \n\n[$1000][603518] Medium CVE-2016-1686: Out-of-bounds read in PDFium. Credit to Ke Liu of Tencent\u2019s\nXuanwu LAB. \n\n[$1000][603748] Medium CVE-2016-1687: Information leak in extensions. Credit to Rob Wu. \n\n[$1000][604897] Medium CVE-2016-1688: Out-of-bounds read in V8. Credit to Max Korenko. \n\n[$1000][606185] Medium CVE-2016-1689: Heap buffer overflow in media. Credit to Atte Kettunen of\nOUSPG. \n\n[$1000][608100] Medium CVE-2016-1690: Heap use-after-free in Autofill. Credit to Rob Wu. \n\n[$500][597926] Low CVE-2016-1691: Heap buffer-overflow in Skia. Credit to Atte Kettunen of OUSPG. \n\n[$500][598077] Low CVE-2016-1692: Limited cross-origin bypass in ServiceWorker. Credit to Til Jasper\nUllrich. \n\n[$500][598752] Low CVE-2016-1693: HTTP Download of Software Removal Tool. Credit to Khalil Zhani. \n\n[$500][603682] Low CVE-2016-1694: HPKP pins removed on cache clearance. Credit to Ryan Lester and\nBryant Zadegan. \n\n", "polarity": 0.13556437389770729, "subjectivity": 0.3707848324514992, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/microsoft-sha-1-deprecation-final-countdown-begins/117783/", "date": "2016-05-03T00:00:00.000Z", "author": "Michael Mimoso", "title": "Microsoft SHA-1 Deprecation Final Countdown Begins", "body": "The home stretch of Microsoft\u2019s planned SHA-1 deprecation schedule has arrived. This summer, with\nthe planned release of the Windows 10 Anniversary Update, users should see signs that the weak\ncryptographic hash function is being phased out. \n\nMicrosoft said that once the anniversary update is rolled out, Microsoft Edge and Internet Explorer\nwill no longer display the lock icon in the address bar for any site signed with a SHA-1\ncertificate. \n\nDevelopers should see this happening soon in the Windows Insider Preview build, Microsoft said. \n\nLast November, Microsoft hinted that it would starting blocking SHA-1 signed TLS certificates this\nJune, moving up its scheduled deprecation of SHA-1 by more than six months. By February 2017,\nMicrosoft said last week, Edge and IE will block SHA-1 certs outright. \n\n\u201cThis update will be delivered to Microsoft Edge on Windows 10\u00a0and Internet Explorer 11 on Windows\n7, Windows 8.1 and Windows 10, and will only impact certificates that chain to a CA in the Microsoft\nTrusted Root Certificate program,\u201d Microsoft said in an announcement posted by the Microsoft Edge\nteam. \u201cBoth Microsoft Edge and Internet Explorer 11 will provide additional details in the F12\nDeveloper Tools console to assist site administrators and developers.\u201d \n\nCryptographers and mathematicians have been inching toward practical collision attacks against SHA-1\nfor close to a decade. Collision attacks happen when two separate inputs for a hash function\ngenerate the same hash, allowing an attacker to forge certificates and nudge malware and attacks\nonto systems as legitimate operations. \n\nMicrosoft is not the only technology provider to steer clear of SHA-1. Google, last December,\nannounced its deprecation timeline and already by January of this year, users were seeing error\nmessages displayed if Chrome encountered a SHA-1 signed certificate. It promises that by Jan. 1,\n2017\u2014or perhaps by the end of June coinciding with Microsoft\u2019s early deprecation\u2014SHA-1 will be\nblocked in Chrome. \n\nMozilla is on the same Jan. 1 2017 timeline as well, after announcing in 2014 that it would no\nlonger trust SHA-1 in Firefox. \n\nThe accelerated timelines are a direct result of advances in SHA-1 collision attack research,\nnudging these attacks from the theoretical to the practical. The final dagger came last October in a\npaper called \u201cFreestart collision for full SHA-1\u201d that describes how current attacks can be modified\nto drastically reduce the cost and time to arrive at a SHA-1 collision. \n\nThe researchers estimated that their attack could, with modern cloud computing resources, be\naccomplished in fewer than three months at a cost of up to $120,000 USD. That\u2019s a drastic reduction\nfrom a 2012 paper that projected a practical collision would be possible by 2018 at a cost of\n$143,000. Government or criminal organizations with any measure of decent funding could pull off\nthis type of attack today, experts guess. \n\nCollision attacks against MD5 have been demonstrated in the wild, forcing an accelerated deprecation\nof that hash function. The most notorious MD5 collision was pulled off by the attackers behind the\nFlame malware. They were able to leverage the collision to sign malware as if it were coming from\nMicrosoft, and as a result, would be trusted. The Flame attackers used the forged Microsoft digital\ncertificate to perform a man-in-the-middle attack against victims, impersonating the Windows Update\nmechanism and installing malicious code instead. \n\n", "polarity": 0.05863095238095238, "subjectivity": 0.43273809523809526, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/google-updates-safe-browsing-alerts-for-network-admins/117291/", "date": "2016-04-08T00:00:00.000Z", "author": "Chris Brook", "title": "Google Updates Safe Browsing Alerts for Network Admins", "body": "Google beefed up the way it displays Safe Browsing Alerts for Network Administrators this week,\nadding information about sites peddling unwanted and malicious software as well as those caught\ncarrying out social engineering attacks. \n\nGoogle debuted the service, which notifies network admins after observing potentially damaging URLs\non their networks, in 2010. \n\nGoing forward, administrators will be alerted\u00a0when users stumble on sites that either fool them into\ngiving up sensitive information such as passwords or trick them into downloading unwanted software. \n\nAdmins will also be alerted when users visit sites that have a reputation for performing ad\ninjections and distributing malicious software, Trojans and viruses. \n\n\u201cNetwork administrators can use the data provided by our service to gain insights into the security\nand quality of their network. By working together, we can make it more challenging and expensive for\nattackers to profit from user harm,\u201d Nav Jagpal, a software engineer with Google, wrote on its\nSecurity Blog Wednesday. \n\nThe service previously only notified admins if one of their users navigated to a page that was seen\ndoling out drive-by download exploits, or visited a domain that was known for serving up malware or\nlaunching exploits. \n\nGoogle\u2019s Safe Browsing service, which helps protect users on Mozilla Firefox and Apple Safari, in\naddition to Google Chrome, still has an enormous reach\u00a0with approximately 1 billion users. According\nto the company\u2019s Transparency Report, just last week, more than 57 million users visited an unsafe\nsite and were notified by the service. \n\nThe service is constantly in flux. In February, Google tweaked the API associated with it\u00a0to detect\ndeceptive embedded content, such as download buttons or content in ads that trick\u00a0users into sharing\npasswords or calling tech support. \n\nGoogle\u2019s Safe Browsing Alerts for Network Administrators,\u00a0an extension of the\u00a0tools it provides to\nwebmasters, is less popular. The tool has still been successful however. Jagpal claims it monitors\n22,000 autonomous system numbers (ASNs) and sends 250 reports a day to 1300 admins who use it. \n\n", "polarity": 0.17121212121212123, "subjectivity": 0.581060606060606, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/firefox-45-fixes-40-vulnerabilities-22-critical/116682/", "date": "2016-03-09T00:00:00.000Z", "author": "Chris Brook", "title": "Firefox 45 Fixes 40 Vulnerabilities, 22 Critical", "body": "Much like Google, which updated Chrome yesterday, Mozilla released a new version of Firefox on\nTuesday, fixing 40 vulnerabilities in\u00a0the browser. \n\nThe update, Firefox 45, included eight bulletins rated critical and patched a handful of\nserious\u00a0use-after-free vulnerabilities and a pair of buffer overflow vulnerabilities. \n\nThe lion\u2019s share of the bugs, 14, were in the font-processing library, Graphite 2. Before it was\nfixed, a malicious Graphite font, coupled with a combination of uninitialized memory errors, out-of-\nbounds read errors, and out-of-bounds write errors, could\u2019ve led to a exploitable crash if loaded. \n\nThe use-after-free bugs existed in the browser\u2019s HTML5 string parser, WebRTC, XML, and SetBody\nfunction. All could have led to potentially exploitable crashes, according to advisories published\nby Mozilla\u2019s security team Tuesday. \n\nAnother vulnerability, a heap-based buffer overflow existed in the Network Security Services (NSS)\nlibraries. An attacker could have created a certificate that when parsed by NSS, would\u2019ve prompted\nthe library to crash or execute arbitrary code with the permissions of the user. As a result Mozilla\nis urging users to not only update to Firefox 45 to solve the issue, but encouraging anyone who\u2019s\ncoordinating projects running NSS 3.21 to upgrade to NSS 3.21.1. \n\nThe update also remedies miscellaneous memory safety hazards, memory leaks, and a address bar\nspoofing issue. \n\nThe address bar spoofing issue is interesting because before the update, a user could navigate from\none malicious page to another, but once they navigated back to the initial page, the URL bar\nwouldn\u2019t reflect the reloaded page. \n\n\u201cThis could be used to trick users into potentially treating the page as a different and trusted\nsite,\u201d Mozilla warns. \n\nAside from bug fixes, Mozilla claims the update also discontinues some of the browsers\u2019 lesser-used\nfunctionalities. The company has decided to do away with Tab Groups, a feature that let users group\ntabs together and disable older and \u201crarely used\u201d Android versions (3.0 to 3.2.6, Honeycomb). \n\n", "polarity": 0.06464646464646465, "subjectivity": 0.5503030303030303, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/firefox-to-block-flash-in-august-disable-in-2017/119419/", "date": "2016-07-21T00:00:00.000Z", "author": "Chris Brook", "title": "Firefox to Block Flash in August, Disable in 2017", "body": "Starting next year, Firefox users who navigate to pages that contain Flash will be asked for their\nconsent before activating the plugin. The move, long expected, comes as developers seek to curb\nusage of Flash in everyday web browsing. \n\nBenjamin Smedberg, Manager of Firefox Quality Engineering at Mozilla, confirmed in a blog post on\nWednesday that the browser will also begin blocking non-essential Flash content next month, as\nanother step to making the\u00a0browser run more efficiently. \n\n\u201cThese and future changes will bring Firefox users enhanced security, improved battery life, faster\npage load, and better browser responsiveness,\u201d Smedberg said before acknowledging that\u00a0the\nproliferation of sites running HTML5 for video has led to a gradual decline in Firefox crashes over\nthe last year and a half. \n\n \n\nBy blocking specific Flash files, particularly invisible ones, Smedberg, claims Firefox should be\nable to reduce Flash crashes and hangs further \u2013 by up to 10 percent. To start, the company is\nplanning to block a select few types of Flash, mostly SWF files. \n\nFlash content that can be blocked without being noticeable to Firefox users, and Flash content where\nit\u2019s possible to replace the functionality with HTML will come next and are candidates for a\nblocklist on\u00a0Github Mozilla is maintaining. \n\nSmedberg urged any developers still using Flash or Silverlight for video or games to plan on\nadopting HTML5, if they haven\u2019t already planned on doing so. Smedberg also urged anyone using Flash\nto measure content viewability for advertising to consider shifting to a new API it plans on\nunveiling later this year. Flash content used in this fashion will be added to the blocklist around\nthe same time Mozilla deploys the API. \n\nMozilla switched all NPAPI plugins to click-to-activate last month when it pushed Firefox 47.\nMozilla previously announced plans to remove support for NPAPI plugins by the end of 2016 but\naccording to\u00a0Wednesday\u2019s blog post, it appears the company has opted to push the deadline back to\nMarch 2017. Around\u00a0next March is also when Firefox\u2019s next Extended Support Release,\u00a0should see a\nrelease. That build\u00a0will support Silverlight and Java until the beginning of 2018, Smedberg said, to\nhelp users who may need more time. \n\nGoogle first began pausing Flash ads in Chrome last year and announced in May that the browser would\nmove away from Flash and default to HTML5 in Q4 later this year. \n\nThe platform\u00a0has managed to remain a constant source of frustration for users and system admins\nalike, even as companies continue to distance themselves from it. Earlier this month, in one of its\nbiggest updates of the year, Adobe was forced to patch 52 vulnerabilities in the platform, most of\nwhich could lead to remote code execution. Attackers have kept pace; using a zero day vulnerability\nin Flash to spread ransomware in April and another in June to hit high-profile targets in Russia and\nAsia. \n\n", "polarity": 0.07215397215397215, "subjectivity": 0.2834561834561834, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/new-brazilian-banking-trojan-uses-windows-powershell-utility/120016/", "date": "2016-08-19T00:00:00.000Z", "author": "Tom Spring", "title": "New Brazilian Banking Trojan Uses Windows PowerShell Utility", "body": "Microsoft\u2019s PowerShell utility is being used as part of a new banking Trojan targeting Brazilians.\nResearchers made the discovery earlier this week and say the high quality of the Trojan is\nindicative of Brazilian malware that is growing more sophisticated. \n\nThe banking Trojan is identified as \u201cTrojan-Proxy.PowerShell.Agent.a\u201d and is one of the most\ntechnically advanced Brazilian malware samples discovered, said Fabio Assolini, a senior security\nresearcher with Kaspersky Lab\u2019s Global Research and Analysis Team in a Securelist blog\u00a0on Thursday. \n\nThe banking Trojan is being delivered via a phishing campaign where emails are masquerading as a\nreceipt from a mobile carrier. A malicious .PIF (Program Information File) attachment is used to\nattack the target\u2019s PC. PIF files tell MS-DOS applications how to run in Windows environments and\ncan contain hidden BAT, EXE or COM programs that automatically execute after the host file is run. \n\nIn the case of \u201cTrojan-Proxy.PowerShell.Agent.a\u201d the PIF file changes the proxy configuration in\nInternet Explorer to a malicious proxy server that redirects connections to phishing pages for\nBrazilian banks, Assolini said. Those changes in the system are made using a PowerShell script. \n\nThe browser aspect of the attack is identical to how cybercriminals have exploited proxy auto-config\n(PAC) files in previous attacks, Assolini said. PAC files are designed to enable browsers to\nautomatically select which proxy server to use to get a specific URL. \n\n\u201cIt\u2019s the same technique used by malicious PACs that we described in 2013, but this time no PACs are\nused; the changes in the system are made using a PowerShell script,\u201d Assolini wrote. Not only are\nInternet Explorer users affected, but also users of Firefox and Chrome. \n\nThe malware has no command and control communication. Instead, once the .PIF file is launched, the\n\u201cpowershell.exe\u201d process is spawned and the command line \u201c-ExecutionPolicy Bypass -File\n%TEMP%\\599D.tmp\\599E.ps1\u201d is cued. This is an attempt to bypass PowerShell execution policies,\nAssolini said. The malware changes the file prefs.js, inserting the malicious proxy change. \n\nAfter being infected by \u201cTrojan-Proxy.PowerShell.Agent.a\u201d, if a user tries to access some of the\nwebsites listed in the script, they will be redirected to a phishing domain hosted at the malicious\nproxy server. The proxy domains used in the attack use dynamic DNS services and their goal is to\nredirect all traffic to a server located in the Netherlands, where there are several phishing pages\nfor Brazilian banks, according to Assolini. \n\nAccording to Kaspersky Lab, Brazil was the most infected country when it comes to banking Trojans in\nQ1 2016. \n\n\u201cAttackers (developing Brazilian malware) are investing time and money to develop solutions where\nthe malicious payload is completely hidden under a lot of obfuscation and code protection,\u201d notes a\nSecurelist post from March. That stands in stark contrast to Brazilian malware that not long ago was\ndescribed as simple and easy to detect. \n\nResearchers believe Brazilian cybercriminals have upped their game by adopting new techniques as a\nresult of collaboration with their European counterparts. \n\n", "polarity": 0.08364242424242424, "subjectivity": 0.41158268398268405, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/chrome-53-fixes-address-spoofing-vulnerability-32-other-bugs/120305/", "date": "2016-09-01T00:00:00.000Z", "author": "Chris Brook", "title": "Chrome 53 Fixes Address Spoofing Vulnerability, 32 Other Bugs", "body": "Google continued its onslaught of summer Chrome patches Wednesday\u00a0when it pushed out version 53 of\nthe browser, fixing 33 bugs, half of which were rated \u201chigh\u201d severity by the company. \n\nGoogle paid at least\u00a0$56,500 in rewards to researchers who discovered vulnerabilities in the browser\nthis time through. The company is still determining how much to award several researchers\u00a0who found\nbugs, while\u00a0two\u00a0vulnerabilities marked Wednesday\u00a0were ultimately not applicable to the company\u2019s bug\nbounty program. \n\nThe vulnerabilities that received the highest payout \u2013 $7,500 each \u2013 were two cross site scripting\nvulnerabilities in Blink, a web browser engine present in the browser, and a script injection\nvulnerability in the browser\u2019s extensions functionality. The rest of the vulnerabilities branded\n\u201chigh\u201d severity were mostly heap overflows in PDFium,\u00a0Chrome\u2019s default PDF reader. \n\nThe update also fixes two address-spoofing vulnerabilities, including one\u00a0uncovered\u00a0by researcher\nRafay Baloch a few weeks ago.\u00a0The flaw stemmed from how browsers\u2019 address bars\u00a0mishandled Unicode\ncharacters such as\u00a0\u201c|\u201d in\u00a0Arabic and Hebrew. Mozilla paid Baloch a $1,000 reward in August for\ndisclosing how the issue affected Firefox. It appears the vulnerability, marked \u201cmedium\u201d severity by\nChrome\u2019s Security Team, netted Baloch $3,000 from Google.\u00a0Details around the second address spoofing\nvulnerability, credited to \u201canonymous\u201d are scant. \n\nChrome has seen a steady uptick in patches over the past few months. Last month\u2019s update \u2013 version\n52 \u2013 saw 48 bugs fixed by the company; May\u2019s update saw 42 bugs fixed. \n\nHere\u2019s the full list of bugs fixed in Chrome 53 that earned rewards: \n\n[$7500][628942] High CVE-2016-5147: Universal XSS in Blink. Credit to anonymous [$7500][621362] High\nCVE-2016-5148: Universal XSS in Blink. Credit to anonymous [$7500][573131] High CVE-2016-5149:\nScript injection in extensions. Credit to Max Justicz \u00a0(http://web.mit.edu/maxj/www/)\n[$5000][637963] High CVE-2016-5150: Use after free in Blink. Credit to anonymous [$5000][634716]\nHigh CVE-2016-5151: Use after free in PDFium. Credit to anonymous [$5000][629919] High\nCVE-2016-5152: Heap overflow in PDFium. Credit to GiWan Go of Stealien [$3500][631052] High\nCVE-2016-5153: Use after destruction in Blink. Credit to Atte Kettunen of OUSPG [$3000][633002] High\nCVE-2016-5154: Heap overflow in PDFium. Credit to anonymous [$3000][630662] High CVE-2016-5155:\nAddress bar spoofing. Credit to anonymous [$3000][625404] High CVE-2016-5156: Use after free in\nevent bindings. Credit to jinmo123 [$TBD][632622] High CVE-2016-5157: Heap overflow in PDFium.\nCredit to anonymous [$TBD][628890] High CVE-2016-5158: Heap overflow in PDFium. Credit to GiWan Go\nof Stealien [$TBD][628304] High CVE-2016-5159: Heap overflow in PDFium. Credit to GiWan Go of\nStealien [$n/a][622420] Medium CVE-2016-5161: Type confusion in Blink. Credit to\n62600BCA031B9EB5CB4A74ADDDD6771E working with Trend Micro\u2019s Zero Day Initiative [$n/a][589237]\nMedium CVE-2016-5162: Extensions web accessible resources bypass. Credit to Nicolas Golubovic\n[$3000][609680] Medium CVE-2016-5163: Address bar spoofing. Credit to Rafay Baloch PTCL Etisalat\n(http://rafayhackingarticles.net) [$2000][637594] Medium CVE-2016-5164: Universal XSS using\nDevTools. Credit to anonymous [$1000][618037] Medium CVE-2016-5165: Script injection in DevTools.\nCredit to Gregory Panakkal [$TBD][616429] Medium CVE-2016-5166: SMB Relay Attack via Save Page As.\nCredit to Gregory Panakkal [$500][576867] Low CVE-2016-5160: Extensions web accessible resources\nbypass. Credit to @l33terally, FogMarks.com (@FogMarks) \n\n", "polarity": 0.11, "subjectivity": 0.3929629629629628, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/data-stealing-mac-os-x-backdoor-uncovered/120397/", "date": "2016-09-07T00:00:00.000Z", "author": "Chris Brook", "title": "Data-Stealing Mac OS X Backdoor Uncovered", "body": "Researchers on Wednesday\u00a0confirmed that\u00a0an OS X variant of a recently discovered family of cross-\nplatform backdoors exists. \n\nStefan Ortloff, a researcher with Kaspersky Lab\u2019s Global Research and Analysis Team, identified the\nfamily of backdoors called Mokes in January, but it wasn\u2019t until Tuesday that an OS X variant was\ndiscovered. Ortloff wrote\u00a0a technical breakdown of the backdoors, including the\u00a0Linux and Windows\niterations and the new OS X variant, in a series of\u00a0posts on Securelist. \n\nSimilar to the\u00a0Linux and Windows variants, the OS X backdoor specializes in capturing audio and\ntaking screenshots every 30 seconds from a victim\u2019s machine. \n\nThe variant, Backdoor.OSX.Mokes.a, can also monitor removable storage\u2014such as whether a USB thumb\ndrive is connected to the machine, and can also monitor the file system for Office documents such\nas\u00a0.docx, .doc, .xlsx, and .xls files. \n\nThe backdoor can also execute arbitrary commands on the system, something the attacker can oversee\nand fine-tune, along with what\u2019s monitored, via filters in the backdoor\u2019s command and control\nserver. \n\nOrtloff notes the OS X sample he analyzed was already unpacked but that he believes it\u2019s usually\npacked, as the Linux variant he saw in January. After it\u2019s\u00a0executed, the backdoor\u00a0copies itself to a\nhandful of locations, including any caches that belong to Skype, Dropbox, Google, and Firefox. The\ntechnique is similar to the Linux counterpart, which after execution copied itself to locations\nbelonging to Dropbox and Firefox. \n\nAfter it establishes a connection with its command and control server \u2013 via HTTP on TCP port 80\u2013 the\nbackdoor communicates \u2013 via TCP port 443 \u2013 using\u00a0AES-256 encryption. \n\nOrtloff expected to see Mac OS X samples back in January, after noticing\u00a0the Windows and Linux\nvariants; they just never surfaced. \n\nIt was only after Ortloff was able to obtain the Linux variant, Backdoor.Linux.Mokes.a that he was\nable to extract its binary and discover the Windows variant, Backdoor.Win32.Mokes.imv. \n\nOrtloff doesn\u2019t get into the OS X backdoor\u2019s infection vector, or how widespread its footprint may\nbe. Nonetheless, based on his description, the Mokes OS X backdoor is a sophisticated piece of\nmalware. \n\nA request for comment on the backdoor to Apple was not immediately returned on Wednesday. \n\nWhile not unheard of\u2013 attackers have been poking holes in OS X and more so, iOS as of late \u2013 OS X\nbackdoors have been few and far between as of late. \n\nIn 2012 researchers with Kaspersky Lab\u2019s GReAT team intercepted an APT campaign that used a Mac OS X\nbackdoor to target Uyghur activists.\u00a0That backdoor was circulated via targeted emails which\ncontained a .zip file, .jpeg file, and OS X application. Once executed, the application connected to\nits C+C and\u00a0let\u00a0the attacker execute arbitrary commands and access the infected machine\u2019s files. \n\nOn the whole, Mac malware has emerged as a palpable threat over the last few years. WireLurker,\ndiscovered by researchers at Palo Alto Networks, was capable of stealing system information and data\nstored on mobile devices running iOS. Two other threats unearthed by the company,\u00a0XcodeGhost,\nappended malicious code to a number of popular iOS apps, and\u00a0YiSpecter abused Apple Enterprise\nProgram certificates to push adware. \n\n", "polarity": 0.09958677685950414, "subjectivity": 0.4710973370064279, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/browser-address-bar-spoofing-vulnerability-disclosed/119951/", "date": "2016-08-17T00:00:00.000Z", "author": "Michael Mimoso", "title": "Browser Address Bar Spoofing Vulnerability Disclosed", "body": "Chrome, Firefox and likely other major browsers are afflicted by a vulnerability that allows\nattackers to spoof URLs in the address bar. \n\nWhile Mozilla said it has patched the flaw in the affected Android version of the Firefox browser,\nGoogle said Chrome will be fixed in an upcoming September release. \n\nSome details about the flaw were disclosed yesterday by researcher Rafay Baloch, who presented a\npaper on the broader topic of address bar spoofing in March at Black Hat Asia in Singapore. \n\nBaloch said in a post to his personal website that the current issue lies in the fact that Chrome\nand Firefox for Android mishandle the rendering of Unicode characters such as \u201c|\u201d from Arabic and\nHebrew. Those are generally displayed right to left, and when combined with an IP address that\ncontains a mishandled character, the browser will flip the URL address to right to left. \n\nAs Baloch explains, the logical order of characters would be \u201c127.0.0.1/|/http://example.com/, but\nthat would get flipped in the address bar to display \u201chttp://example.com/|/127.0.0.1.\u201d \n\n\u201cThe IP address part can be easily [hidden] especially on mobile browsers by selecting a long URL\n(google.com/fakepath/fakepath/fakepath/\u2026 /127.0.0.1) in order to make the attack look more\nrealistic,\u201d Baloch wrote. \u201cIn order to make the attack more realistic, a unicode version of padlock\ncan be used in order to demonstrate the presence of SSL.\u201d \n\nThe vulnerability (CVE-2016-5267) behaved differently in Firefox for Android, Baloch said, in that\nit did not require an IP address to trigger it. Instead, Arabic right-to-left characters would\nproduce the same result. \n\n\u201cMozilla was informed of the issue which affects Firefox for Android.\u00a0 This did not affect desktop\nversions of Firefox,\u201d said Mozilla principal security engineer Dan Veditz. \u201cMozilla has fixed the\nissue in the current version of Firefox for Android (patched Aug. 2). Users should always make sure\nto update to the latest version of Firefox for the most-recent security updates and features.\u201d \n\nMozilla confirmed it paid Baloch a $1,000 reward for his disclosure. \n\nSince the user would see the intended destination site first in the address bar, which is known as\nOmnibox in Chrome, it\u2019s unlikely they would be suspicious, Baloch said. \u201c[A] variation of similar\nvulnerability has also been discovered in several other browsers that are still undergoing a fix\nthere,\u201d Baloch wrote. \u201cI am refraining from disclosing them. Details will be disclosed, once a fix\nhas been landed.\u201d \n\nBaloch\u2019s Black Hat Asia talk, meanwhile, focused on mobile browsers, Android in particular, and he\npresented attacks that bypassed security policies such as the Same Origin Policy, in addition to\naddress bar and content spoofing vulnerabilities, among others. \n\n", "polarity": 0.07589285714285715, "subjectivity": 0.4274644945697577, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "http://www.darkreading.com/vulnerabilities---threats/lastpass-fixes-serious-security-flaw-in-chrome-firefox-extensions/d/d-id/1328466", "date": "2017-03-23T00:00:00.000Z", "author": "Dark Reading Staff", "title": "LastPass Fixes Serious Security Flaw in Chrome, Firefox Extensions", "body": "Password manager LastPass has fixed a serious vulnerability in its browser extensions for Google\nChrome, Mozilla Firefox, and Microsoft Edge. The flaw was discovered by Google's Tavis Ormandy,\nreports Network World. It could have been exploited to access extensions' internal commands and\nsteal passwords or personal information.\n\nLastPass has put a workaround in place to provide protection from malicious codes and plans to fully\nfix the flaw in updated versions.\n\nOrmandy later reported another vulnerability in the Firefox extension, which LastPass said was\nlinked to the first. The problem was immediately fixed in a new version of the extension 4.1.36a\nreleased the next day.\n\n\"No password changes are required of users at this time,\" say LastPass developers.\n\nRead details on Network World.\n\n", "polarity": 0.028114478114478116, "subjectivity": 0.23939393939393938, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "http://www.darkreading.com/cloud/year-2016-sees-record-deployment-of-https-by-firefox-chrome-/d/d-id/1327790", "date": "2016-12-27T00:00:00.000Z", "author": "Dark Reading Staff", "title": "Year 2016 Sees Record Deployment Of HTTPS By Firefox, Chrome ", "body": "The year 2016 has seen a record of sorts in the history of HTTPS with most pages viewed on the Web\nand more than half of Web pages loaded by Firefox and Chrome guaranteeing secure browsing by turning\non HTTPS, reports digital rights group Electronic Frontier Foundation (EFF). HTTPS adoption is\nbecoming standard all over although most of east and southeast Asia are still lagging behind, EFF\nadds.\n\nIncrease in use of HTTPS is attributed to growing publicity, awareness about surveillance and web\nserver capability progress. More and more websites are now securing visitors by turning on HTTPS\nwith the help of Let\u2019s Encrypt which provided secure connection for more than 21 million sites this\nyear. The US government has also encouraged use of HTTPS but the crucial push, says EFF, has come\nfrom hosting services, including Wordpress.com, Shopify, Tumblr and OVH, which have made protected\nconnection a default for their sites.\n\nRead details at\u00a0EFF.\n\n", "polarity": 0.2630952380952381, "subjectivity": 0.494047619047619, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "http://www.darkreading.com/endpoint/google-wont-trust-symantec-and-neither-should-you/a/d-id/1328682", "date": "2017-04-19T00:00:00.000Z", "author": "Mike Baukes", "title": "Google Won't Trust Symantec and Neither Should You", "body": "News that Google may be imposing a series of restrictions in Chrome against digital certificates\nissued by\u00a0Symantec\u00a0is but the latest and most remarkable salvo in a dispute that stretches back\nyears. Google is leveraging its prominence to force companies to confront their cyber risk - a vital\nadvance in fostering proactive digital resilience. How\u00a0Symantec\u00a0responds will have relevance far\nbeyond any one corporate conflict.  Claiming\u00a0Symantec\u00a0was far too lax and borderline negligent in\nissuing its certificates, Google recently announced a proposal to gradually reject them, as well as\nany authorities tied to the\u00a0Symantec\u00a0root certificates. Any certificate authorities that derive\ntheir key chain from\u00a0Symantec\u2019s root will also face the same restrictions; some major names fall\ninto this category, such as VeriSign and Thawte.  Despite the nonchalance of\u00a0Symantec\u2019s response,\nthis is a potentially monumental step taken by Google. Browsers gatekeep the Internet to some\ndegree: Chrome, Firefox, Safari, Edge/Explorer; Google, Mozilla, Apple, Microsoft. These are the\napplications and companies that determine how people interface with the Internet. Furthermore, they\ndetermine when a security problem takes on enough risk to be unilaterally rejected in the interest\nof their users. We\u2019ve seen this before with encryption strength, cipher suites, even plugins like\nFlash and Java. These four companies hold the keys, as it were, for big picture technological\nevolution-- and the future of technology is resilience.  With this proposal, Google thus sets up the\nfirst real roadblock for\u00a0Symantec\u2019s business model. Google Chrome has about 60% of the browser\nmarket share. When Google drops support for an application or certificate for security purposes, it\naffects the browsing habits of the majority of Internet users.\u00a0Symantec\u00a0certificates, and those from\nits subsidiaries, will have demonstrably less value in Chrome once these restrictions start being\nenforced. This acute depreciation in the usefulness of a\u00a0Symantec\u00a0certificate, should, and probably\nwill, cause en masse replacement with less problematic certificates. As the sole purpose of a\ncertificate is to provide a trusted source verifying that the site is valid, secure, and private,\nsuch a public rebuke of\u00a0Symantec\u2019s integrity could be a crushing blow.\n\nInsecure practices such as the certificate problems\u00a0Symantec\u00a0had are not just academic examples of\nbad technology, but possibilities for real world damage. It should be apparent now that the digital\neconomy is the economy. There is no retrograde motion left to us as a society when it comes\ntechnology and its integration into daily life. As such, only resilient digital services can\nsurvive. Those which impose too much risk or cannot weather the attacks, outages, breaches, and\nproblems of the digital landscape will lose the trust of the people, and of the other companies who\nrely upon those services to function.\n\nDoing the Right Thing Wouldn\u2019t\u00a0Symantec\u00a0want to issue certificates in the most secure way possible -\nnot merely to avoid Google\u2019s wrath, but to do right by the enterprise customers who purchase their\ncertificates? It seems not. Imagine the administrative overhead, cost, and time it would take for\nSymantec\u00a0to change a system which, according to Google, has been broken for years. With no apparent\npressing need to break from standard operating procedure,\u00a0Symantec\u00a0has not made those changes, even\nafter earning nasty press about how shoddy their issuance practices really are.  This begs the\nquestion: How does enterprise technology evolve from here, without the prodding of a tech\nconglomerate? In a digital ecosystem of interdependent parts, large scale changes are slow and\nusually painful, as different parts change and grow at different speeds, leaving others behind to\ncatch up or fade away. Google\u2019s decision to restrict certificates issued by\u00a0Symantec\u00a0and its\nsubsidiaries acts as a catalyst for this evolution, because Google is directly impacting\u00a0Symantec\u2019s\nbusiness as a certificate authority by imposing security measures that their certificate process\ndoes not meet.\n\nBusinesses who rely on websites to drive revenue will not want to worry about whether their\nSymantec-issued certificate will cause problems for some 60% of their visitors. There are reasonably\npriced alternatives readily available, issued by firms able to provide an actual trustworthy\ncertificate to their customers. These business decisions will ultimately affect\u00a0Symantec\u2019s bottom\nline, perhaps providing an impetus for them to take seriously the security problems they have\nbrushed off for years.  As bad as this is for\u00a0Symantec, the real problems will affect those\ncompanies and individuals relying on the company\u2019s certificates. Google\u2019s rebuke will repel\npotential visitors who use the Chrome browser from visiting sites using\u00a0Symantec\u00a0certificates, while\nalso calling the businesses\u2019 reputations into question, as Chrome identifies them as untrustworthy\nsites. This is an unfortunate result for those trying to avoid this very fate by buying certificates\nfrom\u00a0Symantec\u00a0in the first place.  Imagine this very plausible scenario: your company uses Chrome\nand relies on a web application hosted on a server using a\u00a0Symantec\u00a0certificate to conduct business.\nChrome stops trusting that server, such that in the blink of an eye, none of your co-workers can\naccess the website without jumping through some serious hoops. Some percentage of Chrome users will\nlikely alter their browsing habits, and some percentage of websites will likely trade out their\nSymantec\u00a0certificates for another brand.  In the bigger picture, we should expect to see more\nprivate-sector driven enforcement of security practices. The public interest lies in every component\nof our digital environment being as resilient as possible, so that we can all use services without\ntaking on an undue amount of risk. But when a private company has no profit motive to reduce their\ncyber risk, and instead chooses to knowingly continue bad practices, how can this public good be\nachieved? In order for real digital resilience to be kindled and spread, companies will need to\nbecome proactive - not wait for the death knell of a war with Google to begin changing their ways.\n\n[Check out the two-day Dark Reading Cybersecurity Crash Course at Interop ITX, May 15 & 16, where\nDark Reading editors and some of the industry's top cybersecurity experts will share the latest data\nsecurity trends and best practices.]\n\n", "polarity": 0.0413961038961039, "subjectivity": 0.4627104377104376, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "http://www.darkreading.com/mobile/more-than-half-of-android-devices-run-outdated-browsers/d/d-id/1327483", "date": "2016-11-15T00:00:00.000Z", "author": "Kelly Sheridan", "title": "More Than Half Of Android Devices Run Outdated Browsers", "body": "A new pool of data from cloud-based authentication provider Duo Security found more than half (59%)\nof Android devices are running out-of-date Chrome browsers. This leaves users \u2013 and the\norganizations they work for \u2013 vulnerable to attack.\n\nTo gauge enterprise risk amid the rise of BYOD programs, Duo Security researchers analyzed the\nsecurity vulnerabilities of browsers on 3 million smartphones and PCs.\n\nJust over one million devices surveyed were running Windows desktop, the most common OS in the data.\nOne million of devices surveyed were powered by Android. Chrome was the most popular browser,\nrunning on 36% of all devices surveyed.\n\nOverall, across all devices and browsers, 42% of the devices Duo studied were using outdated\nbrowsers.\u00a0Fifty-seven percent of all browsers on Android devices were out of date.\n\nAndroid users running Chrome had worse habits than average (59% running outdated), despite Chrome's\ndefault setting of auto-updating on restart. The disparity is due to a small number of Android users\nwho run Firefox; they tend to be more up-to-date than Chrome users, says Mike Hanley, director of\nsecurity at Duo Security.\n\nHanley says that as a result of platform fragmentation, most Android devices rely on carriers and\nmanufacturers to release operating systems for their specific phone. While auto-updating usually\nresults in fewer out-of-date devices, it can't help when there isn't an option to update.\n\n\"Ultimately, auto-updating helps the situation in which you're forced to run an outdated operating\nsystem, but it doesn't fix it,\" he explains.\n\nFor example, Chrome for Android is currently only releasing new versions for Jelly Bean and up.\nThere aren't many devices older than that, Hanley notes. However, if Chrome stopped supporting Jelly\nBean, 4% of Android users would be stuck with old versions of both Android and Chrome.\n\n\"Many other software developers will drop support for old Android versions faster, since they don't\nhave the resources of Google to continually test relatively ancient phones,\" he says. \"This leads to\nusers being stuck with outdated versions of Chrome.\"\n\nGoogle Chrome was the most dominant browser in the study, running on 36% of devices. Internet\nExplorer was next at 29%, followed by Firefox (12%), Safari Mobile (8%), Safari (7%), Chrome Mobile\n(3%), Microsoft Edge (3%), AppleMail (1%), and Chrome Mobile iOS (1%).\n\n\"As with many complex software projects, browser bugs with security implications are frequently\ndiscovered and patched,\" Hanley says. \"Attackers can chain attacks together, using one as the\nfoothold for the next, so the risk increases as more bugs are fixed in newer versions.\"\n\nA successful attack can be used to deploy ransomware, exfiltrate corporate data, and aid further\nattacks, he adds.\n\nSome 30% of devices were not password-protected. More than 20,000 had been tampered with, which\nmakes them more of a security risk because they could have already been infected with malware.\n\n\"The 30% of Android devices that don't have a screen lock passcode, pattern, or fingerprint reader\nimplies a surprising lack of caution on the users' part, particularly given that these devices are\nbeing used as part of secure access to corporate resources,\" Hanley says.\n\nMany of the browsers analyzed were running old and vulnerable versions of Flash, including Internet\nExplorer (62%), Safari (32%), Firefox (32%), and Chrome (11%). Security flaws in old versions of\nFlash can lead to data leaks and remote code execution. This makes it easier for hackers to assume\ncontrol over an affected system.\n\n\"Flash frequently updates to patch security bugs, and given that Flash shows up anywhere from online\ngames to ads, it's critical to stay up to date so you and your company's data stay as safe as\npossible,\" he says.\n\nAs the workforce becomes increasingly mobile, security pros and IT managers may want to rethink\ntheir approaches to update security. Oftentimes, businesses and educational institutions will lock\ntheir operating systems so users can't install unauthorized software, said Hanley.\n\n\"Unfortunately, this often also prevents auto-update tools from functioning properly,\" he continued.\n\"Configuring your endpoints to auto-update as much as possible reduces risk and lifts the burden on\nIT administrators from doing mundane software updates.\"\n\nGoing forward, he expects more software - not just browsers - will transition to a Chrome-style\nupdate model, in which the new version is silently installed then automatically used when the user\nrestarts their browser or device.\n\n", "polarity": 0.09192672998643146, "subjectivity": 0.4294323835368612, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/google-fixes-unicode-phishing-vulnerability-in-chrome-58-firefox-standing-pat/125099/", "date": "2017-04-20T00:00:00.000Z", "author": "Chris Brook", "title": "Google Fixes Unicode Phishing Vulnerability in Chrome 58, Firefox Standing Pat", "body": "Google fixed a handful of issues when it released the latest version of its browser, Chrome 58, on\nWednesday, including a vulnerability that could have made it easier for\u00a0an attacker to carry out a\nphishing attack with Unicode domains. \n\nThe vulnerability, based on Punycode \u2013 a way to represent Unicode with foreign characters \u2013 has been\nmaking headlines since it was disclosed last Friday. Discovered by Chinese researcher Xudong Zheng,\nthe bug relies on tricking Chrome into bringing users to sites that appear legitimate. The sites\ncould then convince\u00a0victims to enter personal login or financial credentials. \n\nPhishing with Unicode Domains \u2013 https://t.co/bn9dMG0L1t \n\n\u2014 Xudong Zheng (@Xudong_Zheng) April 14, 2017 \n\n \n\nZheng claims he disclosed the bug to Google on January 20 and that it was incorporated into beta\nbuilds on March 24, before finally getting fixed on Wednesday. \n\nThe bug, considered medium severity, was one of 29 issues Google fixed on Wednesday. \n\nThree of the vulnerabilities were marked critical by Google, including a heap use after free in the\nbrowser\u2019s Print Preview feature, and a pair of type confusion bugs \u2013 one in PDFium, Google\u2019s open\nsource PDF software library, and another in Blink, Chromium\u2019s rendering engine. \n\nGoogle paid out $14,000 to researchers for their findings, a relatively modest sum after the company\npaid out nearly $55,000 in January for bugs in Chrome 56, and $38,000 in March for bugs in Chrome\n57. \n\nThe update came the same day that Mozilla pushed out a new version of its browser, Firefox 53 and\nFirefox ESR 52.1. \n\nMozilla fixed six critical bugs with the update, including a pair of out-of-bounds write\nvulnerabilities, a pair of use-after-free vulnerabilities, a buffer overflow, and an origin\nconfusion. If exploited, all of the bugs, except for the origin confusion flaw, could have resulted\nin a potentially exploitable crash. The origin confusion, which stemmed from reloading pages with\nredirects, could have only led to a cross-site scripting (XSS) attack. \n\nForty-one vulnerabilities were fixed with the update. Counting the nearly two dozen memory safety\nbugs fixed in the browser and ESR versions 45.9 and 52.1., 64 vulnerabilities were fixed with the\nupdate. \n\nZheng claims the same URL spoofing vulnerability that existed in Chrome also exists in Firefox, but\nit appears Mozilla is holding off fixing it for now. \n\nGervase Markham, a software engineer for the Mozilla Foundation, said earlier this week that Firefox\nusers should turn on the browser\u2019s Safe Browsing feature to help thwart phishing attacks like the\none uncovered by Zheng. Markham, who\u2019s also a lead developer of Bugzilla, said that if Mozilla were\nto start putting restrictions on scripts that happen to look like Latin, such as Cyrillic, it would\nbe \u201cmaking that script a second-class citizen because not as much can be represented using it.\u201d \n\nZheng\u2019s research relies on using Unicode characters, which can represent Cyrillic and Greek\nalphabets, to mimic Latin letters and in turn trick user\u2019s eyes. \n\n\u201cThere is no perfect solution to this problem,\u201d Markham wrote on Bugzilla Tuesday, \u201cHuman languages\nare messy, inconsistent, and wonderful. Different scripts have letters which clash with each other.\nIf you don\u2019t want to be attacked this way, buy a domain in a TLD which doesn\u2019t allow it. If your TLD\ndoes allow it, lobby your registry. In the mean time, Firefox users have Safe Browsing to protect\nthem from actual phishing attempts, whether they use IDN lookalikes or not.\u201d \n\nMozilla published a FAQ dubbed \u201cIDN Display Algorithm\u201d in response to the bug which Markham says\nclearly illustrates the organization\u2019s stance. \n\n\u201cYou may not agree with it, but it\u2019s our considered position, so please do not comment further here\nunless you have new information to add which you genuinely believe has not been considered,\u201d Markham\nwrote. \n\nZheng is encouraging Firefox users to limit their exposure to the bug by going to the browser\u2019s\nabout:config settings and setting network.IDN_show_punycode to true. By doing this Firefox will\nalways display IDN domains in its Punycode form, something that should make it easier to identify\nmalicious domains, the researcher claims. \n\n", "polarity": 0.08826581027667985, "subjectivity": 0.4488389328063241, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/05/why-you-should-ditch-adobe-shockwave/", "date": "2014-05-21T00:00:00.000Z", "author": "Brian Krebs", "title": "Why You Should Ditch Adobe Shockwave", "body": "This author has long advised computer users who have Adobe\u2018s Shockwave Player installed to junk the\nproduct, mainly on the basis that few sites actually require the browser plugin, and because it\u2019s\nyet another plugin that requires constant updating. But I was positively shocked this week to learn\nthat this software introduces a far more pernicious problem: Turns out, it bundles a component\u00a0of\nAdobe Flash that is more than 15 months behind on security updates, and which can be used to\nbackdoor virtually any computer running it.\n\nMy re-education on this topic comes courtesy of Will Dormann, a computer security expert who writes\nthreat advisories for Carnegie Mellon University\u2019s CERT. In a recent post on the release of the\nlatest bundle of security updates for Adobe\u2019s Flash player, Dormann commented that Shockwave\nactually provides its own version of the Flash runtime, and that the latest Shockwave version\nreleased by Adobe has none of the recent Flash fixes.\n\nWorse yet, Dormann said, the current version of Shockwave for both Windows and Mac systems\u00a0lacks any\nof the Flash security fixes released since January 2013.\u00a0By my count, Adobe has issued nearly 20\nseparate security updates for Flash since then, including fixes for several dangerous zero-day\nvulnerabilities.\n\n\u201cFlash updates can come frequently, \u00a0but Shockwave not so much,\u201d Dormann said. \u201cSo architecturally,\nit\u2019s just flawed to provide its own Flash.\u201d\n\nDormann said he initially alerted the public to this gaping security hole in 2012 via this advisory,\nbut that he first told\u00a0Adobe about this lackluster update process back in 2010.\n\nAs if that weren\u2019t bad enough, Dormann said it may actually be easier for attackers to exploit Flash\nvulnerabilities via Shockwave than it is to exploit them directly against the standalone Flash\nplugin itself. That\u2019s because Shockwave has several modules that don\u2019t opt in to trivial exploit\nmitigation techniques built into Microsoft Windows, such as\u00a0SafeSEH.\n\n\u201cSo not only are the vulnerabilities there, but they\u2019re easier to exploit as well,\u201d Dormann said.\n\u201cOne of the things that helps make a vulnerability more difficult [to exploit] is how many of the\nexploit mitigations\u00a0a vendor opts in to. In the case of Shockwave, there are some mitigations\nmissing in a number of modules, such as SafeSEH. \u00a0 Because of this, it may be easier to exploit a\nvulnerability when Flash is hosted by Shockwave, for example.\u201d\n\nAdobe spokeswoman Heather Edell confirmed that CERT\u2019s information is correct, and that the next\nrelease of Shockwave Player will include the updated version of Flash Player.\n\n\u201cWe are reviewing our security update process in order to mitigate risks in Shockwave Player,\u201d Edell\nsaid.\n\nFor those who need Shockwave Player installed for some reason, Microsoft\u2019s Enhanced Mitigation\nExperience Toolkit (EMET 4.1 or higher)) can help prevent the exploitation of this weakness.\n\nNot sure whether your computer has Shockwave installed?\u00a0If you visit\u00a0this link\u00a0and see a short\nanimation, it should tell you which version of Shockwave you have installed. If it prompts you to\ndownload Shockwave (or in the case of Google Chrome for some reason just automatically downloads the\ninstaller), then you don\u2019t have Shockwave installed. To remove Shockwave, grab Adobe\u2019s uninstall\ntool here. Mozilla Firefox users should note that the presence of the \u201cShockwave Flash\u201d plugin\nlisted in the Firefox Add-ons section denotes an installation of Adobe Flash Player plugin \u2014 not\nAdobe Shockwave Player.\n\n", "polarity": 0.029710144927536233, "subjectivity": 0.46243961352657015, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/05/adobe-microsoft-issue-critical-security-fixes-2/", "date": "2014-05-13T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Microsoft Issue Critical Security Fixes", "body": "Adobe and Microsoft today each released software updates to plug dangerous security holes in their\nproducts. Adobe pushed patches to fix holes in Adobe Acrobat/Reader as well as Flash Player.\nMicrosoft issued eight update bundles to nix at least 13 security vulnerabilities in Windows and\nsoftware that runs on top of the operating system.\n\nA majority of the patches released by Microsoft are fixes for products that run in enterprise\nenvironments. Chief among the consumer-facing Microsoft updates is cumulative patch for Internet\nExplorer that fixes a pair of flaws in all supported versions of IE. This patch also includes the\nemergency update that Microsoft released earlier this month to address a zero-day vulnerability in\nIE. Microsoft also issued fixes for several Office vulnerabilities. This month\u2019s batch also includes\na .NET fix, which in my experience is best installed separately.\n\nAdobe released a fix for its Flash Player software that corrects at least six security flaws.\u00a0The\nFlash update brings the media player to\u00a0v. 13.0.0.214\u00a0on Windows and Mac systems, and\u00a0v.\n11.2.202.359\u00a0for Linux users. To see which version of Flash you have installed, check\u00a0this link.\n\nIE10/IE11 and Chrome should auto-update their versions of Flash. If your version of Flash on Chrome\n(on either Windows, Mac or Linux) is not yet updated, you may just need to close and restart the\nbrowser.\n\nThe most recent versions of Flash are available from the\u00a0Adobe download center, but beware\npotentially unwanted add-ons, like\u00a0McAfee Security Scan). To avoid this, uncheck the pre-checked box\nbefore downloading, or grab your OS-specific Flash download from\u00a0here. Windows users who browse the\nWeb with anything other than Internet Explorer will need to apply this patch twice, once with IE and\nagain using the alternative browser (Firefox, Opera, e.g.).\n\nIn addition, there is an update available that fixes at least 11 security holes in versions of Adobe\nAcrobat and Adobe Reader. Windows and Mac users should update to the latest \u00a0version (11.0.07).\n\n", "polarity": 0.0984375, "subjectivity": 0.4578125, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/04/adobe-update-nixes-flash-player-zero-day/", "date": "2014-04-28T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe Update Nixes Flash Player Zero Day", "body": "Adobe Systems Inc. has shipped an emergency security update to fix a critical flaw in its Flash\nPlayer software that is currently being exploited in active attacks. The exploits so far appear to\ntarget Microsoft Windows users, but updates also are available for Mac and Linux versions of Flash.\n\nThe Flash update brings the media player to v. 13.0.0.206 on Windows and Mac systems, and v.\n11.2.202.356 for Linux users. To see which version of Flash you have installed, check this link.\n\nIE10/IE11 and Chrome should auto-update their versions of Flash. If your version of Flash on Chrome\n(on either Windows, Mac or Linux) is not yet updated, you may just need to close and restart the\nbrowser.\n\nThe most recent versions of Flash are available from the Adobe download center, but beware\npotentially unwanted add-ons, like McAfee Security Scan). To avoid this, uncheck the pre-checked box\nbefore downloading, or grab your OS-specific Flash download from here. Windows users who browse the\nWeb with anything other than Internet Explorer will need to apply this patch twice, once with IE and\nagain using the alternative browser (Firefox, Opera, e.g.).\n\nIn its advisory about this vulnerability, Adobe said it is aware of reports that an exploit for the\nflaw (CVE-2014-0515) exists in the wild, and is being used to target Flash Player users on the\nWindows platform.\n\nThat advisory credits Kaspersky Lab with reporting the vulnerability, and indeed Kaspersky published\na blog post today detailing two new exploits that have been spotted in the wild attacking this\nvulnerability. Both exploits, according to Kaspersky, have been used in so-called \u201cwatering hole\u201d\nespionage attacks, an increasingly common attack technique involving the compromise of legitimate\nwebsites specific to a geographic area which the attackers believe will be visited by end users who\nbelong to the organization they wish to penetrate.\n\nThis is the second time in as many months that Adobe has shipped a patch to fix a zero-day\nvulnerability in Flash. What\u2019s more, a well-known Flash exploitation technique was implicated in a\nseparate Internet Explorer zero-day attack that Microsoft warned about yesterday.\n\nWhile Flash is required by a great many Web sites, there is no reason to let this browser plug-in\nrun content automatically when you visit a Web site. Rather, I\u2019ve urged readers to rely on \u201cclick-\nto-play,\u201d a feature built into Google Chrome, Mozilla Firefox and Opera (and available via add-ons\nin Safari)\u00a0that blocks plugin activity by default, replacing the plugin content on the page with a\nblank box. Users who wish to view the blocked content need only click the boxes to enable the Flash\nor Java content inside of them. For more on setting up your browser to use click-to-play for Flash\nand other browser plugins, see Help Keep Threats at Bay with Click to Play.\n\n", "polarity": 0.142965367965368, "subjectivity": 0.46355519480519486, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/04/adobe-microsoft-push-critical-fixes/", "date": "2014-04-08T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Microsoft Push Critical Fixes", "body": "Adobe and Microsoft each issued updates to fix critical security vulnerabilities in their software\ntoday. Adobe patched its Flash Player software and Adobe AIR. Microsoft issued four updates to\naddress at least 11 unique security flaws, including its final batch of fixes for Office 2003 and\nfor systems powered by\u00a0Windows XP.\n\nTwo of the four patches that Microsoft issued come with Redmond\u2019s \u201ccritical\u201d rating (its most\nsevere), meaning attackers or malware can exploit the flaws to break into vulnerable systems without\nany help from users. One of the critical patches is a cumulative update for Internet Explorer\n(MS14-018); the other addresses serious issues with Microsoft Word and Office Web apps (MS14-017),\nincluding a fix for a zero-day vulnerability that is already being actively exploited. More\ninformation on these and other patches are available here.\n\nAs expected, Microsoft also used today\u2019s patch release to pitch XP users on upgrading to a newer\nversion of Windows, warning that attackers will begin to zero in on XP users even more now that\nMicrosoft will no longer be issuing security updates for the 13-year-old operating system. From\nMicrosoft\u2019s Technet blog:\n\nMicrosoft offers free\u00a0a Windows XP data transfer tool\u00a0to ease the hassle of upgrading to a newer\nversion of Windows. I would submit that if your PC runs XP and came with XP installed, that it might\nbe time to upgrade the computer hardware itself in addition to the software.\u00a0In any case, beyond\nthis month is not the greatest idea, and it\u2019s time for XP users to consider other options. Don\u2019t\nforget that there are many flavors of Linux that will run quite happily on older hardware.\u00a0If you\u2019ve\nbeen considering the switch for a while, take a few distributions for a spin using one of dozens of\nflavors of Linux available\u00a0via Live CD.\n\nADOBE\n\nAdobe fixed at least four vulnerabilities in Flash, all of them critical. The company says it is not\naware of any exploits in the wild against the flaws. The latest version is v. 13.0.0.182 for\nWindows, Mac and Linux systems. The Adobe advisory for the Flash update is here.\n\nThis link\u00a0will tell you which version of Flash your browser has installed.\u00a0IE10/IE11\u00a0for Windows\n8.0/8.1 and Chrome should auto-update their versions of Flash. If your version of Flash on\u00a0Chrome\n(on either Windows, Mac or\u00a0Linux) is not yet updated, you may just need to close and restart the\nbrowser. The version of Chrome that includes this fix is 34.0.1847.116\u00a0for Windows, Mac, and Linux\n(to learn what version of Chrome you have, click the stacked bars to the right at of the address\nbar, and select \u201cAbout Google Chrome\u201d from the drop down menu).\n\nThe most recent versions of Flash are available from the\u00a0Adobe download center, but beware\npotentially unwanted add-ons, like McAfee Security Scan). To avoid this, uncheck the pre-checked box\nbefore downloading, or grab your OS-specific Flash download from\u00a0here. Windows users who browse the\nWeb with anything other than Internet Explorer will need to apply this patch twice, once with IE and\nagain using the alternative browser (Firefox, Opera, e.g.).\n\nIf you use Adobe AIR (required by some desktop software products such as Pandora, e.g.,), you\u2019ll\nneed to make sure that\u2019s updated as well. AIR usually does a good job of checking for new versions\non startup. If you\u2019re not sure whether you have AIR installed or what version it\u2019s at, see these\ndirections. The latest version is 13.0.0.83, and is available for manual download here.\n\n", "polarity": 0.12452948942310647, "subjectivity": 0.5299346044026895, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/03/adobe-microsoft-push-security-updates/", "date": "2014-03-11T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Microsoft Push Security Updates", "body": "Adobe and Microsoft today each released software updates to fix serious security flaws in their\nproducts. Adobe pushed an update that plugs a pair of holes in its Flash Player software. Microsoft\nissued five updates, including one that addresses a zero-day vulnerability in Internet Explorer that\nattackers have been exploiting of late.\n\nMicrosoft\u2019s five bulletins address 23 distinct security weaknesses in Microsoft Windows, Internet\nExplorer and Silverlight. The Internet Explorer patch is rated critical for virtually all supported\nversions of IE, and plugs at least 18 security holes, including a severe weakness in IE 9 and 10\nthat is already being exploited in targeted attacks.\n\nMicrosoft notes that the exploits targeting the IE bug seen so far appear to perform\u00a0a check for the\npresence of Microsoft\u2019s Enhanced Mitigation Experience Toolkit (EMET); according to Microsoft, the\nexploits fail to proceed if EMET is detected. I\u2019ve recommended EMET on several occasions, and would\nencourage any Windows users who haven\u2019t yet deployed this tool to spend a few minutes reading this\npost and consider taking advantage of it to further harden their systems.\u00a0The latest version \u2014 4.1 \u2014\nis available\u00a0at this link\u00a0and requires\u00a0Microsoft\u2019s .NET Framework 4 platform. For those of you who\ndon\u2019t mind beta-testing software, Microsoft has released a preview version of the next generation of\nEMET \u2014 EMET 5.0 Technical Preview.\n\nThis month\u2019s updates include a fix for another dangerous bug\u00a0\u2014 deep within the operating system on\njust about every major version of Windows \u00a0\u2014 that also was publicly disclosed prior to today\u2019s\npatches. Microsoft\u2019s Technet Blog has more details on these and other bulletins released today.\n\nReaders still using Windows XP should remember that after next month, Microsoft will stop releasing\nsecurity updates for that version of Windows. Microsoft recently announced that it will make\navailable for free a Windows XP data transfer tool to ease the hassle of upgrading to a newer\nversion of Windows. I would submit that if your PC runs XP and came with XP installed, that it might\nbe time to upgrade the computer hardware itself.\n\nIn any case, using Windows XP beyond next month is not the greatest idea, and it\u2019s time for XP users\nto consider other options. Don\u2019t forget that there are many flavors of Linux that will run quite\nhappily on older hardware.\u00a0If you\u2019ve been considering the switch for a while, take a few\ndistributions for a spin using one of dozens of flavors of Linux available\u00a0via Live CD.\n\nFLASH UPDATE\n\nAdobe\u2019s Flash update brings the media player to \u00a0v.\u00a012.0.0.77\u00a0on Windows and Mac OS X. \u00a0This link\nwill tell you which version of Flash your browser has installed. IE10 and Chrome should auto-update\ntheir versions of Flash. If your version of\u00a0Chrome\u00a0(on either Windows, Mac or Linux) is not yet\nupdated to v.\u00a012.0.0.77,\u00a0you may just need to close and restart the browser.\n\nThe most recent versions of Flash are available from the\u00a0Adobe download center, but beware\npotentially unwanted add-ons, like McAfee Security Scan).\u00a0To avoid this, uncheck the pre-checked box\nbefore downloading, or grab your OS-specific Flash download from\u00a0here.\u00a0Windows users who browse the\nWeb with anything other than Internet Explorer will need to apply this patch twice, once with IE and\nagain using the alternative browser (Firefox,\u00a0Opera, e.g.).\u00a0Adobe does not appear to have released\nany updates for AIR as it often does when pushing new Flash patches.\n\nAs always, please drop a note in the comments section if you experience any issues with the updates\nreleased today.\n\n", "polarity": 0.07483901515151516, "subjectivity": 0.41365530303030307, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/02/ios-update-quashes-dangerous-ssl-bug/", "date": "2014-02-23T00:00:00.000Z", "author": "Brian Krebs", "title": "iOS Update Quashes Dangerous SSL Bug", "body": "Apple on Friday released a software update to fix a serious security weakness in its iOS mobile\noperating system that allows attackers to read and modify encrypted communications on\u00a0iPhones, iPads\nand other iOS devices.\u00a0The company says it is working to produce a patch for the same flaw in\ndesktop and laptop computers powered by its OS X operating system.\n\nThe update \u2014 iOS 7.0.6 \u2014 addresses a glaring vulnerability in the way Apple devices handle encrypted\ncommunications. The flaw allows an attacker to intercept, read or modify encrypted email, Web\nbrowsing, Tweets and other transmitted data, provided the attacker has control over the WiFi or\ncellular network used by the vulnerable device.\n\nThere has been a great deal of speculation and hand-waving about whether this flaw was truly a\nmistake or if it was somehow introduced intentionally as a backdoor. And it\u2019s not yet clear how long\nthis bug has been included in Apple\u2019s software. In any case, if you have an iPhone or iPad or other\niOS device, please take a moment to apply this fix.\n\nGenerally, I advise users to avoid downloading and installing security updates when they are using\npublic WiFi or other untrusted networks. On the surface at least, it would seem that the irony of\nthis situation for most users is that iOS devices will download updates automatically as long as\nusers are connected to a WiFi network. But as several folks have already pointed out on Twitter,\nApple uses code-signing on iOS and app updates to ensure that rogue code can\u2019t be pushed to devices.\n\nI will update this post when Apple ships the patch for OS X systems. For now, it may be wise to\navoid using Safari on OS X systems. As Dan Goodin at Ars Technica writes, \u201cbecause the Google Chrome\nand Mozilla Firefox browsers appear to be unaffected by the flaw, people should also consider using\nthose browsers when possible, although they shouldn\u2019t be considered a panacea.\u201d\n\nFor a deeper dive on this vulnerability and its implications, check out this piece by Larry Seltzer\nat ZDNet, and this analysis by Google\u2019s Adam Langley.\n\nUpdate: Apple has fixed this and a number of other important issues with OS X, in this release.\n\n", "polarity": 0.03371212121212122, "subjectivity": 0.4439393939393939, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/02/adobe-pushes-fix-for-flash-zero-day-attack/", "date": "2014-02-04T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe Pushes Fix for Flash Zero-Day Attack", "body": "Adobe Systems Inc. is urging users of its Flash Player software to upgrade to a newer version\nreleased today. The company warns that an exploit targeting a previously unknown and critical Flash\nsecurity vulnerability exists in the wild, and that this flaw allows attackers to take complete\ncontrol over affected systems.\n\nThe latest versions that include the fix for this flaw (CVE-2014-0497) are listed by operating\nsystem in the chart below.\n\nThe Flash update brings the media player to version 12.0.0.44\u00a0for a majority of users on Windows and\nMac OS X. This link will tell you which version of Flash your browser has installed. IE10/IE11 and\nChrome should auto-update their versions of Flash to v. 12.0.0.44. If your version of Flash on\nChrome (on either Windows, Mac or Linux) is not yet updated, you may just need to close and restart\nthe browser. The version of Chrome that includes this fix is 32.0.1700.107 for Windows, Mac, and\nLinux (to learn what version of Chrome you have, click the stacked bars to the right at of the\naddress bar, and select \u201cAbout Google Chrome\u201d from the drop down menu).\n\nThe most recent versions of Flash are available from the Adobe download center, but beware\npotentially unwanted add-ons, like McAfee Security Scan). To avoid this, uncheck the pre-checked box\nbefore downloading, or grab your OS-specific Flash download from here. Windows users who browse the\nWeb with anything other than Internet Explorer will need to apply this patch twice, once with IE and\nagain using the alternative browser (Firefox, Opera, e.g.).\n\nAdobe did not include many details in its advisory about the nature of the attack that prompted this\nupdate, other than to credit two researchers from Kaspersky Lab\u00a0for reporting the vulnerability. As\nsuch, this flaw may be related to this Feb. 3 blog post by Kaspersky, which references Adobe Flash\nin the context of a long-running cyber espionage campaign that Kaspersky has dubbed \u201cThe Mask\u201d; the\nsecurity firm says it plans to release more details about this campaign at its analyst summit next\nweek.\n\n", "polarity": 0.1040079365079365, "subjectivity": 0.4612301587301587, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/02/security-updates-for-shockwave-windows/", "date": "2014-02-11T00:00:00.000Z", "author": "Brian Krebs", "title": "Security Updates for Shockwave, Windows", "body": "Adobe and Microsoft today each issued patches to fix critical security flaws in their software.\nMicrosoft\u2019s February Patch Tuesday includes seven patch bundles addressing at least 31\nvulnerabilities in Windows and related software. Adobe pushed out an update that fixes two critical\nbugs in its Shockwave Player.\n\nMore than half of the updates issued by Microsoft today earned a \u201ccritical\u201d rating \u2014 Microsoft\u2019s\nmost dire. That rating is assigned to vulnerabilities that can be exploited by malware or\nmalcontents to take complete, remote control over vulnerable systems \u2014 with no help from users.\n\nMicrosoft is urging Windows users to apply all of the available fixes, but for those who need to\nprioritize patches (organizations that typically test patches before deploying them enterprise-\nwide), Redmond places a special focus on MS14-007, a graphics vulnerability in Windows 7/8/8.1 and\nWindows Server 2007, 2012 and Windows RT.\n\nThe cumulative, critical security update for all versions of Internet Explorer (MS14-010) fixes two\ndozen vulnerabilities, including one that Microsoft says has already been publicly disclosed. The\nother patch that Microsoft specifically called out \u2014 MS14-011 \u2014 addresses a vulnerability in\nVBScript that could cause problems for IE users.\n\nMicrosoft also once again is encouraging Windows users who haven\u2019t already done so to consider\ninstalling and using its Enhanced Mitigation Experience Toolkit (EMET), a free tool that can help to\nsignificantly beef up the security of third-party applications that run on top of Windows. I would\nsecond their recommendation, and have reviewed EMET 4.0 here. The latest version \u2014 4.1 \u2014 is\navailable at this link and requires Microsoft\u2019s .NET Framework 4 platform.\n\nSpeaking of .NET, this month\u2019s updates includes a comprehensive patch for the .NET Framework;\nexperience has taught me to install these separately from other Windows patches, then reboot and\ninstall any .NET updates. I\u2019ve run into trouble in the past trying to install .NET updates alongside\nlots of other simultaneously, but your mileage my vary.\n\nFor more on today\u2019s Microsoft patches, check out the Microsoft Security Response Center blog, as\nwell as\u00a0Qualys\u2019s take on the updates.\n\nSeparately, Adobe has issued a critical patch for its Shockwave player software, which fixes two\nflaws and brings Shockwave to v.\u00a012.0.9.149\u00a0\u00a0on Mac and Windows systems. The latest version is\navailable here.\n\nIf you visit\u00a0this link\u00a0and see a short animation, it should tell you which version of Shockwave you\nhave installed. If it prompts you to download Shockwave, then you don\u2019t have Shockwave installed and\nin all likelihood don\u2019t need it. Firefox users should note that the presence of the \u201cShockwave\nFlash\u201d plugin listed in the Firefox Add-ons section denotes an installation of Adobe Flash Player\nplugin \u2014 not Adobe Shockwave.\n\n", "polarity": 0.09334733893557423, "subjectivity": 0.4780812324929973, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/06/adobe-microsoft-patch-flash-windows/", "date": "2013-06-11T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Microsoft Patch Flash, Windows", "body": "Patch Tuesday is again upon us:\u00a0Adobe today issued updates for Flash Player and AIR,\u00a0fixing the same\ncritical vulnerability in both products. Microsoft\u2018s patch bundle of five updates addresses 23\nvulnerabilities in\u00a0Windows, Internet Explorer, and Office, including one bug that is already being\nactively exploited.\n\nA majority of the vulnerabilities fixed in Microsoft\u2019s June patch batch \u2014 19 of them \u2014 are addressed\nin a cumulative update for Internet Explorer (MS13-047). The other fix that Microsoft called\nspecific attention to is MS13-051, which tackles a flaw in Office that \u201ccould allow remote code\nexecution if a user opens a specially crafted Office document..or previews or opens a specially\ncrafted email message in Outlook while using Microsoft Word as the email reader.\u201d\n\nThis Office flaw, which is present in the latest versions of Office 2003 and Microsoft Office for\nMac 2011, is already being exploited in targeted attacks, Microsoft said. According to the company\u2019s\nadvisory, this vulnerability was reported by Google.\u00a0These attacks fit the profile of previous\nzer0-day incidents, which use targeted email lures and previously unknown vulnerabilities to break\ninto high-value targets.\n\n\u201cWhen Google encounters flaws that exploit users\u2019 computers, even when the flaws are in other\ncompanies\u2019 software, we take strong action to mitigate those attacks,\u201d a Google spokesperson said in\nresponse to a request for comment. \u201cBased on the exploit and the way it has been utilized by\nattackers, we strongly believe the attacks to be associated with a nation-state organization.\u201d\n\nAdobe\u2019s Flash and AIR updates also fix a critical bug that was reported by Google\u2019s security team,\nalthough Adobe says it is not aware of any exploits or attacks in the wild against the vulnerability\naddress in its update. The latest Flash version is 11.7.700.224 for Windows and 11.7.700.225 for Mac\nOS X. \u00a0This link\u00a0will tell you which version of Flash your browser has installed. IE10 and Chrome\nshould auto-update their versions of Flash. If your version of Chrome is not yet updated to\u00a0v.\n11.7.700.225, you may just need to restart the browser.\n\nThe most recent versions of Flash are available from the\u00a0Adobe download center, but beware\npotentially unwanted add-ons, like McAfee Security Scan).\u00a0To avoid this, uncheck the pre-checked box\nbefore downloading, or grab your OS-specific Flash download from\u00a0here.\u00a0Windows users who browse the\nWeb with anything other than Internet Explorer will need to apply this patch twice, once with IE and\nagain using the alternative browser (Firefox,\u00a0Opera, e.g.).\n\nIn addition,\u00a0Adode AIR\u00a0(required by some applications like Pandora Desktop, for example) was updated\nto v. 3.7.0.2090 for Windows and Android, and 3.7.0.2100 for Mac OS X. Adobe AIR checks for and\nprompts you to install any available updates anytime you launch an application that uses AIR; in any\ncase, the download link is here. See the chart below for the updated version numbers for your\noperating system.\n\nUpdate, 8:05 p.m. ET: Added comment from Google.\n\nUpdate, June 12, 2:10 p.m. ET:\u00a0Microsoft modified its blog post to say the IE patch covers 19\nvulnerabilities, instead of 18. The above copy also has been changed to reflect that.\n\n", "polarity": 0.11603174603174601, "subjectivity": 0.43503968253968256, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/05/microsoft-adobe-push-critical-security-updates-2/", "date": "2013-05-14T00:00:00.000Z", "author": "Brian Krebs", "title": "Microsoft, Adobe Push Critical Security Updates", "body": "Microsoft and Adobe today each released updates to fix critical security holes in their software.\nMicrosoft\u2019s patch batch tackles at least 33 vulnerabilities in Windows and other products, including\na fix for a zero-day vulnerability in Internet Explorer 8 that attackers have been exploiting.\nSeparately, Adobe pushed security updates for Flash Player, Adobe Reader, Acrobat and Adobe AIR.\n\nMicrosoft\u2019s Patch Tuesday bundle includes two separate updates for Internet Explorer; the first\n(MS13-037) is a cumulative update for Internet Explorer. The second is a fix (MS13-038) specifically\nfor a critical bug in IE 8 that miscreants and malware have been using to break into Windows\ncomputers. Other, slightly less severe holes were fixed in Microsoft Publisher, Word, Visio and\nWindows Essentials.\n\nLast week, Microsoft released a stopgap \u201cFix-it\u201d tool to help blunt the threat from the IE8 zero-day\nflaw. If you installed that interim fix, Microsoft recommends taking a moment to disable it before\napplying today\u2019s patches.\n\n<soapbox>On a side note..Dear Microsoft: Please stop asking people to install Silverlight every time\nthey visit a Microsoft.com property. I realize that Silverlight is a Microsoft product, but it\nreally is not needed to view information about security updates. In keeping with the principle of\nreducing the attack surface of an operating system, you should not be foisting additional software\non visitors who are coming to you for information on how to fix bugs and vulnerabilities in\nMicrosoft products that they already have installed. </soapbox>\n\nAs it usually does on Microsoft\u2019s Patch Tuesday, Adobe used the occasion to push its own security\nupdates. A new version of Flash (v. 11.7.700.202 for Mac and Windows systems) fixes 13\nvulnerabilities. \u00a0IE 10 and\u00a0Google Chrome automatically update themselves to fix Flash flaws. This\nlink\u00a0should tell you which version of Flash your browser has installed.\u00a0If your version of Chrome is\nnot yet updated to v. 11.7.700.202, you may need to just restart the browser.\n\nThe most recent versions of Flash are available from the\u00a0Adobe download center, but beware\npotentially unwanted add-ons, like McAfee Security Scan).\u00a0To avoid this, uncheck the pre-checked box\nbefore downloading, or grab your OS-specific Flash download from\u00a0here.\u00a0Windows users who browse the\nWeb with anything other than Internet Explorer will need to apply this patch twice, once with IE and\nagain using the alternative browser (Firefox,\u00a0Opera, e.g.).\n\nIn addition, Adode AIR (required by some applications like Pandora Desktop, for example) was updated\nto v. 3.7.0.1860. Also, Adobe has released new versions of Adobe Reader and Acrobat that fix at\nleast 27 security holes in these products. See this link for more detail on those patches. Adobe\nsaid it is not aware of any active exploits or attacks in the wild targeting any of the issues\naddressed in these updates.\n\nAs always, please drop a note in the comments section if you experience problems applying any of\nthese updates.\n\n", "polarity": 0.033566433566433566, "subjectivity": 0.4057983682983683, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/03/critical-updates-for-windows-adobe-flash-air/", "date": "2013-03-12T00:00:00.000Z", "author": "Brian Krebs", "title": "Critical Updates for Windows, Adobe Flash, Air", "body": "Microsoft and Adobe each released patches today to plug critical security holes in their products.\nMicrosoft issued seven update bundles to address at least 19\u00a020 vulnerabilities in Windows and\nrelated software. Adobe released the fourth security update in nearly as many weeks for its Flash\nPlayer software, as well as a fix for\u00a0Adobe AIR.\n\nMicrosoft today began pushing out seven security patches, four of them rated \u201ccritical,\u201d meaning the\nflaws they fix could be used by malware or bad guys to break into unpatched systems with little or\nno help from users. The critical patches address bugs in Windows, Internet Explorer, Microsoft\nSilverlight, Microsoft Office and Microsoft SharePoint. Updates are available for Windows XP, Vista,\nWindows 7, Windows 8, Windows Server 2003, 2008 and 2012.\n\nMore information on the Microsoft patches is available at the Microsoft security response center\nblog, which also discusses some changes to the way security updates are applied to apps available\nthrough the Windows Store.\n\nThe update from Adobe brings Flash Player to version 11.6.602.180 on Windows and Mac OS X systems\n(see the chart below for the most recent version numbers on other operating systems). This patch\nfixes at least four security flaws in Flash Player. Adobe says it is not aware of any exploits or\nattacks in the wild targeting the issues addressed in this update. But that could change soon, so if\nyou have Flash installed (and most users do), please take a moment to update it.\n\nThis link\u00a0should tell you which version of Flash your browser has installed. The most recent\nversions are available from the\u00a0Adobe download center, but beware potentially unwanted add-ons, like\nMcAfee Security Scan).\u00a0To avoid this, uncheck the pre-checked box before downloading, or grab your\nOS-specific Flash download from\u00a0here.\n\nGoogle Chrome and Internet Explorer 10 have built-in auto-update features that should bring Flash to\nthe most recent version. The patched version of Flash for Chrome is\u00a011.6.602.180 for Windows,\nMacintosh and Linux, although\u00a0it does not appear that Google has pushed out this update yet.\u00a0Windows\nusers who browse the Web with anything other than Internet Explorer will need to apply this patch\ntwice, once with IE and again using the alternative browser (Firefox, Opera, e.g.).\n\nFinally, if you have Adobe AIR installed (required by some programs like Tweetdeck and Pandora\nDesktop), you\u2019ll want to update this program. AIR ships with an auto-update function that should\nprompt users to update when they start an application that requires it; the newest, patched version\nis 3.6.0.6090 for Windows, Mac, and Android.\n\n", "polarity": 0.08791666666666667, "subjectivity": 0.45722222222222225, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/02/flash-player-update-fixes-zero-day-flaws/", "date": "2013-02-27T00:00:00.000Z", "author": "Brian Krebs", "title": "Flash Player Update Fixes Zero-Day Flaws", "body": "Adobe has released an emergency update for its Flash Player software that fixes three critical\nvulnerabilities, two of which the company warns are actively being exploited to compromise systems.\n\nIn an advisory, Adobe said two of the bugs quashed in this update (CVE-2013-0643 and CVE-2013-0648)\nare being used by attackers to target Firefox users. The company noted that the attacks are designed\nto trick users into clicking a link which redirects to a Web site serving malicious Flash content.\n\nReaders can be forgiven for feeling patch fatigue with Flash:\u00a0This is the third security update that\nAdobe has shipped for Flash in the last month. On Feb. 12, Adobe released a patch to plug at least\n17 security holes in Flash. On Feb. 7, Adobe rushed out an update to fix two other flaws that\nattackers were already exploiting to break into vulnerable computers.\n\nUpdates are available for Windows, Mac and Linux installations of Flash (see the chart below for the\nappropriate version number). \u00a0This link\u00a0should tell you which version of Flash your browser has\ninstalled. The most recent versions are available from the\u00a0Adobe download center, but beware\npotentially unwanted add-ons, like McAfee Security Scan).\u00a0To avoid this, uncheck the pre-checked box\nbefore downloading, or grab your OS-specific Flash download from\u00a0here.\n\nChrome and Internet Explorer 10 have built-in auto-update features that should bring Flash to the\nmost recent version. The patched version of Flash for Chrome is\u00a011.6.602.171, which Google appears\nto have already pushed out to Chrome useres.\u00a0Windows users who browse the Web with anything other\nthan Internet Explorer will need to apply this patch twice, once with IE and again using the\nalternative browser (Firefox, Opera, e.g.).\n\n", "polarity": 0.05980392156862745, "subjectivity": 0.41274509803921566, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/02/microsoft-adobe-release-critical-security-updates/", "date": "2013-02-12T00:00:00.000Z", "author": "Brian Krebs", "title": "Fat Patch Tuesday", "body": "Adobe and Microsoft each have issued security updates to fix multiple critical vulnerabilities in\ntheir products. Adobe released updates for Flash Player, AIR and Shockwave; Microsoft pushed out a\ndozen patches addressing at least 57 security holes in Windows, Office, Internet Explorer, Exchange\nand .NET Framework.\n\nFive of the 12 patches Microsoft released today earned its most dire \u201ccritical\u201d label, meaning these\nupdates fix vulnerabilities that attackers or malware could exploit to seize complete control over a\nPC with no help from users.\n\nThirteen of the 57 bugs squashed in Microsoft\u2019s patch batch address issues with Internet Explorer;\nother critical patches fix problems in the Windows implementation of Vector Markup Language (VML),\nMicrosoft Exchange, and flaws in the way Windows handles certain media files. The remaining critical\npatch fixes a flaw that is present only on Windows XP systems.\n\nUpdates are available via Windows Update or from Automatic Update. A note about applying these\nWindows patches: Today\u2019s batch includes an update for .NET, which in my experience should be applied\nseparately. In nearly every case where I\u2019ve experienced problems updating Windows, a huge .NET patch\nsomehow gummed up the works. Consider applying the rest of the patches first, rebooting, and then\ninstalling the .NET update, if your system requires it.\n\nAnd for the second time in a week, Adobe has released an update for its Flash Player software. This\none addresses at least 17 \u00a0distinct vulnerabilities; unlike last week\u2019s emergency Flash Update, this\none thankfully doesn\u2019t address flaws that are already actively being exploited, according to Adobe.\nCheck the graphic below for the most recent version that includes the updates relevant to your\noperating system. This link should tell you which version of Flash your browser has installed. The\nmost recent versions are available from the Adobe download center, but beware potentially unwanted\nadd-ons, like McAfee Security Scan).\u00a0To avoid this, uncheck the pre-checked box before downloading,\nor grab your OS-specific Flash download from here.\n\nChrome and Internet Explorer 10 have built-in auto-update features that should bring Flash to the\nmost recent version. The patched version of Flash for Chrome is 11.6.602.167, which Google pushed\nout today.\u00a0Windows users who browse the Web with anything other than Internet Explorer will need to\napply this patch twice, once with IE and again using the alternative browser (Firefox, Opera, e.g.).\n\nAs Adobe does every time it releases a Flash Update, it has released a fix for Adobe AIR. If you\nhave that software installed, it can updated from this link.\n\nFinally, as the graphic above indicates, a fix for Adobe\u2019s Shockwave Player is available that fixes\nat least two flaws. The latest version of Shockwave is 12.0.0.112, available here. \u00a0You can find the\nnew version and an accounting of whether you have this program installed and its current version\nfrom this page. If you have this program installed update it; if that page offers a download, you\ndon\u2019t have Shockwave installed and probably don\u2019t need it.\n\n", "polarity": 0.12539354584809134, "subjectivity": 0.46877213695395503, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/02/critical-security-updates-for-adobe-reader-java/", "date": "2013-02-20T00:00:00.000Z", "author": "Brian Krebs", "title": "Critical Security Updates for Adobe Reader, Java", "body": "Adobe and Oracle each released updates to fix critical security holes in their software. Adobe\u2019s\npatch plugs two zero-day holes that hackers have been using to break into computers via Adobe Reader\nand Acrobat. Separately, Oracle issued updates to correct at least five security issues with Java.\n\nThe Java update comes amid revelations by Apple, Facebook and Twitter that employees at these\norganizations were hacked using exploits that attacked Java vulnerabilities on Mac and Windows\nmachines. According to Bloomberg News, at least 40 companies were targeted in malware attacks linked\nto an Eastern European gang of hackers that has been trying to steal corporate secrets.\n\nOracle\u2019s update brings Java on Windows systems to Java SE 7 Update 15, and Java 6 Update 41. Most\nconsumers can get by without Java installed, or least not plugged into the browser. Because of the\nprevalence of threats targeting Java installations, I\u2019d urge these users to remove Java or unplug it\nfrom the browser. If this is too much trouble, consider adopting a dual-browser approach, keeping\nJava unplugged from your main browser, and plugged in to a secondary browser that you only use to\nvisit sites that require the plugin. To find out if you have Java installed, visit java.com and\nclick the \u201cDo I have Java?\u201d link below the big red button. Existing users can update Java from the\nJava Control Panel, clicking the Update tab and then the \u201cUpdate Now\u201d button.\n\nApple has issued an update that brings Java up-to-date on security patches but also disables the\nJava plugin from Web browsers on the system. Apple also issued a malware removal tool that it said\nshould remove from Macs the most common variants of malware that used the most recent Java exploits.\n\nAdobe\u2019s update brings Reader XI to version 11.0.2 and Reader X to v. 10.1.6 on both Mac and windows\n(see the graphic below for other versions). This patch fixes a couple of critical flaws that Adobe\nsaid last week\u00a0hackers were exploiting to break into vulnerable systems.\n\nFinally, Firefox users may be happy to know that the newest version of the browser now includes its\nown PDF viewer. According to TheNextweb.com, Firefox 19 \u201cincludes\u00a0PDF.js, a JavaScript library\nintended to convert PDF files into HTML5, which was started by Andreas Gal and Chris Jones as a\nresearch project that eventually picked up steam within Mozilla Labs. Technically, the tool has been\nin\u00a0Firefox\u00a0for many versions, but you had to manually enable it.\u00a0The whole point of the built-in PDF\nviewer is to avoid having to use plugins with proprietary closed source code \u201cthat could potentially\nexpose users to security vulnerabilities,\u201d according to Mozilla. It also cuts down on extra bloat\nthat\u00a0Firefox\u00a0can already do: PDF viewing plugins have their own code for drawing images and text.\u201d\n\n", "polarity": 0.054124579124579124, "subjectivity": 0.44890572390572386, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/02/critical-flash-player-update-fixes-two-zero-days/", "date": "2013-02-07T00:00:00.000Z", "author": "Brian Krebs", "title": "Critical Flash Player Update Fixes 2 Zero-Days", "body": "Adobe today pushed out an emergency update that fixes at least two zero-day vulnerabilities in its\nubiquitous Flash Player software \u2014 flaws that attackers are already exploiting to break into\nsystems. Interestingly, Adobe warns that one of the exploits in use is designed to drop malware on\nboth Windows and Mac OS X systems.\n\nAdobe said in an advisory\u00a0that one of the vulnerabilities \u2014 CVE-2013-0634\u00a0\u2013 is being exploited in\nthe wild in attacks delivered via malicious Flash content hosted on websites that target Flash\nPlayer in Firefox or Safari on the Macintosh platform, as well as attacks designed to trick Windows\nusers into opening a Microsoft Word document delivered as an email attachment.\n\nAdobe also warned that a separate flaw \u2014\u00a0CVE-2013-0633\u00a0\u2014 is being exploited in the wild in targeted\nattacks designed to trick the user into opening a\u00a0Microsoft Word\u00a0document delivered as an email\nattachment which contains malicious Flash content. The company said the exploit for CVE-2013-0633\ntargets the\u00a0ActiveX version of Flash Player on Windows (i.e.\u00a0Internet Explorer\u00a0users).\n\nUpdates are available for Windows, Mac, Linux and Android users. The latest Windows and Mac version\nis v. 11.5.502.149, and is available from this link. Those who prefer a direct link to the OS-\nspecific downloads can grab them here. To find out if you have Flash installed and what version your\nbrowser may be running, check out this page.\n\nFlash Player installed with Google Chrome should automatically be updated to the latest Google\nChrome version, which will include Adobe Flash Player v. 11.5.31.139 for Windows, Macintosh and\nLinux. Likewise, Internet Explorer 10 for Windows 8 also includes an auto-update feature, which\nshould bring Flash to version 11.3.379.14 for Windows.\n\nAdobe\u2019s advisory notes that the vulnerability that has been used to attack both Mac and Windows\nusers was reported with the help of the Shadowserver Foundation, the federally funded technology\nresearch center\u00a0MITRE Corporation, and aerospace giant Lockheed Martin\u2018s computer incident response\nteam. No doubt there are some interesting stories about how these attacks were first discovered, and\nagainst whom they were initially deployed.\n\n", "polarity": 0.19666666666666668, "subjectivity": 0.45055555555555554, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/01/oracle-ships-critical-security-update-for-java/", "date": "2013-01-13T00:00:00.000Z", "author": "Brian Krebs", "title": "Oracle Ships Critical Security Update for Java", "body": "Oracle has released a software update to fix a critical security vulnerability in its Java software\nthat miscreants and malware have been exploiting to break into vulnerable computers.\n\nJava 7 Update 11 fixes a critical flaw (CVE-2013-0422) in Java 7 Update 10 and earlier versions of\nJava 7. The update is available via Oracle\u2019s Web site, or can be downloaded from with Java via the\nJava Control Panel.\u00a0Existing users should be able to update by visiting the Windows Control Panel\nand clicking the Java icon, or by searching for \u201cJava\u201d and clicking the \u201cUpdate Now\u201d button from the\nUpdate tab.\n\nThis update also changes the way Java handles Web applications. According to Oracle\u2019s advisory: \u201cThe\ndefault security level for Java applets and web start applications has been increased from \u201cMedium\u201d\nto \u201cHigh\u201d. This affects the conditions under which unsigned (sandboxed) Java web applications can\nrun. Previously, as long as you had the latest secure Java release installed applets and web start\napplications would continue to run as always. With the \u201cHigh\u201d setting the user is always warned\nbefore any unsigned application is run to prevent silent exploitation.\u201d\n\nIt\u2019s nice that Oracle fixed this vulnerability so quickly, but I\u2019ll continue to advise readers to\njunk this program altogether unless they have a specific need for it. For one thing, Oracle tried\n(and failed) to fix this flaw in an earlier update. Also, it seems malware writers are constantly\nfinding new zero-day vulnerabilities in Java, and I would not be surprised to see this zero-day\nsituation repeat itself in a month or so. Also, most users who have Java installed can get by just\nfine without it (businesses often have mission-critical operations that rely on Java).\n\nIf you need Java for a specific Web site, consider\u00a0adopting a two-browser approach. If you normally\nbrowse the Web with Firefox, for example, consider disabling the Java plugin in Firefox, and then\nusing an alternative browser (Chrome, IE9, Safari, etc.) with Java enabled to browse only the\nsite(s) that require(s) it.\n\n", "polarity": 0.131013986013986, "subjectivity": 0.5304953379953381, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/12/shocking-delay-in-fixing-adobe-shockwave-bug/", "date": "2012-12-19T00:00:00.000Z", "author": "Brian Krebs", "title": "Shocking Delay in Fixing Adobe Shockwave Bug", "body": "The Department of Homeland Security\u2019s U.S. Computer Emergency Readiness Team (US-CERT) is warning\nabout a dangerous security hole in Adobe\u2019s Shockwave Player that could be used to silently install\nmalicious code. The truly shocking aspect of this bug? U.S. CERT first warned Adobe about the\nvulnerability in October 2010, and Adobe says it won\u2019t be fixing it until February 2013.\n\nShockwave is a browser plug-in that some sites require. At issue is a feature of Adobe Shockwave\nthat allows the installation of \u201cXtras,\u201d downloadable components meant to interact with the media\nplayer. According to an advisory from US-CERT the problem is that Shockwave installs Xtras that are\nsigned by Adobe or Macromedia without prompting, which can allow an attacker to target\nvulnerabilities in older Xtras.\n\nFrom the advisory:\n\nUS-CERT warned that by convincing a user to view a specially crafted Shockwave content (e.g., a web\npage or an HTML email message or attachment), an attacker may be able to execute arbitrary code with\nthe privileges of the user.\n\nReached via email, an Adobe spokeswoman confirmed that US-CERT had alerted the company about the\nflaw in October 2010, but said Adobe is not aware of any active exploits or attacks in the wild\nusing this vulnerability.\n\n\u201cAdobe has been working on addressing this issue in the next major release of Adobe Shockwave\nPlayer, which is currently scheduled to be released in February 2013,\u201d Adobe\u2019s Wiebke Lips wrote.\n\nShockwave is one of those programs that I\u2019ve urged readers to remove or avoid installing. Like Java,\nit is powerful and very often buggy software that many people have installed but do not really need\nfor everyday Web browsing. Securing your system means not only making sure things are locked down,\nbut removing unneeded programs, and Shockwave is near the top of my list on that front.\n\nIf you visit this link and see a short animation, it should tell you which version of Shockwave you\nhave installed. If it prompts you to download Shockwave, then you don\u2019t have Shockwave installed and\nin all likelihood don\u2019t need it. Firefox users should note that the presence of the Shockwave Flash\nplugin listed in the Firefox Add-ons section denotes an installation of Adobe Flash Player plugin \u2014\nnot Adobe Shockwave.\n\nSpeaking of Java, Oracle shipped an update to its Java software, which brings the program to Java 7\nUpdate 10 or Java 6 Update 38. There are bug fixes with these releases, but no official security\nupdates. However, the Java 7 update does include some new functionality designed to make it easier\nto disable Java in the browser. Oracle is expected to stop shipping updates for Java 6 in February\n2013.\n\nThomas Kristensen, chief security officer of security firm Secunia said he believes \u201cthese features\ndo not make Java more secure in itself, however, it will likely make it easier for users to make\ntheir PCs more secure as it becomes easier to manage certain restrictions.\u201d Readers who want more\ninformation about how to disable Java in the browser, and adopt my recommendation for a two-browser\napproach to using Java, can consult this blog post. Bottom line: If you don\u2019t need Java, get rid of\nit.\n\n", "polarity": 0.11819108069108067, "subjectivity": 0.5436985686985689, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/11/java-zero-day-exploit-on-sale-for-five-digits/", "date": "2012-11-27T00:00:00.000Z", "author": "Brian Krebs", "title": "Java Zero-Day Exploit on Sale for \u2018Five Digits\u2019", "body": "Miscreants in the cyber underground are selling an exploit for a previously undocumented security\nhole in Oracle\u2019s Java software that attackers can use to remotely seize control over systems running\nthe program, KrebsOnSecurity has learned.\n\nThe flaw, currently being sold by an established member of an invite-only Underweb forum, targets an\nunpatched vulnerability in Java JRE 7 Update 9, the most recent version of Java (the seller says\nthis flaw does not exist in Java 6 or earlier versions).\n\nAccording to the vendor, the weakness resides within the Java class \u201cMidiDevice.Info,\u201d a component\nof Java that handles audio input and output. \u201cCode execution is very reliable, worked on all 7\nversion I tested with Firefox and MSIE on Windows 7,\u201d the seller explained in a sales thread on his\nexploit. It is not clear whether Chrome also is affected. \u201cI will only sell this ONE TIME and I\nleave no guarantee that it will not be patched so use it quickly.\u201d\n\nThe seller was not terribly specific on the price he is asking for this exploit, but set the\nexpected offer at \u201cfive digits.\u201d The price of any exploit is ultimately whatever the market will\nbear, but this is roughly in line with the last Java zero-day exploit that was being traded and sold\non the underground. In August, I wrote about a newly discovered Java exploit being folded into the\nBlackHole exploit kit, quoting the author of that crimeware tool as saying that \u201cthe price of such\nan exploit if it were sold privately would be about $100,000.\u201d\n\nI have repeatedly urged readers who have no use for Java to remove it from their systems entirely.\nThis is a very complex\u00a0 program that is widely installed (Oracle claims that some 3 billion devices\nrun Java), and those two qualities make it a favorite target for attackers. What\u2019s more, Java is a\ncross-platform technology, meaning that applications written to run in Java can run seamlessly\nacross multiple operating systems. Indeed, some 650,000 Mac users discovered this the hard way\nearlier this year, when the Flashback worm took advantage of an unpatched vulnerability that was\npresent in Apple\u2019s version of Java.\n\nApple has since taken steps to unplug Java from the browser in OS X, and this is the very approach\nI\u2019ve recommended for users who need Java for specific Web sites or applications (see: How to Unplug\nJava from the Browser).\u00a0 If you need Java for specific Web sites, I would suggest a two-browser\napproach. If you normally browse the Web with\u00a0Firefox, for example, consider disabling the Java\nplugin in Firefox, and then using an alternative browser (Chrome,\u00a0IE9,\u00a0Safari, etc.) with Java\nenabled to browse only the site that requires it.\n\n", "polarity": 0.04004132231404958, "subjectivity": 0.4214508723599632, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/10/adobe-ships-critical-fixes-for-shockwave-player/", "date": "2012-10-23T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe Ships Critical Fixes for Shockwave Player", "body": "Adobe has released a critical security update that plugs at least a half-dozen security holes in its\nShockwave media player software.\n\nAdobe recommends users of Adobe Shockwave Player 11.6.7.637 and earlier versions update to the\nnewest version 11.6.8.638, available here. Updates are available for Windows and Mac systems. In its\nadvisory on this update, Adobe says it is not aware of any active attacks against these flaws.\n\nBefore you try to update Shockwave, you should check to see if your system even has it installed. If\nyou visit this link and see a short animation, it should tell you which version of Shockwave you\nhave installed. If it prompts you to download Shockwave, then you don\u2019t have Shockwave installed and\nin all likelihood don\u2019t need it. If you update or install Shockwave, be on the lookout for pre-\nchecked \u201cextras\u201d; my test installation of this update tried to foist a 30-day trial of Norton\nInternet Security.\n\nNote that while Shockwave and Flash Player are both Adobe products, they are two separate things\n(Flash is far more abundant on the Web). I mention this because Flash Player still shows up as\n\u201cShockwave Flash\u201d in Mozilla Firefox\u2019s plugins listing. Incidentally, if you haven\u2019t updated Flash\nPlayer to the latest version, you\u2019ll want to take care of that now: The latest Flash Player update,\nreleased Oct. 8, fixes at least 25 security holes.\n\n", "polarity": 0.15297619047619046, "subjectivity": 0.5928571428571429, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/10/critical-java-patch-plugs-30-security-holes/", "date": "2012-10-17T00:00:00.000Z", "author": "Brian Krebs", "title": "Critical Java Patch Plugs 30 Security Holes", "body": "Oracle on Tuesday pushed out a bevy of security patches for its products, including an update to\nJava that remedies at least 30 vulnerabilities in the widely-used program.\n\nThe latest versions, Java 7 Update 9 and Java 6 Update 37, are available either through the updater\nbuilt into Java (accessible from the Windows control panel), or by visiting Java.com. If you\u2019re not\nsure which version you have or whether you\u2019ve got the program installed at all, click the \u201cDo I have\nJava\u201d link below the red download button on the Java homepage.\n\nApple maintains supplies its own version of Java. Given the rapidity with which they have followed\nOracle\u2019s Java updates (ever since April 2012, when the Flashback worm used an unpatched Java flaw to\ninfect more than 650,000 Macs), I would expect Apple to have an update ready soon. Update: Apple did\nrelease an update for Java, one that sees the Java plugin removed from all Mac-compatible browsers\ninstalled on the system.\n\nBroken record alert: If you need Java, update it now. Cyber thieves and malware love to use\nunpatched Java holes to break into systems, and miscreants are always looking for new Java exploits\nto use. If you don\u2019t need Java, uninstall it; you can always reinstall it later.\n\nIf you need it for a specific Web site, I\u2019d suggest unplugging it from the browser and adopting a\ntwo-browser approach. For example, if you normally browse the Web with\u00a0Firefox, for example,\nconsider disabling the Java plugin in Firefox, and then using an alternative browser (Chrome,\u00a0IE9,\nSafari, etc.) with Java enabled to browse only the site that requires it.\n\nNote that Oracle\u2019s updater may pre-select the installation of some third-party product, such as\nMcAfee Security Scan Plus. If you don\u2019t want this software, be sure to de-select that option before\nupdating. Also, bear in mind that if you opt for the two-browser approach and unplug Java from the\nbrowser, the plugin will be re-enabled after every update.\n\nMore on this update is available from Oracle\u2019s Java SE Critical Patch Update Advisory.\n\n", "polarity": 0.1814935064935065, "subjectivity": 0.5372534872534873, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/09/exploit-released-for-zero-day-in-internet-explorer/", "date": "2012-09-17T00:00:00.000Z", "author": "Brian Krebs", "title": "Exploit Released for Zero-Day in Internet Explorer", "body": "A working exploit that takes advantage of a previously unknown critical security hole in Internet\nExplorer has been published online. Experts say the vulnerability is being actively exploited in the\nwild, and that it appears to be connected to the same group of Chinese hackers responsible for\nunleashing a pair of Java zero-day exploits late last month.\n\nResearchers at security vulnerability testing firm Rapid7 have added a new module to the company\u2019s\nfree Metasploit framework that allows users to successfully attack the vulnerability on Internet\nExplorer versions 7, 8 and 9 on Windows XP, Vista and 7.\n\n\u201cComputers can get compromised simply by visiting a malicious website, which gives the attacker the\nsame privileges as the current user,\u201d Rapid7 researcher \u201csinn3r\u201d wrote on the firm\u2019s blog. \u201cSince\nMicrosoft has not released a patch for this vulnerability yet, Internet users are strongly advised\nto switch to other browsers, such as Chrome or Firefox, until a security update becomes available.\nThe exploit had already been used by malicious attackers in the wild before it was published in\nMetasploit. The associated vulnerability puts about 41% of Internet users in North America and 32%\nworld-wide at risk.\u201d\n\nNews of the IE exploit surfaced at the blog of security researcher and blogger Eric Romang, who said\nhe discovered the attack code while examining a Web server recently used by Chinese hackers to\nlaunch targeted attacks via zero-day Java vulnerabilities that were patched by Oracle last month.\nRomang and other experts have connected the sites serving those Java exploits to the Nitro attacks\nof 2011, espionage attacks directed against at least 48 chemical and defense companies.\n\nI pinged Microsoft for a comment but have not yet heard back from them. I suspect they are preparing\nan advisory about this threat, and will update this post when I receive a response. Until an\nofficial fix is available, IE users would be wise to surf with another browser.\n\n", "polarity": 0.07121212121212123, "subjectivity": 0.4142784992784993, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/09/apple-releases-fix-for-critical-java-flaws/", "date": "2012-09-05T00:00:00.000Z", "author": "Brian Krebs", "title": "Apple Releases Fix for Critical Java Flaw", "body": "Apple has issued an update for Mac OS X installations of Java that fixes at least one critical\nsecurity vulnerability in the software.\n\nIf you own a Mac, take a moment today to run the Software Update application and check if there is a\nJava update available. Delaying this action could set your Mac up for a date with malware. In April,\nthe Flashback Trojan infected more than 650,000 Mac systems using an exploit for a critical Java\nflaw.\n\nJava for Mac OS X 10.6 Update 10 and Java for OS X 2012-005 are available for Java installations on\nOS X 10.6, OS X Lion and Mountain Lion systems, via Software Update or from Apple Downloads.\n\nApple stopped bundling Java by default in OS X 10.7 (Lion), but it offers instructions for\ndownloading and installing the software framework when users access webpages that use it. The latest\niteration of Java for OS X configures the Java browser plugin and Java Web Start to be deactivated\nif they remain unused for an extended period of time.\n\nUpdate, 8:14 p.m.: It looks like I may have misread Apple\u2019s somewhat hazy advisory, which appears to\nstate that this update addresses CVE-2012-4681, the Java flaw that was recently spotted in\nincreasingly widespread attacks against Java 7 installations on Windows. Upon closer inspection, it\nlooks like this patch applies just to CVE-2012-0547. The above blog post has been changed to reflect\nthat. In any case, Mac users should not delay in updating (or better yet, removing) Java.\n\nIf you don\u2019t really need Java, remove it from your system. If you decide later that you do need\nJava, you can always reinstall the program. If you still want to keep Java, but only need it for\nspecific Web sites, you can still dramatically reduce the risk from Java attacks just by disabling\nthe plugin in your Web browser. In this case, I would suggest updating to the latest version and\nthen adopting a two-browser approach. If you normally browse the Web with Firefox, for example,\nconsider disabling the Java plugin in Firefox, and then using an alternative browser (Chrome,\nSafari, etc.) with Java enabled to browse only the site that requires it. For browser-specific\ninstructions on disabling Java, click here.\n\n", "polarity": 0.1825, "subjectivity": 0.50125, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/08/attackers-pounce-on-zero-day-java-exploit/", "date": "2012-08-27T00:00:00.000Z", "author": "Brian Krebs", "title": "Attackers Pounce on Zero-Day Java Exploit", "body": "Attackers have seized upon a previously unknown security hole in Oracle\u2019s ubiquitous Java software\nto break into vulnerable systems. So far, the attacks exploiting this weakness have been targeted\nand not widespread, but it appears that the exploit code is now public and is being folded into more\nwidely-available attack tools such as Metasploit and exploit kits like BlackHole.\n\nNews of the vulnerability (CVE-2012-4681) surfaced late last week in a somewhat sparse blog post by\nFireEye, which said the exploit seemed to work against the latest version of Java 7, which is\nversion 1.7, Update 6. This morning, researchers Andre\u2019 M. DiMino & Mila Parkour published\nadditional details on the targeted attacks seen so far, confirming that the zero-day affects Java 7\nUpdate 0 through 6, but does not appear to impact Java 6 and below.\n\nInitial reports indicated that the exploit code worked against all versions of Internet Explorer,\nFirefox and Opera, but did not work against Google Chrome. But according to Rapid 7, there is a\nMetasploit module in development that successfully deploys this exploit against Chrome (on at least\nWindows XP).\n\nAlso, there are indications that this exploit will soon be rolled into the BlackHole exploit kit.\nContacted via instant message, the curator of the widely-used commercial attack tool confirmed that\nthe now-public exploit code worked nicely, and said he planned to incorporate it into BlackHole as\nearly as today. \u201cThe price of such an exploit if it were sold privately would be about $100,000,\u201d\nwrote Paunch, the nickname used by the BlackHole author.\n\nOracle is not scheduled to release another security update for Java until October. In the meantime,\nit\u2019s a good idea to either unplug Java from your browser or uninstall it from your computer\ncompletely.\n\nWindows users can find out if they have Java installed and which version by visiting java.com and\nclicking the \u201cDo I have Java? link. Mac users can use the Software Update feature to check for any\navailable Java updates.\n\nIf you primarily use Java because some Web site, or program you have on your system \u2014 such as\nOpenOffice\u00a0or\u00a0Freemind\u00a0\u2014 requires it, you can still dramatically reduce the risk from Java attacks\njust by disabling the plugin in your Web browser. In this case, I\u00a0 would suggest a two-browser\napproach. If you normally browse the Web with\u00a0Firefox, for example, consider disabling the Java\nplugin in Firefox, and then using an alternative browser (Chrome,\u00a0IE9,\u00a0Safari, etc.) with Java\nenabled to browse only the site that requires it.\n\nFor browser-specific instructions on disabling Java, click here.\n\nIf you must use Java, security experts are prepping an unofficial patch for the program that should\nblunt this vulnerability, but it is being offered on a per-request basis at this point. A number of\nexperts I know and respect have vouched for the integrity of this patch, but installing third-party\npatches should not be done lightly. Note that regressing to the latest version of Java 6 (Java/JRE 6\nUpdate 34) is certainly an option, but not a very good one either. If you do not need Java, get rid\nof it, and if you do need it for specific applications or sites, limit your use of Java to those\nsites and applications, using a secondary browser for that purpose.  If you liked this post, check\nout my follow-up story, Researchers: Java Zero-Day Leveraged Two Flaws.\n\n", "polarity": 0.13956043956043956, "subjectivity": 0.5539107950872658, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/08/security-fix-for-critical-java-flaw-released/", "date": "2012-08-30T00:00:00.000Z", "author": "Brian Krebs", "title": "Security Fix for Critical Java Flaw Released", "body": "Oracle has issued an urgent update to close a dangerous security hole in its Java software that\nattackers have been using to deploy malicious software. The patch comes amid revelations that Oracle\nwas notified in April about this vulnerability and a number other other potentially unpatched Java\nflaws.\n\nThe patch fixes a critical flaw in the latest version of Java 7 that is now being widely exploited.\nUsers with vulnerable versions of Java installed can have malware silently planted on their systems\njust by browsing to a hacked or malicious Web site.\n\nThe update brings Java 7 to Update 7, and appears to fix the flaw being exploited and several other\nsecurity holes. Oracle also released a security update for systems running Java 6, which brings that\nversion to Java 6 Update 35.\n\nToday\u2019s patches are emergency, out-of-schedule updates for Oracle, which previously was not planning\nto release security updates for Java until October. Although it may appear that Oracle responded\nswiftly to the discovery of extremely dangerous flaws in its software, Security Explorations \u2014 a\nresearch firm from Poland \u2014 says it alerted Oracle about this vulnerability and 30 others back in\nApril. It\u2019s not yet clear how many of those vulnerabilities were patched in this release.\n\n\u201cWe \u2026 expected that the most serious of them would be fixed by June 2012 Java CPU,\u201d said Security\nExplorations CEO and founder Adam Gowdiak told The Register\u2019s Neil McAllister. \u201cBut it didn\u2019t happen\nand Oracle left many issues unpatched with plans to address them in the next Java [updates].\u201d\n\nIf you don\u2019t need Java, uninstall it from your system. This program is extremely buggy, and Oracle\ntends to take its time with security updates, behaving as if it didn\u2019t have hundreds of millions of\nindividual users. If you decide later that you do need Java, you can always reinstall the program.\nIf you still want to keep Java, but only need it for specific Web sites, you can still dramatically\nreduce the risk from Java attacks just by disabling the plugin in your Web browser. In this case, I\nwould suggest updating to the latest version and then adopting a two-browser approach. If you\nnormally browse the Web with Firefox, for example, consider disabling the Java plugin in Firefox,\nand then using an alternative browser (Chrome, IE9, Safari, etc.) with Java enabled to browse only\nthe site that requires it.\n\nFor browser-specific instructions on disabling Java, click here. If you\u2019re not sure whether your\nsystem has Java installed or which version your computer may have, visit java.com and click the \u201cDo\nI have Java? link.\n\nWindows users can grab the update by visiting the Windows Control Panel and clicking the Java icon\n(or searching for \u201cJava\u201d). From there, select the Update tab and the Update Now button. Note that\nthe updater may auto-select a toolbar like the \u201cAsk Toolbar;\u201d if you don\u2019t want that as well, de-\nselect it before proceeding. Mac and Linux users can get Java 7 Update 7 from this link.\n\nIf you plan to keep Java on your system, update it now. The exploit being used in the wild now has\nbeen shown to work against Windows, Mac and Linux systems running Java 7 Update versions 1 through\n6.\n\n", "polarity": -0.011764705882352944, "subjectivity": 0.4913398692810458, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/07/new-java-exploit-to-debut-in-blackhole-exploit-kits/", "date": "2012-07-05T00:00:00.000Z", "author": "Brian Krebs", "title": "New Java Exploit to Debut in BlackHole Exploit Kits", "body": "Malicious computer code that leverages a newly-patched security flaw in Oracle\u2019s Java software is\nset to be deployed later this week to cybercriminal operations powered by the BlackHole exploit\npack. The addition of a new weapon to this malware arsenal will almost certainly lead to a spike in\ncompromised PCs, as more than 3 billion devices run Java and many of these installations are months\nout of date.\n\nI first learned about the new exploit from a KrebsOnSecurity reader named Dean who works in incident\nresponse for a financial firm. Dean was trying to trace the source of an infected computer in his\nnetwork; he discovered the culprit appeared to be a malicious \u201c.jar\u201d file. A scan of the jar file at\nVirustotal.com showed that it was detected by just one antivirus product (Avira), which flagged it\nas \u201cJava/Dldr.Lamar.BD\u201d. The description of that threat says it targets a Javas vulnerability tagged\nas CVE-2012-1723, a critical bug fixed in Java 6 Update 33 and Java 7 Update 5.\n\nThe attack may be related to an exploit published for CVE-2012-1723 in mid-June by\u00a0Michael \u2018mihi\u2019\nSchierl. But according to the current vendor of the BlackHole exploit pack, the exact exploit for\nthis vulnerability has only been shared and used privately to date. Reached via instant message, the\nBlackHole author said the new Java attack will be rolled into a software update to be made available\non July 8 to all paying and licensed users of BlackHole.\n\nRegardless of which operating system you use, if you have Java installed, I would advise you to\nupdate it, neuter it or remove it as soon as possible. The reason I say this is that Java requires\nconstant patching, and it appears to be the favorite target of attackers these days.\n\nWindows users can find out if they have Java installed and which version by visiting java.com and\nclicking the \u201cDo I have Java? link. Mac users can use the Software Update feature to check for any\navailable Java updates.\n\nIf you primarily use Java because some Web site, or program you have on your system \u2014 such as\nOpenOffice\u00a0or\u00a0Freemind\u00a0\u2014 requires it, you can still dramatically reduce the risk from Java attacks\njust by disabling the plugin in your Web browser. In this case, I\u00a0 would suggest a two-browser\napproach. If you normally browse the Web with\u00a0Firefox, for example, consider disabling the Java\nplugin in Firefox (from the Add-ons menu, click Plugins and then disable anything Java related, and\nrestart the browser), and then using an alternative browser (Chrome,\u00a0IE9,\u00a0Safari, etc.) with Java\nenabled to browse only the site that requires it.\n\nApple stopped bundling Java by default in\u00a0OS X 10.7\u00a0(Lion), it offers instructions for downloading\nand installing the\u00a0software framework when users access webpages that use it. The latest iteration\nof Java for OS X configures the Java browser plugin and Java Web Start to be deactivated if they\nremain unused for 35 days.\n\n", "polarity": 0.1491125541125541, "subjectivity": 0.4947799422799424, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/06/apple-oracle-ship-java-security-updates/", "date": "2012-06-13T00:00:00.000Z", "author": "Brian Krebs", "title": "Apple, Oracle Ship Java Security Updates", "body": "There must have been some rare planetary alignment yesterday, because the oddest thing happened:\nApple and Oracle both shipped software updates for the same Java security flaws on the very same\nday.\n\nI\u2019ve taken Apple to task several times for its unacceptable delays in patching Java vulnerabilities.\nOracle is the official producer of Java, but Apple maintains its own version, and it has\nconsistently lagged months behind Oracle in fixing security bugs. This failure on Apple\u2019s part\nfinally caught up with Mac OS X users earlier this year and turned into a major embarrassment for\nApple, when the Flashback malware infected more than 650,000 Mac systems using a vulnerability that\nOracle (but not Apple) had patched roughly two months earlier.\n\nWell, it seems that Apple learned a thing or two from that incident. The update Oracle released\nyesterday, Java 6 Update 33 and Java 7 Update 5, fixes at least 14 security flaws in the oft-\nattacked software that is installed on more than three billion devices worldwide. Apple\u2019s Java\nupdate brings Java on the Mac to 1.6.0_33, and patches 11 of the 14 security vulnerabilities that\nOracle fixed in Tuesday\u2019s release. It\u2019s unclear whether those other three flaws simply don\u2019t exist\nin the Mac version of Java, but we\u2019ll take progress where we can get it.\n\nRegardless of which operating system you use, if you have Java installed, I would advise you to\nupdate it, neuter it or remove it as soon as possible. The reason I say this is that Java requires\nconstant patching, and it appears to be the favorite target of attackers these days.\n\nWindows users can find out if they have Java installed and which version by visiting java.com and\nclicking the \u201cDo I have Java? link. Mac users can use the Software Update feature to check for any\navailable Java updates.\n\nIf you primarily use Java because some Web site, or program you have on your system \u2014 such as\nOpenOffice or Freemind \u2014 requires it, you can still dramatically reduce the risk from Java attacks\njust by disabling the plugin in your Web browser. In this case, I\u00a0 would suggest a two-browser\napproach. If you normally browse the Web with Firefox, for example, consider disabling the Java\nplugin in Firefox (from the Add-ons menu, click Plugins and then disable anything Java related, and\nrestart the browser), and then using an alternative browser (Chrome, IE9, Safari, etc.) with Java\nenabled to browse only the site that requires it.\n\nApple stopped bundling Java by default in OS X 10.7 (Lion), it offers instructions for downloading\nand installing the software framework when users access webpages that use it. The latest iteration\nof Java for OS X configures the Java browser plugin and Java Web Start to be deactivated if they\nremain unused for 35 days.\n\n", "polarity": 0.10402777777777777, "subjectivity": 0.5117658730158731, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/06/critical-security-fixes-for-adobe-flash-player/", "date": "2012-06-08T00:00:00.000Z", "author": "Brian Krebs", "title": "Critical Security Fixes for Adobe Flash Player", "body": "Adobe has released a critical update to its Flash Player software that fixes at least seven security\nvulnerabilities in the program. The new version also extends the background updater to\u00a0Mac OS X\nusers browsing the Web with Mozilla Firefox.\n\nThe update, Flash Player 11.3, plugs at least seven security holes in Flash Player and Adobe Air.\nThe company warns that attackers could use these flaws to crash the applications and seize control\nover unpatched systems. Flash updates are available for Windows, Mac, Linux and Android systems.\nAdobe AIR patches are available for Windows, Mac and Android platforms. See the chart below for the\nlatest, patched versions numbers for each platform.\n\nAccording to Adobe, the background updater being delivered for Mac OS X uses the same design as the\nFlash\u00a0Player\u00a0updater\u00a0on Windows. If the user chooses to accept background updates, then the Mac\nLaunch Daemon will launch the background updater every hour to check for updates until it receives a\nresponse from the Adobe server. If the server responds that no update is available, the system will\nbegin checking again 24 hours later. If a background update is available, the background updater can\ndownload and install the update without interrupting the end-user\u2019s session with a prompt.\n\nTo find out if you have Flash installed, or which version is on your system, visit this link. If you\nhave trouble updating your Flash version, consider uninstalling the program using Adobe\u2019s Flash\nremoval tool, rebooting, and then reinstalling the latest version. Windows users who have Flash 11.2\nor higher installed also have Adobe\u2019s new updater, which is designed to auto-install updates shortly\nafter they\u2019re made available. Those who\u2019d prefer not to wait can grab the new version from the Adobe\nFlash Player Download Center, but if you choose this route to update, be on the lookout for pre-\nchecked boxes offering potentially unwanted extras (for example, McAfee\u2019s security scan is often\nbundled here). Alternatively, direct links to the OS-specific downloads are here.\n\nReaders who have Adobe Air installed will need to update that application separately. The latest\nversion, v. 3.3.0.3610, is available from this link.\n\nUpdate, June 10, 9:40 a.m.: An earlier version of this post incorrectly stated that Adobe had ported\nits sandbox protection for Flash to Mac OS X users. It was only the background updater function that\nwas ported to Firefox users on Macs in this version of Flash. The above text has been corrected.\n\n", "polarity": 0.14458041958041956, "subjectivity": 0.47263986013986015, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/05/adware-stages-comeback-via-browser-extensions/", "date": "2012-05-21T00:00:00.000Z", "author": "Brian Krebs", "title": "Adware Stages Comeback Via Browser Extensions", "body": "The Wikimedia Foundation last week warned that readers who are seeing ads on Wikipedia articles are\nlikely using a Web browser that has been infected with malware. The warning points to an apparent\nresurgence in adware and spyware that is being delivered via cleverly disguised browser extensions\ndesigned to run across multiple Web browsers and operating systems.\n\nIn a posting on its blog, Wikimedia noted that although the nonprofit organization is funded by more\nthan a million donors and does not run ads, some users were complaining of seeing ads on Wikipedia\nentries. \u201cIf you\u2019re seeing advertisements for a for-profit industry (see screenshot below for an\nexample) or anything but our fundraiser, then your web browser has likely been infected with\nmalware,\u201d reads a blog post co-written by Philippe Beaudette, director of community advocacy at the\nWikimedia Foundation.\n\nThe blog post named one example of a browser extension called \u201cIWantThis!,\u201d which is essentially\nspyware masquerading as adware. The description at the IWantThis! Web site makes it sound like a\nharmless plugin that occasionally overlays ads on third-party Web sites and helps users share\nproduct or online shopping wish lists with others. As I was researching this extension, I came\nacross this helpful description of it at the DeleteMalware Blog, which points to the broad privacy\npolicy that ships with this extension:\n\nThe author of that DeleteMalware post said he found a copy of the IWantThis browser extension\nbundled with freeware from software download sites (the author doesn\u2019t mention which download site,\nbut it\u2019s worth mentioning again that sites like Download.com have recently begun bundling adware,\ntoolbars and other potentially invasive software with otherwise \u201cfree\u201d titles).\n\nThe Wikimedia blog post specifically mentions that this extension affects Google Chrome users, but\nthe extension appears to be equally capable of installing across multiple browsers, including\nMozilla Firefox and Internet Explorer. Last week, I wrote about LilyJade, a new computer worm that\nwas spreading across Facebook accounts by abusing the free services offered by Crossrider, a\nplatform that makes it simple to develop browser extensions that work seamlessly across browsers and\noperating systems.\n\nIn researching IWantThis, I spoke with Sergey Golovanov, a malware expert at Russian antivirus maker\nKaspersky Lab, who pointed out that the IWantThis extension has been delivered via Crossrider since\nat least February of this year. This may or may not be linked to an affiliate program that rewards\npeople with commissions for convincing people to install the software.This writeup from Symantec\u2019s\nThreatExpert malware scanning engine steps through some of the registry changes that the IWantThis\nextension executes on a host system.\n\nIt\u2019s also worth noting that few \u2014 if any \u2014 antivirus firms are likely to alert users about malicious\nor invasive browser extensions. For example, none of the 43 antivirus and security applications used\nto conduct this scan of the IWantThis! extension at Virustotal.com flagged it as malicious, or even\na potentially unwanted application.\n\nBroken record alert: If you didn\u2019t go looking for it, don\u2019t install it!\n\n", "polarity": 0.077113880742913, "subjectivity": 0.4384146767211284, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/04/urgent-fix-for-zero-day-mac-java-flaw/", "date": "2012-04-04T00:00:00.000Z", "author": "Brian Krebs", "title": "Urgent Fix for Zero-Day Mac Java Flaw", "body": "Apple on Monday released a critical update to its version of Java for Mac OS X that plugs at least a\ndozen security holes in the program. More importantly, the patch mends a flaw that attackers have\nrecently pounced on to broadly deploy malicious software, both on Windows and Mac systems.\n\nThe update, Java for OS X Lion 2012-001 and Java for Mac OS X 10.6 Update 7, sews up an extremely\nserious security vulnerability (CVE-2012-0507) that miscreants recently rolled into automated\nexploit kits designed to deploy malware to Windows users. But in the past few days, information has\nsurfaced to suggest that the same flaw has been used with great success by the Flashback Trojan to\ninfect large numbers of Mac computers with malware.\n\nThe revelations come from Russian security firm Dr.Web, which reports that the Flashback Trojan has\nsuccessfully infected more than 550,000 Macs, most which it said were U.S. based systems (hat tip to\nAdrian Sanabria). Dr.Web\u2019s post is available in its Google translated version here.\n\nFlashback is an increasingly sophisticated malware strain that sniffs network traffic in search of\nuser names and passwords. Early versions of it prompted Mac users to enter their password before it\nwould run, but the most recent strains will happily infect vulnerable Mac systems without requiring\na password, writes Ars Technica, among others. F-Secure has additional useful information on this\nTrojan attack here.\n\nAs Ars notes, although Apple stopped bundling Java by default in OS X 10.7 (Lion), it offers\ninstructions for downloading and installing the Oracle-developed software framework when users\naccess webpages that use it. If you need Java on your Mac only for a specific application (such as\nOpenOffice), you can unplug it from the browser by disabling its plugin. In Safari, this can be done\nby clicking Preferences, and then the Security tab (uncheck \u201cEnable Java\u201d). In Google Chrome, open\nPreferences, and then type \u201cJava\u201d in the search box. Scroll down to the Plug-ins section, and click\nthe link that says \u201cDisable individual plug-ins.\u201d If you have Java installed, you should see a\n\u201cdisable\u201d link underneath its listing. In Mozilla Firefox for Mac, click Tools, Add-ons, and disable\nthe Java plugin(s).\n\nI can\u2019t stress this point strongly enough: If you don\u2019t need Java, remove it from your system,\nwhether you are a Mac or Windows user. If you need further convincing of my reasons for this\nrecommendation, I\u2019d encourage you to browse through some of my past Java-related posts.\n\nApple maintains its own version of Java, and as with this release, it has typically fallen\nunacceptably far behind Oracle in patching critical flaws in this heavily-targeted and cross-\nplatform application. In 2009, I examined Apple\u2019s patch delays on Java and found that the company\npatched Java flaws on average about six months after official releases were made available by then-\nJava maintainer Sun. The current custodian of Java \u2013 Oracle Corp. \u2013 first issued an update to plug\nthis flaw and others back on Feb. 17. I suppose Apple\u2019s performance on this front has improved, but\nits lackadaisical (and often plain puzzling) response to patching dangerous security holes\nperpetuates the harmful myth that Mac users don\u2019t need to be concerned about malware attacks.\n\n", "polarity": 0.09523420479302828, "subjectivity": 0.47033535636476803, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/03/new-java-attack-rolled-into-exploit-packs/", "date": "2012-03-27T00:00:00.000Z", "author": "Brian Krebs", "title": "New Java Attack Rolled into Exploit Packs", "body": "If your computer is running Java and you have not updated to the latest version, you may be asking\nfor trouble: A powerful exploit that takes advantage of a newly-disclosed security hole in Java has\nbeen rolled into automated exploit kits and is rapidly increasing the success rates of these tools\nin attacking vulnerable Internet users.\n\nThe exploit targets a bug in Java (CVE-20120-0507) that effectively allows the bypassing of Java\u2019s\nsandbox, a mechanism built into the ubiquitous software that is designed partly to blunt attacks\nfrom malicious code. Microsoft\u2019s Malware Protection Center warned last week that new malware samples\nwere surfacing which proved highly effective at exploiting the flaw. Microsoft says the samples it\nsaw loaded the ZeuS Trojan, but thieves can use such attacks to install malware of their choosing.\n\nAccording to posts on several underground carding forums, the exploit has now been automatically\nrolled out to miscreants armed with BlackHole, by far the most widely used exploit pack. An exploit\npack is a software toolkit that gets injected into hacked or malicious sites, allowing the attacker\nto foist a kitchen sink full of browser exploits on visitors. Those visiting such sites with\noutdated browser plugins may have malware silently installed, and Java is almost universally the\nmost successful method of compromise across all exploit kits.\n\nAccording to software giant Oracle, Java is deployed across more than 3 billion systems worldwide.\nBut the truth is that many people who have this powerful program installed simply do not need it, or\nonly need it for very specific uses. I\u2019ve repeatedly encouraged readers to uninstall this program,\nnot only because of the constant updating it requires, but also because there seem to be a never-\nending supply of new exploits available for recently-patched or undocumented vulnerabilities in the\nprogram.\n\nCase in point: On at least two Underweb forums where I regularly lurk, there are discussions among\nseveral core members about the sale and availability of an exploit for an as-yet unpatched critical\nflaw in Java. I have not seen firsthand evidence that proves this 0day exploit exists, but it\nappears that money is changing hands for said code.\n\nIf you do not need Java, junk it; you can always re-install it later if you need to. If you need\nJava for a specific Web site, I would suggest a two-browser approach. If you normally browse the Web\nwith Firefox, for example, consider disabling the Java plugin in Firefox (from the Add-ons menu,\nclick Plugins and then disable anything Java related, and restart the browser), and then using an\nalternative browser (Chrome, IE9, Safari, etc.) with Java enabled to browse only the site that\nrequires it.\n\nThe Java latest versions (which patch the CVE-2012-0507 hole) are Java Version 6 Update 31, or Java\n7 Update 3, released on Feb. 15, 2012. Please note that if you disable the Java plugin from a\nbrowser, the next time you update the program, you may need to disable it again, as Java tends to\nre-enable itself with every security update.\n\nUpdate, March 28, 3:48 p.m. ET:\u00a0Marcus Carey, a security researcher at Rapid7, adds a bit more\nperspective on the severity of the situation with this exploit. He estimates that upwards of 60 to\n80 percent of users probably are not yet patched against this flaw. Here\u2019s what he wrote:\n\n", "polarity": 0.1374505928853755, "subjectivity": 0.4785650038367428, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/02/forcing-flash-to-play-in-the-sandbox/", "date": "2012-02-07T00:00:00.000Z", "author": "Brian Krebs", "title": "Forcing Flash to Play in the Sandbox", "body": "Adobe has released a public beta version of its Flash Player software for Firefox that forces the\nprogram to run in a heightened security mode or \u201csandbox\u201d designed to block attacks that target\nvulnerabilities in the software.\n\nSandboxing is an established security mechanism that runs the targeted application in a confined\nenvironment that blocks specific actions by that app, such as installing or deleting files, or\nmodifying system information. The same technology has been built into the latest versions of Adobe\nReader X, and it has been enabled for some time in Google Chrome, which contains its own integrated\nversion of Flash. But this is the first time sandboxing has been offered in a public version of\nFlash for Firefox.\n\nFlash is a big target of attackers partly because it is a powerful program with a huge install base;\nvulnerability management firm Secunia estimates that some version of Flash is installed in 96\npercent of the world\u2019s Microsoft PCs. Windows users can further harden their systems against such\nattacks by swapping out their current version of Flash for this beta.\n\nThe sandboxed Flash for Firefox \u2014 Flash Player 11.2 beta 5 \u2014 works with Firefox 4 or later running\non Window Vista or Windows 7. The latest build is available here.\n\nI\u2019ve been using the beta version for nearly two days now without incident on a Windows 7 Firefox 10\ninstall (with Firefox running under Microsoft\u2019s Enhanced Mitigation Experience Toolkit, or EMET).\nBut if you do experience glitches or compatibility issues, you can always revert back to the non-\nsandboxed version. If you decide to try the beta, make sure to uninstall the current version using\nAdobe\u2019s Flash uninstaller tool; then grab and install the beta.\n\n", "polarity": 0.11086956521739132, "subjectivity": 0.4741545893719808, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/11/new-java-attack-rolled-into-exploit-kits/", "date": "2011-11-28T00:00:00.000Z", "author": "Brian Krebs", "title": "New Java Attack Rolled Into Exploit Kits", "body": "A new exploit that takes advantage of a recently-patched critical security flaw in Java is making\nthe rounds in the criminal underground. The exploit, which appears to work against all but the\nlatest versions of Java, is being slowly folded into automated attack tools.\n\nThe exploit attacks a vulnerability that exists in Oracle Java SE JDK and JRE 7 and 6 Update 27 and\nearlier. If you are using Java 6 Update 29, or Java 7 Update 1, then you have the latest version\nthat is patched against this and 19 other security threats. If you are using a vulnerable version of\nJava, it\u2019s time to update. Not sure whether you have Java or what version you may be running? Check\nout this link, and then click the \u201cDo I have Java?\u201d link below the big red \u201cFree Java Download\u201d\nbutton.\n\nA few weeks back, researcher Michael \u2018mihi\u2019 Schierl outlined how one might exploit this particular\nJava flaw. Over the weekend, I stumbled on a discussion in an exclusive cybercrime forum about an\nexploit that appears to have been weaponized along the same lines as described by Schierl. Below is\na recording of a video posted by one of the members that shows the attack in action.\n\nJava exploits are notoriously successful when bundled into commercial exploit packs, software kits\nthat can turn a hacked Web site into a virtual minefield for Web users who aren\u2019t keeping up to date\nwith the latest security patches.\u00a0 Users would need only to browse to a booby-trapped site with a\nversion of Mozilla Firefox or Internet Explorer that is running anything older than the latest Java\npackage, and the site could silently install malware (according to a miscreant selling access to the\nexploit, it does not run reliably against Google Chrome for some reason).\n\nBecause Java is cross-platform, this attack could theoretically be used to infiltrate non-Windows\nsystems, such as computers running Mac OS X (Apple issued its own update to fix this flaw and other\nJava bugs earlier this month). For now, though, I\u2019ve only heard about it being used to target\nWindows PCs: It is slowly being incorporated into the BlackHole exploit kit, one of the most widely-\ndeployed exploit packs on the market today.\n\nReached via instant message, the hacker principally responsible for maintaining and selling\nBlackHole said the new Java exploit was being rolled out for free to existing license holders. For\nall others, the exploit can be had for a $4,000 price tag, in addition to the cost of a BlackHole\nlicense, which goes for $700 for three months, $1,000 for six months, or $1,500 per year. The author\nof BlackHole also sells his own hosted solution, in which customers can rent bulletproof servers\nwith pre-installed copies of his kit for $200 a week, or $500 per month.\n\nI stand by my advice urging those who don\u2019t need Java to junk it; most people who have it won\u2019t miss\nit. For those who need Java for the occasional site or service, disconnecting it from the browser\nplugins and temporarily reconnecting when needed is one way to minimize issues with this powerful\nprogram. Leaving the Java plugin installed in a secondary browser that is only used for sites or\nservices that require Java is another alternative.\n\n", "polarity": 0.09900137741046831, "subjectivity": 0.5268480257116621, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/11/adobe-apple-microsoft-mozilla-issue-critical-patches/", "date": "2011-11-09T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Apple, Microsoft & Mozilla Issue Critical Patches", "body": "Adobe, Apple, Microsoft and Mozilla all released updates on Tuesday to fix critical security flaws\nin their products. Adobe issued a patch that corrects four vulnerabilities in Shockwave Player,\nwhile Redmond pushed updates to address four Windows flaws. Apple slipped out an update that mends\nat least 17 security holes in its version of Java, and Mozilla issued yet another major Firefox\nrelease, Firefox 8.\n\nThe only \u201ccritical\u201d patch from Microsoft this month is a dangerous Windows flaw that could be\ntriggered remotely to install malicious software just by sending the target system specially crafted\npackets of data. Microsoft says this vulnerability may be difficult to reliably exploit, but it\nshould be patched immediately. Information on the other three flaws fixed this week is here. The\nfixes are available via Windows Updates for most supported versions of the operating system,\nincluding XP, Vista and Windows 7.\n\nAdobe\u2019s Shockwave update also fixes critical flaws, but users should check to see if they have this\nprogram installed before trying to update it. To test whether you have Shockwave installed, visit\nthis page; if you see an animation, it\u2019s time to update. If you see a prompt to install Shockwave,\nthere is no need to install it. Mozilla Firefox users without Shockwave Player installed may still\nsee \u201cShockwave Flash\u201d listed in the \u201cPlugins\u201d directory of the browser; this merely indicates that\nthe user has Adobe\u2019s Flash Player installed.\n\nThe vulnerabilities fixed by this update exist in versions of Shockwave 11.6.1.629 and earlier. The\nlatest version, v. 11.6.3.633, is available here.\u00a0 As I noted earlier this year, I haven\u2019t had\nShockwave on my system for some time now and don\u2019t seem to have missed it. I\u2019m sure it has its uses,\nbut to me Shockwave is just another Adobe program that requires constant care and feeding. What\u2019s\nmore, like Adobe\u2019s Flash Player, Shockwave demands two separate installation procedures for IE and\nnon-IE browsers.\n\nHat tip to the SANS Internet Storm Center for the heads up on the Java fix from Apple. This update,\navailable via Software Update or Apple Downloads, essentially brings Snow Leopard and Lion up to\ndate with the Oracle patches released last month in Java 6 Update 29 (Apple maintains its own\nversion of Java).\n\nIf you use Mozilla Firefox or Thunderbird, you may have noticed that Mozilla is pushing out another\nmajor upgrade that includes critical fixes to these programs; both have now been updated to version\n8. If you\u2019re still running Firefox version 3.6.x, Mozilla has updated that to 3.6.24 (if anyone can\nhelp decipher Mozilla\u2019s timeline for exactly how long it will continue to support this workhorse\nversion of Firefox, please drop a line in the comments below). Perhaps I\u2019m becoming a curmudgeon,\nbut I\u2019m growing weary of the incessant update prompts from Firefox. It seems that almost every time\nI start it up it\u2019s asking to restart the browser or to remove plugins that no longer work with the\nlatest version. I\u2019ve been gradually transitioning more of my work over to Google Chrome, which seems\nfaster and updates the browser and any installed plugins silently (and frequently patches oft-\ntargeted plugins like Flash Player even before Adobe officially releases the update).\n\n", "polarity": 0.1083011583011583, "subjectivity": 0.5306842556842557, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/11/critical-flash-update-plugs-12-security-holes/", "date": "2011-11-10T00:00:00.000Z", "author": "Brian Krebs", "title": "Critical Flash Update Plugs 12 Security Holes", "body": "Adobe has issued a critical software update for its Flash Player software that fixes at least a\ndozen security vulnerabilities in the widely-used program. Updates are available for Windows, Mac,\nLinux,\u00a0 Solaris and Android versions of Flash and Adobe Air.\n\nThe update fixes flaws present in Flash Player versions 11.0.1.152 and earlier for Windows, Mac,\nLinux and Solaris systems, and in Flash 11.0.1.153 and earlier for Android. The vulnerabilities are\nrated critical, meaning they could give hacked or malicious Web sites an easy way to install\nsoftware on your machine.\n\nAdobe\u2019s advisory says users of Flash version 11.0.1.152 and earlier should update to v. 11.1.102.55;\nthose using Flash v. 11.0.1.153 and earlier versions for Android should update to Flash Player\n11.1.102.59. Users of AIR 3.0 for Windows, Macintosh, and Android should update to AIR\u00a0 v.\n3.1.0.4880. The company says it is not aware of any active attacks against these flaws at this time.\n\nTo find out if you have Flash and which version may be installed, visit the About Flash page.\nWindows users who browse the Web with Internet Explorer and another browser may need to apply the\nFlash update twice, once using IE and again with the other browser (Google Chrome users should\nalready have the latest version of Flash). Again, check the About Flash page with each browser you\nuse to see whether you need to apply this update. To avoid using Adobe\u2019s Download Manager, which\ntends to add little \u201cextras\u201d if you\u2019re not careful, IE users can grab the latest update directly\nfrom these links; 32-bit IE installer, and 64-bit IE installer. Firefox and Opera users can grab the\n32-bit installer here and the 64-bit version here. If you don\u2019t know which one you need, just let\nAdobe\u2019s site choose for you (although the download manager may try to foist other software unless\nyou uncheck pre-checked options).\n\nThe installer for the latest Adobe Air version is available from this link.\n\nSome Flash components also are bundled with Adobe Reader, so I asked Adobe whether current versions\nof Reader also were exposed to these vulnerabilities. Adobe spokeswoman Wiebke Lips confirmed that\nsome of the issues fixed in today\u2019s Flash Player update do impact the Authplay.dll component that\nships with Adobe Reader and Acrobat X (10.x) and 9.x for Windows and Mac. Lips said Adobe feels\ncomfortable that its sandboxing technology built into the latest versions of Reader will protect\nusers until January, when the company expects to issue the next quarterly update for Reader.\n\n\u201cThese issues will be resolved in the next quarterly security update for Adobe Reader and Acrobat,\ncurrently scheduled for January 10, 2012,\u201d Lips wrote. \u201cNote that the Authplay.dll component is part\nof the \u2018sandbox\u2019 for users of Adobe Reader X (Protected Mode) and Acrobat X (Protected View), which\nwould protect against potential exploits.\u201d\n\nUpdate: 11:34 p.m. ET: Updated the download links.\n\n", "polarity": 0.10958333333333334, "subjectivity": 0.5511111111111113, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/08/updates-for-adobe-flash-shockwave-air/", "date": "2011-08-10T00:00:00.000Z", "author": "Brian Krebs", "title": "Updates for Adobe Flash, Shockwave, AIR", "body": "Adobe has shipped patches to fix a slew of critical security flaws in its products, including Flash,\nShockwave Player and Adobe AIR.\n\nThe Flash update corrects at least 13 critical vulnerabilities present in versions 10.3.181.36 and\nearlier for Windows, Mac, Linux and Solaris machines (the bugs exist in Flash versions 10.3.185.25\nand earlier for Android devices). Windows, Mac, Linux and Solaris users should upgrade to version\n10.3.183.5, and Android users should update to v. 10.3.186.2.\n\nTo find out which version of Flash you have, visit this page. Windows users who browse the Web with\nanything other than Internet Explorer will need to apply the Flash update twice, once using IE and\nagain with the other browser (Google Chrome users should already have the latest version of Flash).\nTo avoid using Adobe\u2019s annoying Download Manager, IE users can grab the latest update directly from\nthis link; the direct link for non-IE browsers is here.\n\nThe same flaws exist in Adobe AIR for Windows, Mac and Android. Using an application that requires\nAdobe AIR (Tweetdeck or Pandora, for example) should prompt you to update to the latest version, AIR\n2.7.1. If you don\u2019t see a prompt to update the program, the latest version of AIR is available here.\n\nAdobe also shipped an update to its Shockwave Player that fixes at least seven critical\nvulnerabilities in the media player program. Adobe is urging users of Adobe Shockwave Player\n11.6.0.626 and earlier\u00a0 update to Adobe Shockwave Player 11.6.1.629.\n\nI should note that you may not have or want Shockwave installed. I haven\u2019t had it on my Firefox\ninstallation for some time now and don\u2019t seem to have missed it. I\u2019m sure it has its uses, but to me\nShockwave is just another Adobe program that requires constant care and feeding. What\u2019s more, it\ndemands two separate installation procedures for IE and non-IE browsers.\n\nTo test whether you have Shockwave installed, visit this page; if you see an animation, it\u2019s time to\nupdate. If you see a prompt to install Shockwave, there is no need to install it. Mozilla Firefox\nusers without Shockwave Player installed may still see \u201cShockwave Flash\u201d listed in the \u201cPlugins\u201d\ndirectory of the browser; this merely indicates that the user has Adobe\u2019s Flash Player installed.\n\n", "polarity": 0.06041666666666667, "subjectivity": 0.5623842592592595, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/07/comcast-hijacks-firefox-homepage-well-fix/", "date": "2011-07-21T00:00:00.000Z", "author": "Brian Krebs", "title": "Comcast Hijacks Firefox Homepage: \u201cWe\u2019ll Fix\u201d", "body": "Comcast says it is revamping the software that new customers need to install to start service with\nthe ISP. The software is unfriendly to Mac users running Firefox: It changes the browser\u2019s homepage\nto comcast.net, and blocks users from changing it to anything else.\n\nI heard this from a friend who\u2019d just signed up for Comcast\u2019s Xfinity high-speed Internet service\nand soon discovered some behavior on his Mac that is akin to Windows malware\u00a0 \u2014 something had\nhijacked his Internet settings. The technician who arrived to turn on the service said that a\nsoftware package from Comcast was necessary to complete the installation. My friend later discovered\nthat his homepage had been changed to comcast.net, and that Comcast software had modified his\nFirefox profile so that there was no way to change the homepage setting.\n\nI contacted Comcast; they initially blamed the problem on a bug in Firefox. Mozilla denies this, and\nsays it\u2019s Comcast\u2019s doing.\n\n\u201cThis is NOT a Firefox bug or issue,\u201d a Mozilla spokesperson wrote in an email. \u201cIt is a Comcast\nmethod that applies preference changes to Firefox.\u201d\n\nComcast spokesman Charlie Douglas acknowledged that the Xfinity software hijacks Firefox\u2019s settings.\nHe said the problem is limited to Mac users, and that permanency of the change was unintentional. He\nadded that the company is in the process of correcting the installation software.\n\n\u201cCustomers absolutely should be able to change their preferred homepage anytime,\u201d Douglas said.\n\u201cWe\u2019re obviously apologizing for any inconvenience we\u2019ve caused Mac users.\u201d\n\nFortunately, there is a stopgap fix for this problem. Blogger Ryan Parman has published step-by-step\ninstructions and screenshots showing how to remove the homepage hijack.\n\n", "polarity": 0.1264935064935065, "subjectivity": 0.47224025974025974, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/06/flash-player-patch-fixes-zero-day-flaw/", "date": "2011-06-05T00:00:00.000Z", "author": "Brian Krebs", "title": "Flash Player Patch Fixes Zero-Day Flaw", "body": "Adobe released an emergency security update today to fix a vulnerability that the company warned is\nbeing actively exploited in targeted attacks designed to trick the user into clicking on a malicious\nlink delivered in an email message.\n\nThe vulnerability \u2014 a cross-site scripting bug that could be used to take actions on a user\u2019s behalf\non any Web site or Webmail provider, exists in Flash Player version 10.3.181.16 and earlier for\nWindows, Macintosh, Linux and Solaris. Adobe recommends users update to version 10.3.181.22 (on\nInternet Explorer, the latest, patched version is 10.3.181.23).\u00a0 To find out what version of Flash\nyou have, go here.\n\nGoogle appears to have already pushed out an update that fixes this flaw in Chrome. Adobe says it\nwill ship an update to fix this flaw on Android sometime this week.\n\nAdobe said it is still investigating whether this is exploitable in Adobe Reader and Acrobat X\n(10.0.2) and earlier 10.x and 9.x versions of Adobe Reader and Acrobat for Windows and Macintosh\noperating systems, and that it is not aware of any attacks targeting Adobe Reader or Acrobat in the\nwild.\n\nRemember that if you use Internet Explorer in  addition  to other   browsers, you will need to apply\nthis update twice:  Once to  install the   Flash Active X plugin for IE, and again to update  other\nbrowsers, such   as Firefox and Opera. Updates are available by browsing with the appropriate\nbrowser to the Flash Player Download Center.   Bear in mind that updating via the Download Center\ninvolves installing   Adobe\u2019s Download Manager, which may try to foist additional software.  If\nyou\u2019d prefer to update manually, the direct installers for Windows are available at this link. If\nyou run into problems installing this update, you\u2019ll want to uninstall previous versions of Flash\nPlayer and then try again.\n\n", "polarity": 0.05833333333333334, "subjectivity": 0.41568627450980394, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/05/critical-flash-player-update-plugs-11-holes/", "date": "2011-05-13T00:00:00.000Z", "author": "Brian Krebs", "title": "Critical Flash Player Update Plugs 11 Holes", "body": "Adobe has released another batch of security updates for its ubiquitous Flash Player software. This\n\u201ccritical\u201d patch fixes at least 11 vulnerabilities, including one that reports suggest is being\nexploited in targeted email attacks.\n\nIn the advisory that accompanies this update, Adobe said \u201cthere are reports of malware attempting to\nexploit one of the vulnerabilities, CVE-2011-0627, in the wild via a Flash (.swf) file embedded in a\nMicrosoft Word (.doc) or Microsoft Excel (.xls) file delivered as an email attachment targeting the\nWindows platform. However, to date, Adobe has not obtained a sample that successfully completes an\nattack.\u201d\n\nThe vulnerabilities exist in Flash versions 10.2.159.1 and earlier for Windows, Mac, Linux and\nSolaris. To learn which version of Flash you have, visit this link. The new version for most\nplatforms is 10.3.181.14; Android users should upgrade to Flash Player 10.3.185.21 available by\nbrowsing to the Android Marketplace on an Android phone; Google appears to have updated Chrome users\nautomatically with this version of Flash back on May 6 (Chrome versions 11.0.696.68 and later have\nthe newest Flash version).\n\nRemember that if you use Internet Explorer in  addition to other   browsers, you will need to apply\nthis update twice:  Once to install the   Flash Active X plugin for IE, and again to update  other\nbrowsers, such   as Firefox and Opera. Updates are available by browsing with the appropriate\nbrowser to the Flash Player Download Center.  Bear in mind that updating via the Download Center\ninvolves installing  Adobe\u2019s Download Manager, which may try to foist additional software. If  you\u2019d\nprefer to update manually, the direct installers for Windows  should be available at this link. If\nyou run into problems installing this update, you\u2019ll want to uninstall previous versions of Flash\nPlayer and then try again.\n\nAdobe says Flash Player 10.3 includes a new auto-update notification mechanism for the Macintosh\nplatform, which should alert Mac users to new Flash updates (this feature has been available on the\nWindows platform for a while now).\n\n", "polarity": 0.1212121212121212, "subjectivity": 0.40126262626262627, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/04/spyeye-targets-opera-google-chrome-users/", "date": "2011-04-26T00:00:00.000Z", "author": "Brian Krebs", "title": "SpyEye Targets Opera, Google Chrome Users", "body": "The latest version of the SpyEye trojan includes new capability specifically designed to steal\nsensitive data from Windows users surfing the Internet with the Google Chrome and Opera Web\nbrowsers.\n\nThe author of the SpyEye trojan formerly sold the crimeware-building kit on a number of online\ncybercrime forums, but has recently limited his showroom displays to a handful of highly vetted\nunderground communities. KrebsOnSecurity.com recently chatted with a member of one of these\ncommunities who has purchased a new version of SpyEye. Screenshots from the package show that the\nlatest rendition comes with the option for new \u201cform grabbing\u201d capabilities targeting Chrome and\nOpera users.\n\nTrojans like ZeuS and SpyEye have the built-in ability to keep logs of every keystroke a victim\ntypes on his or her keyboard, but this kind of tracking usually creates too much extraneous data for\nthe attackers, who mainly are interested in financial information such as credit card numbers and\nonline banking credentials. Form grabbers accomplish this by stripping out any data that victims\nenter in specific Web site form fields, snarfing and recording that data before it can be encrypted\nand sent to the Web site requesting the information.\n\nBoth SpyEye and ZeuS have had the capability to do form grabbing against Internet Explorer and\nFirefox for some time, but this is the first time I\u2019ve seen any major banking trojans claim the\nability to target Chrome and Opera users with this feature.\n\nAviv Raff, CTO and co-founder of security alert service Seculert, said that both SpyEye and ZeuS\nwork by \u201chooking\u201d the \u201cdynamic link library\u201d or DLL files used by IE and Firefox. However, Chrome\nand Opera appear to use different DLLs, Raff said.\n\nThis strikes me as an incremental yet noteworthy development. Many people feel more secure using\nbrowsers like Chrome and Opera because they believe the browsers\u2019 smaller market share makes them\nless of a target for cyber crooks. This latest SpyEye innovation is a good reminder that computer\ncrooks are constantly looking for new ways to better monetize the resources they\u2019ve already stolen.\nSecurity-by-obscurity is no substitute for good security practices and common sense: If you\u2019ve\ninstalled a program, update it regularly; if you didn\u2019t go looking for a program, add-on or\ndownload, don\u2019t install it; if you no longer need a program, remove it.\n\n", "polarity": 0.17420905483405486, "subjectivity": 0.43295264920264914, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/05/weyland-yutani-crime-kit-targets-macs-for-bots/", "date": "2011-05-02T00:00:00.000Z", "author": "Brian Krebs", "title": "\u2018Weyland-Yutani\u2019 Crime Kit Targets Macs for Bots", "body": "A new crimeware kit for sale on the criminal underground makes it a simple point-and-click exercise\nto develop malicious software designed to turn Mac OSX computers into remotely controllable zombie\nbots. According to the vendor of this kit, it is somewhat interchangeable with existing crimeware\nkits made to attack Windows-based PCs.\n\nKrebsOnSecurity has spilled a great deal of digital ink covering the damage wrought by ZeuS and\nSpyEye, probably the most popular crimeware kits built for Windows. A crimeware kit is a do-it-\nyourself package of tools that allow users to create custom versions of a malicious software strain\ncapable of turning machines into bots that can be remotely controlled and harvested of financial and\npersonal data. The bot code, generated by the crimeware kit\u2019s \u201cbuilder\u201d component, typically is\ndistributed via social engineering attacks in email and social networking sites, or is foisted by an\nexploit pack like Eleonore or Blackhole, which use hacked Web sites and browser flaws to quietly\ninstall the malware. Crimeware kits also come with a Web-based administration panel that allows the\ncustomer to manage and harvest data from infected PCs.\n\nCrimekit makers have focused almost exclusively on the Windows platform, but today Danish IT\nsecurity firm CSIS Security Group blogged about a new kit named the Weyland-Yutani BOT that is being\nmarketed as the first of its kind to attack the Mac OS X platform.\n\nThe seller of this crimeware kit claims his product supports form-grabbing in Firefox and Chrome,\nand says he plans to develop a Linux version and one for the iPad in the months ahead. The price?\n$1,000, with payment accepted only through virtual currencies Liberty Reserve or WebMoney.\n\nThe CSIS blog post contains a single screen shot of this kit\u2019s bot builder, and references a demo\nvideo but doesn\u2019t show it. I wanted to learn more about this kit, and so contacted the seller via a\nRussian language forum where he was advertising his wares.\n\nThe author said he is holding off on including Safari form-grabbing capability for now, complaining\nthat there are \u201ctoo many problems in that browser.\u201d Still, he was kind enough to share a copy of a\nvideo that shows the kit\u2019s builder and admin panel in action. Click the video link below to check\nthat out.\n\nZeuS and SpyEye are popular in part because they support a variety of so-called \u201cWeb injects,\u201d\nthird-party plug-ins that let botmasters manipulate the content that victims see in their Web\nbrowsers. The most popular Web injects are designed to slightly alter the composition of various\nonline banking Web sites in a bid to trick the victim customer into supplying additional identifying\ninformation that can be used later on to more fully compromise or hijack the account. According to\nthe author, Web injects developed for ZeuS and SpyEye also are interchangeable with this Mac\ncrimekit. \u201cThey need to be formatted and tagged, but yes, you can use Zeus injects with this bot,\u201d\nhe told me in an instant message conversation.\n\nFans of the movie series \u201cAlien\u201d will recognize the name Weyland-Yutani as the fictional corporation\nthat was sent ahead to establish habitable bases and dwellings on extrasolar planets in advance of\nthe arrival of new human colonies. If this crimekit takes hold, or is an indicator of a broader\ninterest in attacking Mac users, we could soon witness cyber crooks starting to colonize the Mac\nuser community as well. The author of this Mac crimekit said he knows of several other independent\ncoders who are working on Mac malcode projects that aren\u2019t quite ready for prime-time, although he\ndeclined to elaborate on that claim.\n\nEach time this subject comes up, I am struck by how fervently the Mac community denies that Mac\nusers might ever have to deal with anywhere near the level of malware that currently besieges the\nWindows world. The Mac, these apologists explain, is far more secure than Windows, and that is why\nwe have not seen malware writers attack the platform with the same vigor and interest. As one\ncommenter on this blog reasoned, OS X simply doesn\u2019t allow programs to be installed without user\npermission. My response is, assuming for the moment that the above statement about the Mac\u2019s\nsuperior security is true, the operating system does nothing to stop the user from being tricked or\ncajoled into installing malware. What\u2019s more, social engineering attacks are one of the primary ways\nthat Windows users get infected today, so why would it be any different for Mac users?\n\nConsider the scourge of rogue anti-virus attacks: Each day, thousands of Windows users are tricked\ninto running and installing a bogus security \u201cscanner\u201d foisted on them by some hacked Web site. The\nattackers\u2019 goal with these \u201cscareware\u201d muggings is to not only trick the user into installing\nmalicious software, but also paying for it with their credit cards!\n\nEarlier today, MacRumors.com carried a story about a new threat discovered by Mac security software\nvendor Intego that uses social engineering in a bid to install scareware known as \u201cMACDefender.\u201d\n\nThe nice thing about social engineering attacks is that defending against them doesn\u2019t require\nbuying or installing some type of security software. As I noted in a column last week, it merely\nrequires the user to accept the notion that \u201csecurity-by-obscurity is no substitute for good\nsecurity practices and common sense: If you\u2019ve installed a program, update it regularly; if you\ndidn\u2019t go looking for a program, add-on or download, don\u2019t install it; if you no longer need a\nprogram, remove it.\u201d\n\n", "polarity": 0.13636071136071132, "subjectivity": 0.4240812115812116, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/04/time-to-patch-your-flash/", "date": "2011-04-15T00:00:00.000Z", "author": "Brian Krebs", "title": "Time to Patch Your Flash", "body": "If it seems like you just updated your Flash Player software to plug a security hole that attackers\nwere using to break into computers, you\u2019re probably not imagining things: Three weeks ago, Adobe\nrushed out a new version to sew up a critical new security flaw. Today, Adobe issued a critical\nFlash update to eliminate another dangerous security hole that criminals are actively exploiting.\n\nThis new update addresses a vulnerability first detailed here at KrebsOnSecurity.com on Tuesday, and\nAdobe deserves credit for responding quickly with a patch. But there are few things that are simple\nabout updating Flash, which ships in a dizzying array of version numbers and for many users must be\ndeployed at least twice to cover all browsers. In addition, users may have to uninstall the existing\nversion before updating to guarantee a trouble-free install. Also, Adobe Air will need to be updated\nif that software also is already installed. Finally, fixing this same vulnerability in Adobe Reader\nand Acrobat will require installing another patch, which won\u2019t be out for at least another 10 days.\n\nThe new version fixes a flaw that exists in Flash v. 10.2.153.1 (Adobe Flash Player 10.2.154.25 and\nearlier for Chrome users) for  Windows, Macintosh, Linux, and Solaris, and Adobe Flash Player\n10.2.156.12 and earlier versions for Android.\n\nAdobe recommends that users of Flash Player 10.2.153.1 and earlier versions (Adobe Flash Player\n10.2.154.25 and earlier versions for Chrome users) for Windows,  Macintosh, Linux, and Solaris\nupdate to Adobe Flash Player 10.2.159.1  (Adobe Flash Player 10.2.154.27 for Chrome users).  Adobe\nrecommends  users of Adobe AIR 2.6.19120 and earlier versions for Windows, Macintosh  and Linux\nupdate to Adobe AIR 2.6.19140. Adobe expects to make  available an update for Adobe Flash Player\n10.2.156.12 and earlier  versions for Android no later than the week of April 25, 2011.\n\nNot sure which version of Flash you have? Visit this version checker link to find out. Remember that\nif you use Internet Explorer in addition to other   browsers, you will need to apply this update\ntwice: Once to install the   Flash Active X plugin for IE, and again to update other browsers, such\nas Firefox and Opera. Updates are available by browsing with the appropriate browser to the Flash\nPlayer Download Center. Bear in mind that updating via the Download Center involves installing\nAdobe\u2019s Download Manager, which may try to foist additional software. If you\u2019d prefer to update\nmanually, the direct installers for Windows should be available at this link.\n\nIf you run into problems installing this update, you\u2019ll want to uninstall previous versions of Flash\nPlayer and then try again.\n\nFor those who are manually updating Flash without the download manager, the link to the Adobe Air\nupdater (version 2.6) is here.\n\nKeeping up with Flash and other security updates for plug-ins is one area where Google Chrome really\nshines. Google automatically updates Chrome with the newest version of Flash, and it typically does\nthis at least one or two days before Adobe officially releases Flash updates (it looks like Google\nupdated Chrome to fix this flaw on Thursday). According to Google\u2019s Eric Davis, Chrome also\nsandboxes Flash for Chrome browsers running on Windows Vista and Windows 7. In addition, Chrome\nupdates other out-of-date extensions automatically, and automatically updates its built-in PDF\nviewer, which also is sandboxed.\n\nSpeaking of PDF viewers, Adobe said in its advisory issued Tuesday that the same flaw that bedevils\nFlash also exists in the Authplay.dll component that ships with Adobe Reader and Acrobat X  (10.0.2)\nand earlier 10.x and 9.x versions for Windows and Macintosh  operating systems. The company says it\nplans to make an update available for Adobe Acrobat X (10.0.2) and earlier 10.x and  9.x versions\nfor Windows and Macintosh, Adobe Reader X (10.0.1) for  Macintosh, and Adobe Reader 9.4.3 and\nearlier 9.x versions for Windows  and Macintosh no later than the week of April 25, 2011. As it said\nin the case of the previous Flash flaw three weeks ago, \u201cBecause Adobe  Reader X Protected Mode\nwould prevent an exploit of this kind from  executing, we are currently planning to address this\nissue in Adobe  Reader X for Windows with the next quarterly security update for Adobe  Reader,\ncurrently scheduled for June 14, 2011.\u201d\n\n", "polarity": 0.029854096520763176, "subjectivity": 0.4320533376088931, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/03/critical-security-updates-for-adobe-acrobat-flash-reader/", "date": "2011-03-21T00:00:00.000Z", "author": "Brian Krebs", "title": "Critical Security Updates for Adobe Acrobat, Flash, Reader", "body": "Adobe today released a software update to plug a critical security hole in its Flash Player, Adobe\nAcrobat and PDF Reader products. The patch comes a week after the software maker warned that\nmiscreants were exploiting the Flash vulnerability to launch targeted attacks on users.\n\nThe Flash update addresses a critical vulnerability  in Adobe Flash Player version 10.2.152.33 and\nearlier; versions (Adobe Flash  Player version 10.2.154.18 and earlier versions for Chrome users)\nfor Windows,  Macintosh, Linux and Solaris operating systems; and Adobe Flash Player 10.1.106.16 and\nearlier versions for Android.\n\nAdobe is urging all users to upgrade to the latest version \u2014 Flash v. 10.2.153.1 (Chrome users want\nv. 10.2.154.25, although Google is likely to auto-update it soon, given their past speediness in\napplying Flash updates). Update: According to The Register\u2019s Dan Goodin, Google updated Chrome to\npatch this Flash flaw a full three days ago!\n\nOriginal post: Click this link to find out what version of Flash you have installed. If something\ngoes wrong in your update, or if you\u2019re just a stickler for following directions, Adobe recommends\nuninstalling the current version of Flash before proceeding with the update (Mac users see this\nlink).\n\nAs always, if you use Internet Explorer in addition to other  browsers, you will need to apply this\nupdate twice: Once to install the  Flash Active X plugin for IE, and again to update other browsers,\nsuch  as Firefox and Opera. Updates are available by browsing to the Flash Player Download Center. A\nmanual installer for Windows should be available at this link.\n\nIf you have Adobe Reader or Acrobat installed, you are going to have to update these programs, too,\nbecause they contain the same vulnerability Adobe said attackers have been using against Flash\nusers. For users of Adobe Reader 9.4.2 for Windows and Macintosh, Adobe has  made available Adobe\nReader 9.4.3. Adobe says the \u201cprotected mode\u201d built into its Adobe Reader X version would prevent an\nexploit of this kind from working, so the company doesn\u2019t play to address the issue in Reader X\nuntil the next quarterly update, due out June 14, 2011. In the meantime, Adobe X users on Windows\nand Mac should make sure they have the latest version installed (10.0.2). If you want to check your\nversion of Reader, open the program and click the \u201cHelp\u201d menu, and the look for an entry that says\n\u201cAbout Adobe Reader.\u201d\n\nReader users on Windows and Mac can use the software\u2019s built-in update mechanism, by choosing\n\u201cHelp,\u201d then \u201cCheck for Updates.\u201d Alternatively, the download page is here (note that updating via\nthe Web site may pre-check the option for installing other software, such as security scanners: If\nyou don\u2019t want those extras, pay close attention during the install process).\n\nMore details on these updates are available at the advisory Adobe re-released today.\n\n", "polarity": 0.11028645833333334, "subjectivity": 0.5176215277777778, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/03/test-your-browsers-patch-status/", "date": "2011-03-30T00:00:00.000Z", "author": "Brian Krebs", "title": "Test Your Browser\u2019s Patch Status", "body": "With new security updates from vendors like Adobe, Apple and Java coming out on a near-monthly\nbasis, keeping your Web browser patched against the latest threats can be an arduous, worrisome\nchore. But a new browser plug-in from security firm Qualys makes it quick and painless to identify\nand patch outdated browser components.\n\nThe Qualys BrowserCheck plug-in works across multiple browsers \u2014 including Internet Explorer,\nFirefox, Chrome and Opera, on multiple operating systems. Install the plug-in, restart the browser,\nclick the blue \u201cScan Now\u201d button, and the results should let you know if there are any security or\nstability updates available for your installed plug-ins (a list of the plug-ins and add-ons that\nthis program can check is available here). Clicking the blue \u201cFix It\u201d button next to each action\nitem listed fetches the appropriate installer from the vendor\u2019s site and prompts you to download and\ninstall it. Re-scan as needed until the browser plug-ins are up to date.\n\nSecunia has long had a very similar capability built into its free Personal Software Inspector\nprogram, but I realize not everyone wants to install a new program + Windows service to stay abreast\nof the latest patches (Secunia also offers a Web-based scan, but it requires Java, a plug-in that I\nhave urged users to ditch if possible). The nice thing about Qualys\u2019 plug-in approach is that it\nworks not only on Windows, but also on Mac and Linux machines. On Windows 64-bit systems, only the\n32-bit version of Internet Explorer is supported, and the plug-in thankfully nudges IE6 and IE7\nusers to upgrade to at least IE8.\n\nHaving the latest browser updates in one, easy-to-manage page is nice, but remember that the\ninstallers you download may by default come with additional programs bundled by the various plug-in\nmakers. For example, when I updated Adobe\u2019s Shockwave player on my test machine, the option to\ninstall\u00a0 Registry Mechanic was pre-checked. The same thing happened when I went to update my Foxit\nReader plug-in, which wanted to set Ask.com as my default search provider, set ask.com as my home\npage, and have the Foxit toolbar added.\n\n", "polarity": 0.12855831037649218, "subjectivity": 0.49066574839302124, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/03/adobe-attacks-on-flash-player-flaw/", "date": "2011-03-14T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe: Attacks on Flash Player Flaw", "body": "Adobe warned today attackers are exploiting a previously unknown security flaw in all supported\nversions of its Flash Player software. The company said the same vulnerability exists in Adobe\nReader and Acrobat, but that it hasn\u2019t yet seen attacks targeting the flaw in those programs.\n\nIn an advisory released today, Adobe said malicious hackers were exploiting a critical security hole\nin Flash (up to and including the latest version of Flash. The software maker warned the\nvulnerability also exists in Adobe Flash player 10.2.152.33 and earlier versions for Windows, Mac,\nLinux and Solaris operating systems (10.2.154.13 and earlier for Chrome users), Flash Player\n101.106.16 and earlier for Android. In addition, Adobe believes the bug lives in the \u201cauthplay.dll\u201d\ncomponent that ships with Adobe Reader and Acrobat X (10.0.1) and earlier 10.x and 9.x versions for\nWindows and Mac systems.\n\nAdobe warns that the security hole is currently being exploited via Flash (.swf) files embedded in a\nMicrosoft Excel document delivered as an email attachment. Why someone would need to embed a Flash\nfile in an Excel document is anyone\u2019s guess.\n\nThe company says it is in the process of churning out a fix for the problem, which should be\navailable during the week of March 21.\n\nFor those readers wondering whether the security fortifications built into Reader X block this\nattack, Adobe says you will have to take their word for it:\u00a0 \u201cBecause  Adobe Reader X Protected Mode\nwould prevent an exploit of this kind from  executing, we are currently planning to address this\nissue in Adobe  Reader X for Windows with the next quarterly security update for Adobe  Reader,\ncurrently scheduled for June 14, 2011.\u201d\u00a0 Brad Arkin, senior director of product security and privacy\nfor Adobe, said in a blog post that providing an out-of-cycle update for Adobe Reader X would have\ndelayed the current patch release schedule by about another week.\n\nNow is a good time to point out that the \u201cNoscript\u201d plugin for Firefox will block Flash on sites\nthat you have not specifically allowed to load Flash files. If you are looking for alternative PDF\nreaders, there are several.\n\nIn other news, Google said Friday that it is seeing some highly targeted and apparently politically\nmotivated attacks against users that abuse a publicly-disclosed vulnerability in Internet Explorer.\nMicrosoft has not issued an official patch for this IE flaw yet, but if you browse the Web with IE,\nit would be a great idea to take advantage of the FixIt tool that Microsoft has made available to\nblunt the threat from this vulnerability.\n\n", "polarity": 0.1232608695652174, "subjectivity": 0.47782608695652173, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/03/patch-tuesday-etc/", "date": "2011-03-08T00:00:00.000Z", "author": "Brian Krebs", "title": "Patch Tuesday, Etc.", "body": "Microsoft has issued security updates to fix at least four security holes in its Windows operating\nsystem and other software. Not exactly a fat Patch Tuesday from Microsoft, but depending on how\nagile you are in updating third-party applications like Flash, iTunes and Shockwave, you may have\nsome additional patching to do.\n\nOne of the updates from Microsoft earned a \u201ccritical\u201d rating, meaning Redmond believes it could be\nexploited to break into vulnerable systems with little to no help from users. That flaw, a bug in\nthe way Windows Media Player and Media Center process certain types of media files, could be\nleveraged by convincing a user to open a tainted video file. This flaw affects Windows XP, Vista and\nWindows 7.\n\nMicrosoft has more details on and links to the other two patches \u2014 rated \u201cimportant\u201d \u2014 at its\nSecurity Response Center blog. The updates are available through Windows Update or via Automatic\nUpdate. The software giant chose not to address an Internet Explorer vulnerability that hackers have\nbeen exploiting since late January, although the company has issued a stopgap \u201cFixIt\u201d tool for that\nflaw.\n\nIn other news, Apple has released an update to iTunes that corrects more than 50 security\nvulnerabilities in the Windows version of this software. That patch bundle is available from Apple\nDownloads or via the Apple Software Update program that now comes bundled with iTunes and other\nApple software for Windows.\n\nI\u2019m a bit behind in reporting on important updates to Adobe\u2019s Flash and Shockwave players that fix a\nload of problems with these widely-installed software packages. The Flash update bumps the player up\nto version 10.2.152.26, and plugs at least 13 security holes on both Windows and Mac installations.\nTo check which version you have installed, visit this page: There is a decent chance that Adobe\u2019s\nbuilt-in updater has already prompted you to update this program. If your version is lower than\n10.2.152.26, it\u2019s time to update.\n\nUpdates are available via Adobe\u2019s Download Center or directly from this page. The latter option\navoids Adobe\u2019s obnoxious Download Manager, which may prompt you to install additional software that\nyou don\u2019t need or want. Remember that if you are using both Internet Explorer and a non-IE browser\nlike Firefox or Opera, you will need to install Flash twice, once with the IE ActiveX installer, and\nagain with your other browser. Google Chrome users should already have this version of Flash\ndeployed (but do take a second to check this page to make sure you have the right version, just in\ncase).\n\nThe critical Shockwave patch brings the player to version 11.5.9.620, and addresses at least 21\nsecurity holes in the program. But readers should check to see whether they even have this program\ninstalled before installing the latest version. If you visit this link and see a prompt to install\nShockwave, then you don\u2019t have the program. If you do have it installed, you should see a version\nnumber beneath the Shockwave icon. Updates are available for Windows and Mac versions of Shockwave.\n\nUpdate, Mar. 9, 8:31 a.m. ET: It seems that many readers already have an even newer version of Flash\ninstalled, v. 10.2.152.32. I checked with Adobe, and they confirmed that this 10.2.152.32 is in fact\nthe latest version, although it contains no additional security fixes. More information on the .32\nupdate is available here.\n\n", "polarity": 0.11928294573643411, "subjectivity": 0.5264581026208931, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/01/exploit-packs-run-on-java-juice/", "date": "2011-01-10T00:00:00.000Z", "author": "Brian Krebs", "title": "Exploit Packs Run on Java Juice", "body": "In October, I showed why Java vulnerabilities continue to be the top moneymaker for purveyors of\n\u201cexploit kits,\u201d commercial crimeware designed to be stitched into hacked or malicious sites and\nexploit a variety of Web-browser vulnerabilities. Today, I\u2019ll highlight a few more recent examples\nof this with brand new exploit kits on the market, and explain why even fully-patched Java\ninstallations are fast becoming major enablers of browser-based malware attacks.\n\nCheck out the screenshots below, which show the administration page for two up-and-coming exploit\npacks. The first, from an unusually elaborate exploit kit called \u201cDragon Pack,\u201d is the author\u2019s own\ninstallation, so the percentage of \u201cloads\u201d or successful installations of malware on visitor PCs\nshould be taken with a grain of salt (hat tip to Malwaredomainlist.com). Yet, it is clear that\nmiscreants who purchase this pack will have the most success with Java flaws.\n\nThis blog has a nice writeup \u2014 and an additional stats page \u2014 from a  compromised site that last\nmonth was redirecting visitors to a page  laced with exploits from a Dragon Pack installation.\n\nThe second image, below, shows an administrative page that is centralizing statistics for several\nsites hacked with a relatively new $200 kit called \u201cBleeding Life.\u201d Again, it\u2019s plain that the Java\nexploits are the most successful. What\u2019s interesting about this kit is that its authors advertise\nthat one of the \u201cexploits\u201d included isn\u2019t really an exploit at all: It\u2019s a social engineering\nattack. Specifically, the hacked page will simply abuse built-in Java functionality to ask the\nvisitor to run a malicious Java applet.\n\nOn Dec. 29, the SANS Internet Storm Center warned about a wave of Java attacks that were apparently\nusing this social engineering approach to great effect. The attacks were taking advantage of built-\nin Java functionality that will prompt the user to download and run a file, but using an alert from\nJava (if a Windows user accepts, he or she is not bothered by a separate prompt or warning from the\noperating system).\n\n\u201cIf you don\u2019t have any zero-days, you can always go back to exploiting  the human!\u201d SANS incident\nhandler Daniel Wesemann wrote. \u201cThis is independent of the JRE version used \u2013 with JRE  default\nsettings, even on JRE1.6-23, all the user has to do is click \u2018Run\u2019 to get owned. \u00a0The one small\nimprovement is that the latest JREs  show \u2018Publisher: (NOT VERIFIED) Java Sun\u2019 in the pop-up, but I\nguess  that users who read past the two exclamation marks will be bound to  click \u2018Run\u2019 anyway.\u201d\n\nResearchers at Kaspersky Lab also have tracked a sizable uptick in attacks leveraging social\nengineering via Java. Vyacheslav Zakorzhevsky, a senior malware analyst at the Russian security\nfirm, covered this trend in the company\u2019s December 2010 monthly malware statistics report.\n\nThe graphic below shows the number computers that Kaspersky found were infected with Trojan-\nDownloader.Java.OpenConnection in the last six weeks of 2010.\n\nI\u2019m not advocating mass abandonment of Java, as some readers have charged. But I continue to urge\nusers who have no reason to use this program to get rid of it, particularly on systems that are\nshared by less careful Web surfers. I have Java installed on a couple of my PCs where a particular\nsoftware program requires it to run properly, but I have disconnected the Java plugins from the\nbrowsers on those systems.\n\nIf you\u2019re a Firefox user and a Web site you frequent requires Java, consider installing and using\nthe excellent NoScript extension, which will block Web sites from running Java applets unless you\nspecifically whitelist them.\n\n", "polarity": 0.1605413377472201, "subjectivity": 0.40160215601392063, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/12/what-you-should-know-about-history-sniffing/", "date": "2010-12-06T00:00:00.000Z", "author": "Brian Krebs", "title": "What You Should Know About History Sniffing", "body": "Researchers have discovered that dozens of Web sites are using simple Javascript tricks to snoop\ninto visitors\u2019 Web browsing history. While these tricks are nothing new, they are in the news again,\nso it\u2019s a good time to remind readers about ways to combat this sneaky behavior.\n\nThe news is based on a study released by University of California, San Diego researchers who found\nthat a number of sites were \u201csniffing\u201d the browsing history of visitors to record where they\u2019d been.\n\nThis reconnaissance works because browsers display links to sites you\u2019ve visited differently than\nones you haven\u2019t: By default, visited links are purple and unvisited links are blue. History-\nsniffing code running on a Web page simply checks to see if your browser displays links to specific\nURLs as purple or blue.\n\nThese are not new discoveries, but the fact that sites are using this technique to gather\ninformation from visitors seems to have caught many by surprise: A lawyer for two California\nresidents said they filed suit against one of the sites named in the report \u2014 YouPorn \u2014 alleging\nthat it violated consumer-protection laws by using the method.\n\nAs has been broadly reported for months, Web analytics companies are starting to  market products\nthat directly take advantage of this hack.\u00a0 Eric Peterson reported on an Israeli firm named\nBeencounter that openly sells a tool to Web\u00a0  site developers to query whether site visitors had\npreviously visited up  to 50 specific URLs.\n\nThe Center for Democracy & Technology noted in March that another company called Tealium has been\nmarketing a product  taking advantage of this exploit for nearly two years.\u00a0 \u201cTealium\u2019s  \u201cSocial\nMedia\u201d service runs daily searches of a customer\u2019s name for news  and blog postings mentioning the\ncustomers, and then runs a JavaScript  application on the customer\u2019s site to determine whether\nvisitors had  previously read any of those stories,\u201d CDT wrote. \u201cThe service allows Tealium\ncustomers a unique insight into what sites visitors had previously read  about the company that may\nhave driven them to the company\u2019s Web site.\u201d\n\nIf you\u2019d like see this history sniffing technique in action, check out this blog post (from 2008)\nand click the \u201cStart Analyzing My Browsing History\u201d button about halfway down the page. That site\nalso will try to guess whether you\u2019re a man or a woman by indexing the sites it finds against the\nQuantcast Top 10,000 sites. It guessed that there was a 99 percent likelihood I was male (phew!),\nbut your mileage may vary.\n\nFortunately, the browser makers (most of them) have responded. These sniffing attacks \u2014 such as the\nproof-of-concept I linked to above \u2014 do not appear to work against the latest versions of Chrome and\nSafari.\u00a0 Within Mozilla Firefox, these script attacks can be blocked quite easily using a script-\nblocking browser plugin, such as the Noscript add-on.\n\nMozilla addressed this history-sniffing weakness in a bug report that persisted for eight years and\nwas only recently corrected, but the changes won\u2019t be rolled into Firefox until version 4 is\nreleased. As a result, current Firefox users still need to rely on script blocking to stop this.\nInternet Explorer currently does not have a simple way to block scripts from within the browser\n(yes, users can block Javascript across the board and add sites to a whitelist, but that whitelist\nlives several clicks inside of the IE options panel).\n\n", "polarity": 0.08333641290958363, "subjectivity": 0.3654123992538627, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/12/rap-sheets-on-top-software-vendors/", "date": "2010-12-07T00:00:00.000Z", "author": "Brian Krebs", "title": "Rap Sheets on Top Software Vendors", "body": "A new online resource aims to make it easier to gauge the relative security risk of using different\ntypes of popular software, such as Web browsers and media players.\n\nLast month, I railed against the perennial practice of merely counting vulnerabilities in a software\nproduct as a reliable measure of its security: Understanding the comparative danger of using\ndifferent software titles, I argued, requires collecting much more information about each, such as\nhow long known flaws existed without patches. Now, vulnerability management firm Secunia says its\nnew software fact sheets try to address that information gap, going beyond mere vulnerability counts\nand addressing the dearth of standardized and scheduled reporting of important security parameters\nfor top software titles.\n\n\u201cIn the finance industry, for example, key performance parameters are reported yearly or quarterly\nto consistently provide interested parties, and the public, with relevant information for decision-\nmaking and risk assessment,\u201d  the company said.\n\nIn addition to listing the number of vulnerabilities reported and fixed by different software\nvendors, the fact sheets show the impact of a successful attack on the flaw; whether the security\nhole was patched or unpatched on the day it was disclosed; and information about the window of\nexploit opportunity between disclosure and the date a patch was issued.\n\nThe fact sheets allow some useful comparisons \u2014 such as between Chrome, Firefox, Internet Explorer\nand Opera. But I\u2019m concerned they will mainly serve to fan the flame wars over which browser is more\nsecure. The reality, as shown by the focus of exploit kits like Eleonore, Crimepack and SEO Sploit\nPack, is that computer crooks don\u2019t care which browser you\u2019re using: They rely on users browsing the\nWeb with outdated software, especially browser plugins like Java, Adobe Flash and Reader (all links\nlead to PDF files).\n\n", "polarity": 0.12062561094819158, "subjectivity": 0.5131964809384163, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/11/why-counting-flaws-is-flawed/", "date": "2010-11-18T00:00:00.000Z", "author": "Brian Krebs", "title": "Why Counting Flaws is Flawed", "body": "Once or twice each year, some security company trots out a \u201cstudy\u201d that counts the number of\nvulnerabilities that were found and fixed in widely used software products over a given period and\nthen pronounces the worst offenders in a Top 10 list that is supposed to tell us something useful\nabout the relative security of these programs. And nearly without fail, the security press parrots\nthis information as if it were newsworthy.\n\nThe reality is that these types of vulnerability count reports \u2014 like the one issued this week by\napplication whitelisting firm Bit9 \u2014 seek to measure a complex, multi-faceted problem from a single\ndimension. It\u2019s a bit like trying gauge the relative quality of different Swiss cheese brands by\ncomparing the number of holes in each: The result offers almost no insight into the quality and\nintegrity of the overall product, and in all likelihood leads to erroneous and \u2014 even humorous \u2014\nconclusions.\n\nThe Bit9 report is more notable for what it fails to measure than for what it does, which is\nprecious little: The applications included in its 2010 \u201cDirty Dozen\u201d Top Vulnerable Applications\nlist had to:\n\nThe report did not seek to answer any of the questions that help inform how concerned we should be\nabout these vulnerabilities, such as:\n\nThe reason more security companies do not ask these questions is that finding the answers is time-\nconsuming and difficult. I should know: I volunteered to conduct this analysis on several occasions\nover the past five years. A while back, I sought to do this with three years of critical updates for\nMicrosoft Windows, an analysis that involved learning when each vulnerability was reported or\ndiscovered, and charting how long it took Microsoft to fix the flaws. In that study, I found that\nMicrosoft actually took longer to fix flaws as the years went on, but that it succeeded in an effort\nto convince more researchers to disclose flaws privately to Microsoft (as opposed to simply posting\ntheir findings online for the whole world to see).\n\nI later compared the window of vulnerability for critical flaws in Internet Explorer and Mozilla\nFirefox, and found that for a total 284 days in 2006 (or more than nine months out of the year),\nexploit code for known, unpatched critical flaws in pre-IE7 versions of  the browser was publicly\navailable on the Internet. In contrast, I found that Firefox experienced a single period lasting\njust nine days during that same year in which exploit code for a serious security hole was posted\nonline before Mozilla shipped a patch to fix the problem.\n\nBit9\u2019s vulnerability count put Google Chrome at the Number 1 spot on its list, with 76 reported\nflaws in the first 10 months of this year. I\u2019d like to propose that \u2014 by almost any objective\nmeasure \u2014 Adobe deserves to occupy the first, second and third positions on this grotesque\nvulnerability totem pole, thanks to\u00a0 vulnerabilities in and incessant attacks against its PDF\nReader, Flash and Shockwave software.\n\nFor one thing, Adobe appears to have had more windows of vulnerability and attack against flaws in\nits products than perhaps all of the other vendors on the list combined. Adobe even started this\nyear on the wrong foot: On Dec. 15, 2009, the company announced that hackers were breaking into\ncomputers using a critical flaw in Reader and Acrobat. It wasn\u2019t until Jan. 7 \u2014 more than three\nweeks later \u2014 that the company issued a patch to fix the flaw.\n\nThis happened again with Adobe Reader for 20 days in June, and for 22 days in September. Just\nyesterday, Adobe issued a critical update in Reader that fixed a flaw that hackers have been\nexploiting since at least Oct. 28.\n\nTrue, not all vendors warn users about security flaws before they can issue patches for them, as do\nAdobe, Microsoft and Mozilla: In many ways this information makes these vendors easier to hold\naccountable. But I think it\u2019s crucial to look closely at how good a job software vendors do at\nhelping their users stay up-to-date with the latest versions. Adobe and Oracle/Sun, the vendors on\nthe list with the most-attacked products today, both have auto-update capabilities, but these\nupdaters can be capricious and slow.\n\nGoogle and Mozilla, on the other hand, have helped to set the bar on delivering security updates\nquickly and seamlessly. For example, I\u2019ve found that when I write about Adobe Flash security\nupdates, Google has already pushed the update out to its Chrome users before I finish the blog post.\nThe same is true when Mozilla issues patches to Firefox.\n\nMarc Maiffret, CTO at eEye Digital Security, also took issue with the Bit9 report, and with Google\u2019s\nposition at #1.\n\n\u201cWhile many vulnerabilities might exist for  Chrome, there are very few exploits for Chrome\nvulnerabilities compared  to Adobe,\u201d Maiffret said. \u201cThat is to say that while Chrome has more\nvulnerabilities than  Adobe, it does not have nearly the amount of malicious code in the wild  to\nleverage those vulnerabilities.\u201d\n\nThere is no question that software vendors across the board need to do a better job of shipping\nproducts that contain far fewer security holes from the start: A study released earlier this year\nfound that the average Windows user has software from 22 vendors on her PC, and needs to install a\nnew  security update roughly every five days in order to use these programs  safely. But security\ncompanies should focus their attention on meaningful metrics that drive the worst offenders to\nimprove their record, making it easier for customers to safely use these products.\n\n", "polarity": 0.059739201016374935, "subjectivity": 0.4443325334086202, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/10/critical-fixes-for-shockwave-firefox/", "date": "2010-10-28T00:00:00.000Z", "author": "Brian Krebs", "title": "Critical Fixes for Shockwave, Firefox", "body": "Adobe Systems pushed out a critical security update for its Shockwave Player that fixes nearly a\ndozen security vulnerabilities.\u00a0 The software maker also is warning that attackers are targeting a\npreviously unidentified security hole in its Acrobat and PDF Reader products.\n\nThe Shockwave patch plugs 11 security holes in program, most of which attackers could use remotely\nto take control over an affected system.\u00a0 Updates are available for Mac and Windows computers, from\nthis link. The latest version is 11.5.9.615.\u00a0 Before you blithely click through the process, keep a\nlookout for pre-checked \u201cfree\u201d software that will install alongside this Shockwave update if you\nsimply accept all the default options. When I tested the Shockwave installer, it included a \u201cfree PC\nperformance scan from PC Tools\u2019s Registry Mechanic. I opted to untick the check mark next to that\noption before proceeding with the rest of the install, which was otherwise uneventful.\n\nDue to Adobe\u2019s huge market share and apparent abundance of as-yet-undiscovered security holes, life\nwith Adobe\u2019s products can feel a bit like playing Whac-a-Mole: Just when you\u2019ve patched one Adobe\nproduct it seems like there\u2019s another one under assault by attackers. True to form, Adobe released a\nseparate advisory today warning that hackers were targeting a critical flaw in the latest version of\nits Acrobat and PDF Reader products.\n\nAdobe says the Acrobat/Reader vulnerability could cause a crash and potentially  allow an attacker\nto take control of the affected computer, and that there are  reports that this vulnerability is\nbeing actively exploited in the wild  against Adobe Reader and Acrobat 9.x. The flaw also exists in\nubiquitous Adobe\u2019s Flash Player, although the company said it is not currently aware of  attacks\ntargeting the latest version of Flash (v. 10.1.85.3).\n\nEven so, Adobe plans to fix the issue in Flash before tackling it in Reader and Acrobat. The company\nsays it plans to issue a fix for the bug in Flash by Nov. 9, 2010, but that it doesn\u2019t expect to\nrelease an update to clobber the problem on Acrobat/Reader until the following week.\n\nIn other patch news, Mozilla has released an update that fixes a critical flaw that security experts\nwarned this week was being used to attack Firefox users. Chances are good that your copy of Firefox\n(assuming it is semi-recent) has already downloaded this update, which brings Firefox to version\n3.6.12 If you haven\u2019t already been prompted to restart Firefox, click \u201cHelp\u201d in the menu bar on top\nand look for an item that says \u201cApply Downloaded Update Now.\u201d Otherwise, it\u2019s available from\nMozilla\u2019s home page.\n\n", "polarity": 0.17946428571428572, "subjectivity": 0.5437074829931973, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/11/google-extends-security-bug-bounty-to-gmail-youtube-blogger/", "date": "2010-11-01T00:00:00.000Z", "author": "Brian Krebs", "title": "Google Extends Security Bug Bounty to Gmail, YouTube, Blogger", "body": "Google on Monday said it was expanding a program to pay security researchers who discreetly report\nsoftware flaws in the company\u2019s products. The move appears aimed at engendering goodwill within the\nhacker community while encouraging more researchers to keep their findings private until the holes\ncan be fixed.\n\nEarlier this year, Google launched a program to reward researchers who directly report any security\nholes found in the company\u2019s Chrome open-source browser project. With its announcement today, Google\nis broadening the program to include bugs reported for its Web properties, including Gmail, YouTube,\nBlogger and others (the company says its desktop apps \u2014 Android, Picasa and Google Desktop, etc.\nare not included in the expanded bounty program).\n\nThe program is unlikely to attract those who are looking to get rich selling security\nvulnerabilities, as there are several less reputable places online where critical bugs in important\nonline applications can fetch far higher prices. But the expanded bounty may just win over\nresearchers who might otherwise post their research online, effectively alerting Google to the\nproblem at the same time as the cyber criminal community.\n\n\u201cWe already enjoy working with an array of researchers to  improve Google   security, and some\nindividuals who have provided high  caliber reports   are listed on our credits page,\u201d Google\u2019s\nsecurity team wrote on the company\u2019s security blog. \u201cAs well as enabling us to thank  regular\ncontributors in a new way, we   hope our new program will  attract new researchers and the types of\nreports that help make our  users safer.\u201d\n\nThe standard reward for bugs will continue to be public recognition and $500, although the search\ngiant said bugs that are particularly severe or clever could earn rewards of up to $3,133.7 (this is\nleet speek for \u201celite\u201d).\n\nGoogle said it won\u2019t pay for bugs that involve overtly malicious attacks, such as social engineering\nand physical attacks or so-called \u201cblack hat search engine optimization\u201d techniques \u2014\u00a0 and that it\nwouldn\u2019t count less serious flaws such as denial-of-service bugs, or flaws in technologies recently\nacquired by Google.\n\nOther companies have established bug bounty programs. For example, Mozilla, the organization behind\nthe Firefox Web browser, for years paid researchers $500 for bugs, but recently upped the amount to\n$3,000.\n\nCharlie Miller, a security researcher who has reported a large number of bugs in a variety of\napplications and programs, was initially critical of such a tiny bounty from one of the world\u2019s\nwealthiest and most powerful businesses. But reached via e-mail Monday evening, Miller said that\nwhile he\u2019d always like to see more money being paid to bug researchers, the relatively few companies\nthat offer bug bounties also deserve recognition.\n\n\u201cWith so many companies (MS, Adobe, Apple, Oracle) not paying  anything, I\u2019m very happy to see any\nmoney going out for these types of  programs,\u201d Miller wrote. \u201cIt motivates  and rewards researchers.\nThe security of the products (or websites)  that the average person uses goes up. \u00a0Also, it provides\nvendors with a  level of control they otherwise lack. \u00a0If a researcher reports a bug and  then\ndecides they think the process is not working well, they\u2019ll think  twice about dropping it on full\ndisclosure if they know they\u2019ll lose  their finder\u2019s fee.\u201d\n\n", "polarity": 0.11185980685980684, "subjectivity": 0.4751984874100259, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/10/koobface-worm-targets-java-on-mac-os-x/", "date": "2010-10-27T00:00:00.000Z", "author": "Brian Krebs", "title": "Koobface Worm Targets Java on Mac OS X", "body": "A new version of the infamous Koobface worm designed to attack Mac OS X computers is spreading\nthrough Facebook and other social networking sites, security experts warn.\n\nSecurity software maker Intego says this Mac OS X version of the Koobface worm is being served as\npart of a multi-platform attack that uses a malicious Java applet to attack users. According to\nIntego, the applet includes a prompt to install the malicious software:\n\nIntego notes that if the download is allowed, \u201cit runs a local web server and an IRC server, acts as\npart of a botnet,  acts as a DNS changer, and can activate a number of other functions,  either\nthrough files initially installed or other files downloaded  subsequently. It spreads by posting\nmessages on Facebook, MySpace and  Twitter, usually trying to get people to click a link to view\nsome sort  of video.\u201d\n\nSecureMac also has a writeup on what appears to be the same threat, which it calls OSX.Boonana.a.\nSecureMac says that \u201cthere have been reports of similar behavior in recent trojan horses  targeting\nMicrosoft Windows, but they have not included cross-platform  capabilities until now.\u201d\n\nIt is not surprising that attackers would begin leveraging Java to attack Mac users with threats\nthat have traditionally only menaced Windows users. My research shows that Java is now the leading\nvector of attacks against Windows systems, findings that recently were buttressed by oodles of\nattack data released by Microsoft. Also, Java was designed to be a cross-platform technology that\nwould allow applications to run seamlessly regardless of the operating system relied upon by the\nuser. It makes sense for attackers to consider Java as a platform-agnostic vehicle for delivering\nplatform-specific malicious software.\n\nMac users can turn off Java in Safari by unchecking the box next to \u201cEnable Java\u201d in the \u201cSecurity\u201d\npanel of the Safari preferences panel. Firefox users can disable Java in the browser via the\n\u201cPlugins\u201d tab of the Add-ons menu.\n\nMac OS X machines ship with their own versions of Java, which Apple updates from time to time. Last\nweek, Apple shipped a new version of Java for OS X that fixes at least four security holes in the\nprogram. Updates are available through Apple Software Update or Apple Downloads.\n\nMalware that attacks Mac users may not have Java to kick around for much longer. As The Register and\na number of other tech publications reported last week, Apple has \u201cdeprecated\u201d Java on Mac OS X,\nmeaning it will pay even less  attention to upkeep of the platform, and it may kill the platform\nentirely on a future version of its operating system.\n\nUpdate, Oct. 30, 1:12 p.m. ET: Researchers at Paretologic have published an interesting blog post\nshowing that this attack also can infect Linux installations with Java installed.\n\n", "polarity": 0.0013584117032392944, "subjectivity": 0.3181295715778474, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/10/nobel-peace-prize-site-serves-firefox-0day/", "date": "2010-10-26T00:00:00.000Z", "author": "Brian Krebs", "title": "Nobel Peace Prize Site Serves Firefox 0day", "body": "The Web site for the Nobel Peace Prize has been serving up malicious software that takes advantage\nof a newly-discovered security hole in Mozilla Firefox, computer security experts warned today.\n\nOslo-based Norman ASA warned that visitors who browsed the Nobel Prize site with Firefox while the\nattack was active early Tuesday may have had malicious software silently installed on their\ncomputers without warning.\n\nMozilla just posted a blog entry saying it is aware of a critical vulnerability in Firefox 3.5 and\n3.6, and that it has received reports from several security research firms that exploit code\nleveraging this vulnerability has been detected in the wild. The software firm isn\u2019t saying much\nmore about the flaw for now.\n\nMozilla says it is developing a fix, which it plans to deploy as soon as it has been tested. In the\nmeantime, Firefox users can mitigate the threat from this flaw by using a script-blocking add-on\nlike NoScript.\n\nUpdate, 6:40 p.m. ET: I just heard back from Norman ASA malware analyst Snorre Fagerland via e-mail,\nand he has provided a bit more technical analysis of what\u2019s going on with this Firefox flaw and with\nthe exploit they discovered. Fagerland says the vulnerability is related to a \u201cuse-after-free\ncondition\u201d in certain objects, exploited through Javascript.\n\n\u201cShellcode and a large heapspray is involved,\u201d Fagerland wrote. \u201cThe script that does this checks\nfor the following versions:\n\nfirefox/3.6.8 firefox/3.6.9 firefox/3.6.10 firefox/3.6.11\n\n\u2026and it checks that it is NOT running Vista or Win7 (Windows versions 6.0 and 6.1), pretty much\nlimiting the attack to XP-family OS\u2019s. The underlying vulnerability is confirmed to also affect\nFirefox 3.5x series, but we have not seen exploit code that attacks this.\u201d\n\nUpdate, Oct. 27, 11:50 p.m. ET: Mozilla has opened up the bug report on this flaw.\n\n", "polarity": 0.12606516290726816, "subjectivity": 0.4026315789473684, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/10/firesheep-baaaaad-news-for-the-unwary/", "date": "2010-10-27T00:00:00.000Z", "author": "Brian Krebs", "title": "Firesheep: Baaaaad News for the Unwary", "body": "\u201cFiresheep,\u201d a new add-on for Firefox that makes it easier to hijack e-mail and social networking\naccounts of others who are on the same wired or wireless network, has been getting some rather\nbreathless coverage by the news media, some of whom have characterized this a new threat. In\nreality, this tool is more of a welcome reminder of some basic but effective steps that Internet\nusers should take to protect their personal information while using public networks.\n\nMost online services use secure sockets layer (SSL) encryption to scramble the initial login \u2014 as\nindicated by the presence of \u201chttps://\u201d instead of \u201chttp://\u201d in the address field when the user\nsubmits his or her user name and password. But with many sites like Twitter and Facebook, subsequent\ndata exchanges between the user and the site are sent unencrypted and in plain text, potentially\nexposing that information to anyone else on the network who is running a simple Web traffic snooping\nprogram.\n\nWhy should we care if post-login data is sent in unencrypted plain text? Most Web-based services use\n\u201ccookies,\u201d usually small, text-based files placed on the user\u2019s computer, to signify that the user\nhas logged in successfully and that he or she will not be asked to log in again for a specified\nperiod of time, usually a few days to a few weeks (although some cookies can be valid indefinitely).\n\nThe trouble is that the contents of these cookies frequently are sent unencrypted to and from the\nuser\u2019s computer after the user has logged in. That means that an attacker sniffing Web traffic on\nthe local network can intercept those cookies and re-use them in his own Web browser to post\nunauthorized Tweets or Facebook entries in that user\u2019s name, for example. This attack could also be\nused to gain access to someone\u2019s e-mail inbox.\n\nEnter Firesheep, a Firefox add-on released this past weekend at the Toorcon hacker conference in San\nDiego. Eric Butler, the security researcher who co-authored the tool, explains some of the backstory\nand why he and a fellow researcher decided to release it:\n\n\u201cThis is a widely known problem that has been talked about to death, yet very popular websites\ncontinue to fail at protecting their users. The only effective fix for this problem is full end-to-\nend encryption, known on the web as HTTPS or SSL. Facebook is constantly rolling out new \u2018privacy\u2019\nfeatures in an endless attempt to quell the screams of unhappy users, but what\u2019s the point when\nsomeone can just take over an account entirely?\u201d\n\nIn his blog post about Firesheep, I believe Butler somewhat overstates the threat posed by this add-\non when he says: \u201cAfter installing the extension you\u2019ll see a new sidebar. Connect to any  busy open\nwifi network and click the big \u2018Start Capturing\u2019 button. Then  wait.\u201d\n\nIt appears, however, that this add-on will only capture cookies from other users on a wireless\nnetwork in cases where the attacker has already compromised the security of the entire network\nitself. Still, a number of free, open source tools are available to accomplish this task and could\nbe used in combination with Firesheep to collect a ton of user logins on a busy wireless network.\nFor example, Ettercap is an extremely useful program that lets you trick other computers on the\nlocal network into thinking that your computer is the wired or wireless router, effectively routing\nall of the incoming and outgoing traffic on the local network through your computer. Ettercap is a\nstandard component of many Live CD installations of Linux that allow users to boot into a fully\nusable Linux distribution from a CD or USB device.\n\nI pinged Butler for an interview about his add-on, but have yet to hear back from him. If that\nchanges, I\u2019ll update this post.\n\nI tested Firesheep on a regular wireless network without running Ettercap and, sure enough, the only\ntime Firesheep recorded any logins was when I logged in from the same computer that was running\nFiresheep: It did not capture cookies when I logged in to the same accounts from other machines on\nmy wireless network. I tested this using two separate, commonly-sold wireless routers \u2014 with and\nwithout WEP/WPA encryption enabled \u2014 with the same results.\n\nCombine Firesheep with something like Ettercap, however, and you have a very powerful, point-and-\nclick method for hijacking social networking and e-mail accounts belonging to other users on the\nlocal network. This is exactly what McAfee director of research Dave Marcus found and explained\nquite well in his take on this tool earlier this week. Marcus also found that the add-on doesn\u2019t\ncollect cookies from other computers on a local network with the help of tools like Ettercap.\n\n\u201cWhat I like about Firesheep is that it is a very graphical way of showing people a  problem,\u201d\nMarcus said. \u201cThat said, it doesn\u2019t do anything  new.\u00a0 People have been talking about session and\ncookie hijacking since  at least 2003. [Butler] has just come out with a nifty extension for you to\nshow the extent of this threat graphically and uniquely.\u201d\n\nIn any case, Firesheep was meant to raise awareness about this problem, and it appears to have\nsucceeded in doing that. So what can you do to protect yourself? There are at least two Firefox add-\nons that can dramatically increase the security and privacy of your Web browsing while on public\nnetworks, and that directly address the weakness exploited by Firesheep. These add-ons force any Web\nsite you specify to encrypt all traffic (that is, always use an https:// connection), not just\nlogins.\n\nThe Electronic Frontier Foundation\u2018s add-on, Https-Everywhere, is nice because it comes with about\n20 sites pre-selected, including Facebook and Twitter. But some users may find its instructions for\nadding other sites to be a bit complex.\n\nAnother plug-in that makes it easier to add new sites is Force-TLS, although it does not include any\nsites by default.\n\nOne final note: The truly scary aspect of these types of network-level attacks is that they work\nagainst all computer users, regardless of operating system type. As for the helper add-on, Firesheep\nis available for Windows and OS X systems, and the authors say they are working on a version for\nLinux.\n\nUpdate, 4:06 p.m. ET: A couple of readers have pointed out a blog post from Robert Graham at\nErrataSec, which notes that the ForceTLS add-on may not succeed in forcing https on all sites. He\nalso offers some reasons why I may not have seen the Firesheep add-on working to capture cookies\nover the network. Graham writes: \u201cFireSheep works only as well as the underlying packet-capture. On\na Macintosh, the adapter can be fully promiscuous, capturing everybody\u2019s traffic on the local\naccess-point. On Windows, some adapters (like Broadcom) will see all the traffic, others (like\nIntel) will only see your own traffic (useful for watching which of your own websites can be\nsidejacked, but not useful for sidejacking others).\u201d\n\n", "polarity": 0.09820904181728922, "subjectivity": 0.4426285341233794, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/09/revisiting-secunias-personal-software-inspector/", "date": "2010-09-08T00:00:00.000Z", "author": "Brian Krebs", "title": "Revisiting Secunia\u2019s Personal Software Inspector", "body": "Security vulnerability research firm Secunia has released a public beta of its Personal Software\nInspector tool, a program designed to help Microsoft Windows users keep their heads above water with\nthe torrent of security updates for third-party applications. The new beta version includes the\npromised auto-update feature that can automatically apply the latest patches for a growing number of\nwidely-used programs.\n\nSecunia first announced in March that it would soon make the auto-update feature available to\nconsumers, noting that the average PC user needs to install a security update roughly every five\ndays in order to safely use Microsoft Windows and all of the third-party  programs that\u00a0 typically\nrun on top of it.\u00a0 The new beta version doesn\u2019t allow auto-updating for all applications, although\nSecunia says the list of applications that can be auto-updated through its tool will grow as the\npublic beta progresses.\n\nOverall, PSI 2.0 Beta seems to work quite a bit faster and use fewer resources than earlier\nversions. But my main concern in allowing third-party programs to update through PSI has so far been\n\u2014 ironically \u2014 relinquishing control over the update process. That\u2019s because many \u201cfree\u201d\napplications \u2014 such as Java, Adobe and Foxit readers \u2014 are free because a number of users never\nbother to deselect the check mark in the box next to offers to install additional software that is\noften bundled with these products, including virus scanners and various browser toolbars.\n\nI am happy to report that so far this has not been an issue. On my test installation of the PSI 2.0\nbeta, it allowed auto-updating for 10 installed applications, including Adobe AIR, Flash Player,\nFoxit, Firefox, Thunderbird, Opera, Pidgin, Skype, Java, and xChat. The PSI tool updated all of\nthose apps without any unwanted add-ons or toolbars that I can see.\n\nStefan Frei, research analyst director at Secunia, said the company wants to hear from users who\nreceive more than just the security update.\n\n\u201cWe always try to provide updates without unnecessary add-ons, but this is exactly the kind of of\nfeedback we are looking for during the beta,\u201d Frei said in an e-mail to KrebsOnSecurity.com. \u201cSo far\nwe haven\u2019t received any support cases indicating that we don\u2019t hit it right on, but it is something\nwe [are] aware of and will address if we receive any reports from users who find that it could be\noptimized.\u201d\n\nIf PSI can\u2019t auto-update any programs, it includes a clickable \u201cInstall Solution\u201d link in the tool\nthat fetches the executable update directly from the vendor\u2019s Web site.\n\nFor those who don\u2019t want to install PSI, Secunia makes available on its site an online version of\nthis tool \u2014 Online Software Inspector \u2014 although the OSI requires users to have Java installed (PSI\ndoes not require Java).\n\nIf you\u2019ve used the new PSI Beta, please sound off in the comments with your experiences.\n\n", "polarity": 0.17987012987012985, "subjectivity": 0.4699837662337661, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/08/reintroducing-the-malware-hash-registry/", "date": "2010-08-19T00:00:00.000Z", "author": "Brian Krebs", "title": "WinMHR: (Re)Introducing the Malware Hash Registry", "body": "Microsoft Windows users seeking more certainty about the security and integrity of downloaded files\nshould take a look at a free new offering from Internet security research firm Team Cymru\n(pronounced kum-ree) that provides a solid backup to anti-virus scans.\n\nThe tool, called \u201cWinMHR,\u201d is an extension of the \u201cMalware Hash Registry\u201d (MHR), an anti-malware\nservice that Team Cymru has offered for several years. The MHR is a large repository of the unique\nfingerprints or \u201chashes\u201d that correspond to millions of files that have been identified as malicious\nby dozens of anti-virus firms and other security experts over the years.\n\nThe MHR has been a valuable tool for malware analysts, but until now its Web-based and command-line\ninterface has placed it just outside the reach of most average computers users. WinMHR, on the other\nhand, is essentially a more user-friendly, point-and-click interface for the traditional MHR\nservice, which Team Cyrmu described this way:\n\n\u201cWhile your AV posture helps you perform detection based on signatures, heuristics and polymorphism,\nthe MHR provides you additional layer of detection, for known badness. Based on our research, AV\npackages have trouble detecting every possible piece of malware when it first appears. The MHR\nleverages multiple AV packages and our own malware analysis sandbox to help aid your detection rate.\nCoupled with AV, the MHR helps identify known problems so you can take action.\u201d\n\nWinMHR queries the MHR in real time when the user tells it to scan downloaded files (to cut down on\nresource consumption, the program does not automatically scan downloaded files). If it finds any\nmalicious files, it includes precise information about where the malware is hiding on the PC. The\ntool also includes a component that runs at Windows startup and scans Windows processes for malware\n(this feature can be disabled at installation or in the program\u2019s \u201cPreferences\u201d panel).\n\nIt is important to understand the limitations of this tool. First, it is designed to supplement \u2014\nnot replace \u2014 anti-virus software. Second, the tool doesn\u2019t include the capability to remove bad\nfiles that it finds (as readers can see in the screen shot above, the WinMHR detected several\nmalicious files when run on a test machine that I abuse quite a bit).\n\nFinally, while the tool displays the unique cryptographic hashes of any malware threats found on the\nuser\u2019s system, it does not try to classify or name them. If a scan with WinMHR manages to flag a\nfile that fails to generate an alert when the user scans the same file with his or her anti-virus\nprogram, the user can find more information about the nature of the file by exporting that hash to a\ntext file and submitting it to a scanning site like VirusTotal.com, which allows visitors to search\nfor malware based on MD5 or SHA1 hashes. Few but the most geeky users are likely to bother with that\nstep, which is why an application like this could be more useful with a simple right-click option to\nsubmit a hash lookup at Virustotal. Team Cymru\u2019s Steve Santorelli told me his firm likes that idea\nfor a future version, and that it plans to soon release a Firefox add-on version of the tool.\n\nDespite its limitations, WinMHR can be a useful addition to the security toolbox for Windows users,\nexperts and novices alike.\n\n", "polarity": 0.09228464771943033, "subjectivity": 0.4165756948365645, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/08/anti-virus-products-struggle-against-exploits/", "date": "2010-08-23T00:00:00.000Z", "author": "Brian Krebs", "title": "Anti-virus Products Struggle Against Exploits", "body": "Most anti-virus products designed for use in businesses do a poor job of detecting the exploits that\nhacked and malicious Web sites use to foist malware, a new report concludes.\n\nIndependent testing firm NSS Labs looked at the performance of 10 commercial anti-virus products to\nsee how well they detected 123 client-side exploits, those typically used to attack vulnerabilities\nin Web browsers including Internet Explorer and Firefox, as well as common desktop applications,\nsuch as Adobe Flash, Reader, and Apple QuickTime.\n\nRoughly half of the exploits tested were exact copies of the first exploit code to be made public\nagainst the vulnerability. NSS also tested detection for an equal number of exploit variants, those\nwhich exploit the same vulnerability but use slightly different entry points in the targeted\nsystem\u2019s memory. None of the exploits used evasion techniques commonly employed by real-life\nexploits to disguise themselves or hide from intrusion detection systems.\n\nAmong all ten products, NSS found that the average detection rate against original exploits was 76\npercent, and that only three out of ten products stopped all of the original exploits. The average\ndetection against exploits variants was even lower at 58 percent, NSS found.\n\nNSS President Rick Moy said most vendors appear to have chosen to focus on detecting the malicious\nsoftware variants delivered by these exploits than on blocking the exploits themselves.  Moy notes\nthat while the anti-virus vendors state they are now processing more than 50,000 malware samples\nevery day, it appears the majority of vendors still fail to block the most widely-used methods of\ndelivering those malware samples.\n\n\u201cWhen you\u2019re talking about exploits that have been published on a government funded web site for\nmonths on end, there\u2019s really no good excuse as to why you\u2019re not covering that,\u201d  Moy said. \u201cSince\nthere are far fewer exploits than malware, it is imperative that attacks be defeated in the\nearliest possible stage.\u201d\n\nThe NSS tests revealed that certain exploits were consistently missed by the anti-virus products,\nparticularly those that attacked the IE peers and MS VBscript help Internet Explorer vulnerabilities\nthat Microsoft first disclosed in March 2010.\n\nMoy shared a copy of the report on the condition that I refrain from disclosing how each individual\nproduct performed, as his company plans to sell the report. But as with the last NSS report I wrote\nabout \u2014 which looked at how long it takes anti-virus products to block malicious Web sites \u2014 this\nstudy focuses on testing individual aspects of anti-virus product performance, including some areas\nthat are glossed over in industry tests.\n\nEven without information about which products earned the highest marks in exploit blocking, one\ntakeaway from the report is the importance of patching as soon as possible after a vendor releases a\nfix, Moy said.\n\n\u201cThere is not a lot of focus on stopping exploits, is what we\u2019re finding, even though certainly at\nleast against the older exploits these security products should act as a virtual patch,\u201d Moy said,\nadding that organizations should consider developing custom exploit signatures for high-value\nsystems, either at the host or network layer. \u201cThe \u2018patch immediately\u2019 approach probably works for\nsmaller organizations, but larger companies tend to wait quite a while to make sure patches don\u2019t\nconflict with homegrown apps.\u201d\n\nStill, NSS doesn\u2019t make a lot of information available about its methods, and this omission has\ndriven much of the criticism of previous NSS Labs reports.\n\n\u201cIt would be nice if at least some information about the way the figures were arrived at were\navailable for scrutiny, so that an  interested party would have more than just a rather spectacular\nbut  otherwise context-free chart to gauge the relative value of the report,\u201d wrote Kurt Wismer, an\nanti-virus industry watcher and blogger. \u201cAs it stands, the information they make available on their\nsite is worse  than useless \u2013 figures without adequate context are precisely where the  idiom of\n\u2018lies, damn lies, and statistics\u2019 comes from. Posting the  context-free chart the way they have only\nserves to sensationalize the  report.\u201d\n\nWismer said the study highlights an area where many products have room for improvement,  and  that\nhaving more anti-virus products blocking the exploitation stage would be a very advantageous\nimprovement. But he said the report itself doesn\u2019t provide a full picture of the performance of\nthese products.\n\n\u201cIt just doesn\u2019t tell the customer whether or not they\u2019d   actually be protected in the real world,\u201d\nWismer wrote in an e-mail to KrebsOnSecurity.com. \u201cThe more links in the chain of events leading to\ncompromise that can be  used to a defenders advantage. a chain is only as strong as it\u2019s weakest\nlink and so only one stage of a multi-stage attack needs to be blocked  in order for the final\nintended outcome to be thwarted. A test that  doesn\u2019t include all the stages therefore necessarily\nomits information  that could be important in determining which products provide the best assistance\nat protection.\u201d\n\nInterestingly, a series of reports released earlier this month by anti-virus testing lab AV-Test\ncomes to similar conclusions as the NSS report about the exploit-blocking abilities of the major\nanti-virus products. According to AV-Test, the industry average in protecting against exploits (both\nknown and unknown) was 75 percent.\n\n", "polarity": 0.11052621159328477, "subjectivity": 0.4814820680674338, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/08/critical-updates-for-windows-flash-player/", "date": "2010-08-10T00:00:00.000Z", "author": "Brian Krebs", "title": "Critical Updates for Windows, Flash Player", "body": "Microsoft issued a record number of software updates today, releasing 14 update bundles to plug at\nleast 34 security holes in its Windows operating system and other software. More than a third of\nflaws earned a \u201ccritical\u201d severity rating, Microsoft\u2019s most serious. Separately, Adobe released an\nupdate for its Flash Player that fixes a half-dozen security bugs.\n\nMicrosoft tries to further emphasize which critical patches should be applied first, and it does\nthis largely by assessing which of the flaws appear to be the easiest and most reliable to attack.\nAccording to an analysis posted on the Microsoft Security Response Center blog, the most dangerous\nof the critical flaws patched this month involve media file format and Office bugs.\n\nSpecifically, Microsoft pointed out a critical flaw in Microsoft Silverlight and its .NET Framework,\nas well as bugs in the Microsoft MPEG-Layer 3 and Cinepak codecs. All of these media format\nvulnerabilities are critical and could be exploited merely by loading a tainted media file, either\nlocally or via a Web browser, Redmond said.\n\nThe software giant also urged customers to quickly deploy a patch that fixes at least four\nvulnerabilities in Microsoft Office, the most severe of which could lead to users infecting their\nPCs with malware simply by opening or viewing a specially-crafted e-mail.\n\nMore details on the rest of this month\u2019s updates are available here. Just a quick note about this\npatch batch for consumers: It might not hurt to wait a day or two before applying the Microsoft\nupdates. Given the sheer number of vulnerabilities addressed in this release, there is a good chance\nthat one or more of them may turn out to cause problems for some customers. Also, there don\u2019t appear\nto be any online threats actively exploiting any of these flaws at the moment.\n\nIn other news, Adobe released a patch for its ubiquitous Flash Player that fixes at least six flaws\nin Flash. The newest version brings Flash to v. 10.1.82.76. If you\u2019d like to know what version of\nFlash you are currently using, browse to this link.\n\nNote that if you use both Internet Explorer and non-IE browsers, you\u2019re going to need to apply this\nupdate at least twice, once by visiting the Flash Player installation page with IE and then again\nwith Firefox, Opera, Chrome or whatever other browser you use. Also, unless you want some \u201cfree\u201d\nsoftware \u2014 like McAfee Security Scan or whatever Adobe is bundling with Flash player this month \u2014\nremember to uncheck that option before you agree to download the software.\n\nFinally, a blog post I published on Sunday incorrectly stated that Adobe would be issuing an update\nfor its PDF Reader software today. Adobe plans to release the Reader update next week.\n\nAs always, please drop a note in the comment section below if you experience any issues applying\nthese updates.\n\n", "polarity": 0.06803135888501743, "subjectivity": 0.5112369337979094, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/06/adobe-flash-update-plugs-32-security-holes/", "date": "2010-06-10T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe Flash Update Plugs 32 Security Holes", "body": "As promised, Adobe has released a new version of its Flash Player software to fix a critical\nsecurity flaw that hackers have been exploiting to break into vulnerable systems. The update also\ncorrects at least 31 other security vulnerabilities in the widely used media player software.\n\nThe latest version, v. 10.1, fixes a number of critical flaws in Adobe Flash Player version\n10.0.45.2 and earlier. Don\u2019t know what version of Flash you\u2019ve got installed? Visit this page to\nfind out. The new Flash version is available for Windows, Mac and Linux operating systems, and can\nbe downloaded from this link.\n\nNote that if you use both Internet Explorer and non-IE browsers, you\u2019re going to need to apply this\nupdate twice, once by visiting the Flash Player installation page with IE and then again with\nFirefox, Opera, or whatever other browser you use.\n\nPlease take a moment to check if you have Flash installed and \u2014 if so \u2014 to update it: A working copy\nof the code used to exploit this vulnerability has been included in Metasploit, an open source\npenetration testing framework. Also note that Adobe likes to bundle all kinds of third party\nsoftware \u2014 from security scanners to various browser toolbars \u2014 with its software, so if you don\u2019t\nwant these extras you will need to uncheck the box next to the added software before you click the\ndownload button.\n\nThe vulnerability that prompted Adobe to issue this interim update (the company had been slated to\nissue these and other security updates on July 13) also is present in Adobe Reader and Acrobat,\nalthough Adobe says it does not plan to fix the flaw in either of these products until June 29.\n\nNow would be a great time for longtime users of Adobe\u2019s free Reader software to consider removing\nReader and switching to an alternative free reader, such as Foxit or Sumatra.\n\nNote that Flash generally comes with Adobe Download manager, a package that in prior versions has\nbeen found to harbor its own security vulnerabilities. The download manager is designed to uninstall\nitself from machines after a reboot, so to be on the safe side, you may want to reboot your system\nafter updating Flash.\n\n", "polarity": 0.10183566433566435, "subjectivity": 0.48400349650349656, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/06/dont-need-java-junk-it/", "date": "2010-06-11T00:00:00.000Z", "author": "Brian Krebs", "title": "Don\u2019t Need Java? Junk It.", "body": "I am often asked to recommend security software,\u00a0 but it\u2019s important to remember that staying secure\nis just as much about removing little-used software that increases your exposure to online threats.\nAt the very top of my nix-it-now list is Java, a powerful application that most users have on their\nsystems but that probably few actually need.\n\nNot only do most users have some version of Java on their systems, most Windows users likely have\nmultiple copies of this program on their PCs, because older installers failed to remove previous,\ninsecure versions of the software.\n\nWorse still, Java is now among the most frequently-attacked programs, and appears to be fast\nreplacing Adobe as the target of choice for automated exploit tools used by criminals.\n\nReaders of the blog are no doubt familiar with my previous stories on the Eleonore Exploit Pack, a\ncommercial software package sold by and to criminals that is used to booby trap Web sites with\nexploits for the most common Web browser vulnerabilities. Check out past posts on Eleonore, and it\u2019s\nclear Java flaws are a key target of this increasingly common exploit pack.\n\nBelow are a few screen shots taken from the administration page of yet another working Eleonore\nExploit Pack: The first image shows the exploits used by this pack, along with the number of times\neach exploit\u00a0 (\u201csploit\u201d) was successful in delivering malicious software payloads (or \u201cloads\u201d) to\nthe visitor. As we can see, the \u201cjava2e\u201d and \u201cjavae0\u201d are by far the most successful of the\nexploits.\n\nThe exploits from this pack were stitched into a number of hacked or maliciously crafted porn sites,\nshown below. But just because you don\u2019t surf porn doesn\u2019t mean these exploit packs can\u2019t touch you:\nMany are stitched into more mainstream sites, such as those belonging to online stores and blogs. I\nhope it goes without saying that readers should assume all of these sites below are still hostile\nand that you should *not* visit them unless you *really* know what you are doing:\n\nIt\u2019s probably worth noting the overall browser stats for this particular exploit panel: A little\nmore than 11 percent of those who visited these\u2026err\u2026booby trapped Web sites were successfully hit\nwith an exploit. At least with this group of exploit sites, nearly all of the visitors and victims\nappear to have visited with some version of Internet Explorer. I should note these stats should be\ntaken with a grain of salt, because it seems Eleonore\u2019s visitor numbers always contain statistical\noddities that make them suspect at best. For example, according to these numbers, only 30 out\u00a0 more\nthan 20,000 visitors (slightly more than one out of every thousand) visited the sites with some\nversion of Chrome, Firefox or Opera.\n\n", "polarity": 0.1636792452830189, "subjectivity": 0.4911163522012577, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/05/devious-new-phishing-tactic-targets-tabs/", "date": "2010-05-24T00:00:00.000Z", "author": "Brian Krebs", "title": "Devious New Phishing Tactic Targets Tabs", "body": "Most Internet users know to watch for the telltale signs of a traditional phishing attack: An e-mail\nthat asks you to click on a link and enter your e-mail or banking credentials at the resulting Web\nsite. But a new phishing concept that exploits user inattention and trust in browser tabs is likely\nto fool even the most security-conscious Web surfers.\n\nAs Mozilla Firefox creative lead Aza Raskin describes it, the attack is as elegant as it is simple:\nA user has multiple tabs open, and surfs to a site that uses special javacript code to silently\nalter the contents of a tabbed page along with the information displayed on the tab itself, so that\nwhen the user switches back to that tab it appears to be the login page for a site the user normally\nvisits.\n\nConsider the following scenario: Bob has six or seven tabs open, and one of the sites he has open\n(but not the tab currently being viewed) contains a script that waits for a few minutes or hours,\nand then quietly changes both the content of the page and the icon and descriptor in the tab itself\nso that it appears to be the login page for Gmail.\n\nIn this attack, the phisher need not even change the Web address displayed in the browser\u2019s\nnavigation toolbar. Rather, this particular phishing attack takes advantage of user trust and\ninattention to detail, or what Raskin calls \u201cthe perceived immutability of tabs.\u201d  Then, as the user\nscans their many open tabs, the favicon and title act as a strong visual cue, and the user will most\nlikely simply think they left a Gmail tab open.\n\n\u201cWhen they click back to the fake Gmail tab, they\u2019ll see the standard Gmail login page, assume\nthey\u2019ve been logged out, and provide their credentials to log in,\u201d Raskin explained. \u201cAfter the user\nhas enter they have entered their login information and sent it back your server, you redirect them\nto Gmail. Because they were never logged out in the first place, it will appear as if the login was\nsuccessful.\u201d\n\nRaskin includes a proof-of-concept at his site, which is sort of creepy when you let it run. In\nfact, at least once while composing this blog post in Firefox I went to click on the tab that had my\nGmail inbox open, only to discover I\u2019d accidentally clicked on Raskin\u2019s page, which had morphed into\nthe fake Gmail site in the interim.\n\nIt\u2019s important to keep in mind that this attack could be used against any site, not just Gmail.\nAlso, Raskin includes a few suggestions about how this attack could be made far sneakier \u2014 such as\ntaking advantage of CSS history attacks.\n\nOf course, if you are browsing with the excellent \u201cNoscript\u201d add-on and this is a site you have not\nallowed to run javascript, the proof-of-concept won\u2019t work until you allow javascript on the page.\nIt did not work completely against the Safari browser on my Mac (no favicon), and the test page\nfailed completely against Google Chrome. [Update: As several readers have correctly pointed out,\nthis attack does in fact work against Chrome, although it doesn\u2019t seem to change the favicon in\nChrome tabs].\n\nI\u2019m left wondering what this new form of phishing will be called if it is ever adopted by the bad\nguys. Tabnabbing? Tabgrabbing? See if you can coin a better phrase in the comments below.\n\nUpdate, May 25, 7:55 p.m. ET: Researcher Aviv Raff has posted an interesting proof-of-concept of his\nown that shows how this attack can work against Firefox even when users have the Noscript add-on\ninstalled and in full paranoid mode. Raff crafted his page, which is a mock up of this blog post, to\nmorph into an image of the Gmail login page, and it will reload every 20 seconds but will only\nchange to the sample phish page if  you move to another tab with your mouse, or after 10 reloads (in\ncase you  moved with the keyboard). So it will change only after 3 minutes or so,  unless you move\nto another tab with your mouse.\n\n\u201cI was trying to find a way to  work around the javascript need for the [proof-of-concept],\u201d Raff\nsaid in an instant message. \u201cFirst I was able to do this without  knowing if the user moved to a new\ntab. Now I can almost be sure of  that.\u201d\n\nUpdate, May 27, 11:41 p.m. ET: For Firefox users with the Noscript plugin, there is an update to the\nprogram that can block these types of tabnabbing attacks.\n\n", "polarity": 0.10962865259740259, "subjectivity": 0.5197381177849927, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/05/revisiting-the-eleonore-exploit-kit/", "date": "2010-05-24T00:00:00.000Z", "author": "Brian Krebs", "title": "Revisiting the Eleonore Exploit Kit", "body": "Not long after I launched this blog, I wrote about the damage wrought by the Eleonore Exploit Kit,\nan increasingly prevalent commercial hacking tool that makes it easy for criminals to booby-trap Web\nsites with malicious software. That post generated tremendous public interest because it offered a\npeek at the statistics page that normally only the criminals operating these kits get to see. I\u2019m\nrevisiting this topic again because I managed to have a look at another live Eleonore exploit pack\npanel, and the data seem to reinforce a previous observation: Today\u2019s attackers care less about the\nbrowser you use and more about whether your third-party browser add-ons and plugins are out-of-date\nand exploitable.\n\nHacked and malicious sites retrofitted with kits like Eleonore have become more common of late: In a\nreport issued this week, Web security firm Zscaler found that  roughly 5 percent of the browser\nexploits they identified during the first  quarter of this year were tied to hacked or malicious\nsites that  criminals had outfitted with some version of Eleonore.\n\nLike most exploit kits, Eleonore is designed to invisibly probe the visitor\u2019s browser for  known\nsecurity vulnerabilities, and then use the first one found as a  vehicle to silently install\nmalicious software. The hacker\u2019s end of the kit is a Web-based interface that features detailed\nstats on the percentage of visitors to the booby-trapped site(s) that are successfully attacked, and\nwhich software vulnerabilities were most successful in leading to the installation of the hacker\u2019s\nmalware.\n\nThis particular Eleonore kit \u2014 which is currently stitched into several live adult Web sites \u2014 comes\nwith at least a half-dozen browser exploits, including three that target Internet Explorer flaws,\ntwo that attack Java bugs, and one that targets a range of Adobe PDF Reader vulnerabilities.\nAccording to this kit\u2019s stats page, the malicious adult sites manage to infect roughly every one in\nten visitors.\n\nAs we can see from the landing page pictured above, Windows XP users represent by far the largest\ngroup of users hitting these poisoned porn sites.\n\nOnce again, Eleonore shows just how heavily Java flaws are now being  used to infect computers (the\nabove graphic shows the number of successful malware installations or \u201cloads\u201d per exploit). The last\ntime I reviewed a working Eleonore  admin panel, we saw that Java flaws were the second most\nreliable  exploits. This time around, Java was the biggest source infections. In  the Eleonore kit I\nwrote about earlier this year, some 34 percent of the  systems that were successfully exploited were\nattacked via a Java flaw.  In this installation, four out of every ten victims who were hacked were\ncompromised because of they were running an outdated version of Java.\n\nNearly one-third of all successful attacks from this Eleonore kit  leveraged flaws in older versions\nof Adobe\u2019s PDF Reader. People often  scoff when I recommend an alternative to Adobe for displaying\nPDFs,  saying that criminals can just as easily target security vulnerabilities  in those\napplications, which ship far fewer security updates  than Adobe. That may be true, but I haven\u2019t\nseen much evidence that  hackers are going after flaws in non-Adobe PDF readers at any  appreciable\nor comparable level. Incidentally, if you use the free PDF reader from Foxit, an Adobe alternative\nI\u2019ve often recommended, you should know that Foxit recently shipped a new version \u2014 v. 3.31 \u2014 that\nincludes security improvements.\n\nI also found this time around similar percentages of exploit victims among those surfing with\ndifferent versions of Internet Explorer. With this Eleonore kit, more than one-third of those who\nvisited the exploit site with IE6 were loaded with malicious software. The Eleonore admin panel\nreported that more than 12 percent of IE7 users and 20 percent of IE8 surfers visited and\nsubsequently were infected with malware. The prevalence of IE users among the victims may be due in\npart to the fact that half of the exploits used by this particular kit target IE security holes.\n\nAnnoyingly, this Eleonore admin page doesn\u2019t resolve one of the open questions I  heard most\nfrequently after my last story on Eleonore: Where are all the Firefox victims? I still don\u2019t  have a\ndecent answer to that puzzle, but I do have a couple of guesses.  For one thing, unlike the last\nEleonore kit I examined, this one does  not include an exploit specifically for Firefox. It\u2019s also\npossible that  these kits are detecting Firefox visitors as users of some other browser (the report\nindicates, for example, that 15 percent of Google Chrome users browsing with version 4.1 were\nsuccessfully attacked). Whatever the reason, it seems highly unlikely that all of the nearly 5,600\nFirefox users who visited the exploit sites detailed here escaped unscathed.\n\nAnyway, below are the stats, which start with those of Chrome and Firefox visitors:\n\n\u2026more Firefox stats and then IE, Opera and Safari\u2026\n\n", "polarity": 0.12895733652312596, "subjectivity": 0.4665071770334927, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/05/reclaimprivacy-org-facebook-privacy-101/", "date": "2010-05-20T00:00:00.000Z", "author": "Brian Krebs", "title": "ReclaimPrivacy.org: Facebook Privacy 101", "body": "If you\u2019ve been watching the slow motion train wreck that is Facebook.com\u2018s recent effort to revamp\nits privacy promises, you may be wondering where to start making sense of the dizzying array of\nprivacy options offered by the world\u2019s largest online social network. Fortunately, developers are\nstarting to release free new tools so that you don\u2019t need to read a statement longer than the U.S.\nConstitution  or earn a masters degree in Facebook privacy in order to get started.\n\nReclaimprivacy.org hosts an easy-to-use, open source tool that can help Facebook users very quickly\ndetermine what types of information they are sharing with the rest of the world. To use it, visit\nreclaimprivacy.org and drag the \u201cbookmarklet\u201d over into your  bookmarks area. Then log in to\nfacebook.com, and browse to your privacy settings page. Then, click the bookmark and it will run a\nseries of Javascript commands that produce a report showing your various privacy settings, and\nsuggest ways to strengthen weaker settings.\n\nSoftware engineer Matt Pizzimenti  said he got the idea for the tool while on a flight back from\nMichigan a few weeks ago.\n\n\u201cI realized as I was going through all my privacy settings that some stuff seemed to be missing, and\nthat some had been defaulted back to \u2018open\u2019,\u201d Pizzimenti said. \u201cI\u2019m pretty vigilant about my\nsettings, but my family and friends aren\u2019t as aware, and the navigation needed to fix all this stuff\nis kind of complicated.\u201d\n\nWhen I ran the bookmarklet on my Facebook account, it told me all but two of my settings were\nsecure. It reported that \u201cinstant personalization is currently sharing personal information with\nnon-Facebook websites,\u201d and offered a one-click button designed to let you opt-out of instant\npersonalization. The tool also told me that my Facebook friends can accidentally share my personal\ninformation, and included another clickable tab to sew up that privacy setting as well.\u00a0 If you feel\nlike alerting your friends to the Reclaim Privacy tool, there\u2019s a button that allows you to do that,\ntoo.\n\nThis tool is handy in that it makes it easier for the average Facebook user to tighten up on his or\nher privacy settings. But it seems like it needs a bit more development to iron out the kinks. On my\nMac OS X 10.6 system, for example, the tool scanned just fine but refused to fix any of the insecure\nsettings. At first I thought maybe my installation of the Noscript add-on was blocking the changes,\nbut the tool failed to make the changes even when I\u2019d disabled Noscript entirely. Fortunately,\nclicking the links included in each privacy scanner listing brings up the relevant Facebook privacy\nsettings page, and from there the options aren\u2019t hard to set or undo.\n\nOn my Windows 7 system, the bookmarklet crashed the latest version of Firefox three times in row\nwhen I ran it. I\u2019m still working out if one of my many Firefox extensions simply wasn\u2019t playing nice\nwith it, but I take some solace in the fact that Facebook applications are the most common causes of\nFirefox crashes: According to Mozilla\u2018s latest crash stats, Facebook and Facebook apps are the #1,\n#2, #4, #5, #6, #8 and #10 biggest causes of crashes in Firefox. In any case, it may not be a bad\nidea to save your work (and bookmark any important sites you have open) before you continue with a\nscan.\n\nHave you run this scanner against your Facebook page? Sound off with your results and experience\nwith the tool in the comments below.\n\n", "polarity": 0.102667297979798, "subjectivity": 0.5145664231601732, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/04/mozilla-disables-insecure-java-plugin-in-firefox/", "date": "2010-04-20T00:00:00.000Z", "author": "Brian Krebs", "title": "Mozilla Disables Insecure Java Plugin in Firefox", "body": "Mozilla is disabling older versions of the Java Deployment Toolkit plugin for Firefox users, in a\nbid to block attacks against a newly-discovered Java security hole that attackers have been\nexploiting of late to install malicious code.\n\nOn April 15, Oracle Corp. pushed out an update to its Java software to fix a dangerous security flaw\nin the program. The patch came just a day after it became clear that criminals were using the flaw\nto break into vulnerable systems.\n\nJava installs a Java Deployment Toolkit plugin into Internet Explorer and Mozilla browsers.\nAccording to comments in the Firefox bug database entry for this issue, Mozilla developers began\ndiscussing the forced removal of the plugin days before Oracle pushed the Java update. Even after\nthe Java patch shipped, the developers apparently were concerned that the Oracle update didn\u2019t fix\nthe exploit for all Firefox users. An advisory from the U.S. Computer Emergency Readiness Team\nsupported that finding (US-CERT says the fixed version of the plugin is 6.0.200.2).\n\nThere was another problem: Oracle\u2019s patch, which brings the software to Java 6 Update 20, in some\ncases leaves behind older, vulnerable versions of the Firefox plugin (the Java update application\nseems to have updated the associated plugin for Internet Explorer just fine).\n\nIndeed, even if you took my advice and uninstalled Java from your computer, this stubborn add-on may\nstill be hanging around in Firefox. And you\u2019ll probably at some point see a prompt like the one\nabove, if you haven\u2019t already. If you want to disable it manually, go to Tools, Add-ons, click the\nPlugins icon, select the Toolkit and hit the \u201cDisable\u201d button.\n\nNot everyone is happy with Mozilla\u2019s decision to kill this add-on, at least judging from comments\n#31 and 33 in the Mozilla bug database.\n\n", "polarity": -0.07333333333333332, "subjectivity": 0.4666666666666667, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/04/trendmicro-toolbar-long-url-fail/", "date": "2010-04-12T00:00:00.000Z", "author": "Brian Krebs", "title": "TrendMicro Toolbar + Long URL = Fail", "body": "Many anti-virus products \u2014 particularly the \u201cInternet security suite\u201d variety \u2014 now ship with\nvarious Web browser toolbars, plug-ins and add-ons designed to help protect the customer\u2019s personal\ninformation and to detect malicious Web sites. Unfortunately, if designed poorly, these browser\nextras can actually lower the security posture of the user\u2019s system by introducing safety and\nstability issues.\n\nThe last time I caught up with security researcher Alex Holden, he was showing me a nifty way to\ncrash IE6 and prevent the user from easily reopening the badly outdated and insecure browser version\never again. Just the other day, Holden asked me to verify a crash he\u2019d found that affects users who\nhave Trend Micro Internet Security installed, which installs a security toolbar in both Internet\nExplorer and Mozilla-based browsers on Microsoft Windows.\n\nThe video here was made on a virgin install of Windows XP SP3, with the latest Firefox build and a\nbrand new copy of Trend Micro Internet Security. Paste a really long URL into the address bar with\nthe Trend toolbar enabled, and Firefox crashes every time. Do the same with the toolbar disabled,\nand the browser lets the Web site at whatever domain name you put in front of the garbage characters\nhandle the bogus request as it should. This isn\u2019t limited to Firefox: The same long URL crashes IE8\nwith the Trend toolbar enabled, although for some strange reason it fails to crash IE6. I didn\u2019t\nattempt to test it against IE7.\n\nThis crash could be benign, or it may be possible to use it to attack the browser. But, as Holden\nsaid, this is a very basic \u2014 Programming Security 101-type bug \u2014 that should not be found in such a\nwidely used security software product.\n\n\u201cThe resulting crash of the browser may have buffer overflow conditions which would potentially open\nup a computer to full user-level privilege from a malicious attacker,\u201d said Holden, director of\nenterprise security at Cyopsis LLC., a Denver-based security firm.  \u201cThe scope and simplicity of\nthis exploit opens up the possibilities for redirects, site links or even the shortened URLs used on\npopular social media sites such as Twitter and Facebook to be exploited.\u201d\n\nI notified Trend about this bug roughly two weeks ago. The company said it expects to ship a\ndownloadable hotfix on Tuesday, April 13 to correct this flaw.\n\nUpdate, 6:27 p.m. ET: Corrected the date to read Tuesday, April 13.\n\n", "polarity": -0.015961563688836427, "subjectivity": 0.4482798766889677, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/03/removing-viruses-from-a-pc-that-wont-boot/", "date": "2010-03-29T00:00:00.000Z", "author": "Brian Krebs", "title": "Removing Viruses from a PC That Won\u2019t Boot", "body": "One of the more common questions I hear from readers with computer virus infections is, \u201cHow do I\nget rid of a virus if I can\u2019t even boot up into Windows to run an anti-virus scan?\u201d Fortunately,\nthere are a number of free, relatively easy-to-use tools that can help on this front.\n\nThe tools in this review are known as a \u201crescue CDs.\u201d These are all free, Linux-based operating\nsystems that one can download and burn to a  CD-Rom. Once you\u2019ve configured your PC to boot from the\nCD you\u2019ve just burned, you can use the CD to scan your hard drive, and \u2014 depending on the type of\nrescue CD you choose \u2014 even copy files to a removable drive.\n\nI have recommended more full-fledged versions of these rescue CDs (also known as \u201cLive CDs) as a way\nfor small businesses to  protect their online banking sessions from malicious software, the  lion\u2019s\nshare of which simply fail to run on non-Windows-based operating  systems. But several anti-virus\ncompanies also offer slimmed-down Linux-based rescue  CDs that can be extremely handy in getting rid\nof a persistent malware  infection, or just for getting a second opinion (or third or fourth) about\nthe state of your  system.\n\nBefore I go any further, let me just state for the record that I don\u2019t believe there is any\nsubstitute for having known good, solid backups of your data and your entire hard drive to restore\nto in case things go south. I also urge users to segment their systems so that important data files\nare on a separate chunk of hard drive space than the Windows operating system, which tends to make\nrestoring backups a far simpler affair. I\u2019ll post a separate tutorial on setting up a good backup\nplan soon. For now, though, I want to introduce readers to these simple tools.\n\nJust one housekeeping note before I get started: If you want to run a rescue CD on a laptop, you\u2019ll\nneed to plug the  notebook into a router or other Internet connection via a networking cable. The\nreason is that the first thing you\u2019ll need to do when you boot into the rescue CD is update the\nprogram\u2019s anti-virus definitions, and that requires a working Internet connection. I don\u2019t believe\nany of these tools support wireless networking, but in any case setting that up is far beyond the\nscope and ambition of this brief how-to.\n\nGrab the CD image\n\nSeveral anti-virus vendors offer burnable rescue CDs that are based on Linux, including:\n\nAVG Rescue\n\nAvira Rescue\n\nBitDefender Rescue\n\nDr. Web Rescue\n\nF-Secure Rescue\n\nKaspersky Rescue\n\nPanda Rescue\n\nBurn the image to a CD or DVD\n\nAfter you\u2019ve download the file, burn the image to CD-Rom or DVD. If  you don\u2019t know how to burn an\nimage file to CD or don\u2019t know whether you  have a program to do so, download something like\nAshampoo  Burning Studio Free. Once you\u2019ve installed it, start the program  and select \u201ccreate/burn\ndisc images,\u201d and then \u201cburn ISO.\u201d Locate the .iso file you just  downloaded, and follow the prompts\nto burn the image to the disc.\n\nIncidentally, if your computer is a netbook and doesn\u2019t have a CD-Rom drive \u2014 or if you\u2019d just\nprefer to boot the rescue disc from a USB drive \u2014 you can create a bootable USB/flash drive using\nthe same .iso image by downloading and running this free tool here.\n\nSet your PC to boot from the CD\n\nWhen the burn is complete, just keep the disc in the  drive. We next need to make sure that the\ncomputer knows to look to the  CD drive first for a bootable operating system before it checks the\nhard  drive, otherwise this rescue will never be recognized by the computer.  When you start up your\nPC, take note of the text that flashes on the  screen, and look for something that says \u201cPress [some\nkey] to enter  setup\u201d or \u201cPress [some key] to enter startup.\u201d Usually, the key you want  will be F2,\nor the Delete or Escape (Esc) key.\n\nWhen you figure out what key you need to press, press it repeatedly  until the system BIOS screen is\ndisplayed. Your mouse will not work  here, so you\u2019ll need to rely on your keyboard. Look at the menu\noptions  at the top of the screen, and you should notice a menu named \u201cBoot\u201d. Hit  the \u201cright arrow\u201d\nkey until you\u2019ve reached that screen listing your  bootable devices. What you want to do here is\nmove the CD-Rom/DVD Drive  to the top of the list. Do this by selecting the down-arrow key until\nthe CD-Rom option is highlighted, and the press the \u201c+\u201d key on your  keyboard until the CD-Rom\noption is at the top. Then hit the F10 key,  and confirm \u201cyes\u201d when asked if you want to save\nchanges and exit, and  the computer should reboot. If you\u2019d done this step correctly, the  computer\nshould detect the CD image you just burned as a bootable  operating system.  [Unless you know what\nyou\u2019re doing here, it\u2019s  important not to make any other changes in the BIOS settings. If you\naccidentally do make a change that you want to undo, hit F10, and select  the option \u201cExit without\nsaving changes.\u201d The computer will reboot, and  you can try this step again.]\n\nNote that if you chose above to create a bootable USB drive instead of a rescue CD, you will need to\ntell your BIOS to select the USB drive as the primary startup target.\n\nScan and remove any found malware\n\nSome of the free rescue CDs above are more intuitive and user-friendly than others. Of them all, I\nthought Kaspersky and BitDefender offered the easiest to use and probably the most newbie-friendly\ninterfaces. Both boot into a desktop-like environment that may be more familiar to Windows users. In\naddition, they each offer an Explorer-like window that allows users to examine files on the Windows\nhard disk. BitDefender\u2019s rescue CD was the only one I tried that had a copy of the Firefox Web\nbrowser built into it. It also includes a point-and-click program that checks for common rootkits,\ntools often planted on hacked machines to hide the presence of malicious software.\n\nIf you have a secondary USB drive connected to the machine, you may even be able to use either the\nKaspersky or BitDefender rescue CDs to copy files over to the external drive, although moving files\nfrom a damaged hard drive to a backup drive is probably best accomplished with an all-purpose type\nof Live CD, such as Ubuntu or Knoppix, which generally have better support for removable drives.\n\nIt is safe to power off the PC when you\u2019re done with these rescue CDs. Just make sure to remove the\nCD before you try to boot up again into Windows, otherwise the computer will boot back into the\nrescue CD.\n\n", "polarity": 0.14729301948051948, "subjectivity": 0.5386954365079364, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/04/spyeye-vs-zeus-rivalry/", "date": "2010-04-01T00:00:00.000Z", "author": "Brian Krebs", "title": "SpyEye vs. ZeuS Rivalry", "body": "It\u2019s common for malware writers to taunt one another with petty insults nested within their\nrespective creations. Competing crime groups also often seek to wrest infected machines from one\nanother. A very public turf war between those responsible for maintaining the Netsky and Bagle worms\nback in 2005, for example, caused a substantial increase in the volume of threats generated by both\ngangs.\n\nThe latest rivalry appears to be budding between the authors of the Zeus Trojan \u2014 a crime kit used\nby a large number of cyber thieves \u2014 and \u201cSpyEye,\u201d a relatively new kit on the block that is taking\nevery opportunity to jeer at, undercut and otherwise siphon market share from the mighty Zeus.\n\nSymantec alluded to this in a February blog post that highlighted a key selling point of the SpyEye\ncrimeware kit:\u00a0 If the malware created with SpyEye lands on a computer that is already infected with\nZeus, it will hijack and/or remove the Zeus infection.\n\nNow, just a few months later, the SpyEye author is releasing a new update (v. 1.1) that he claims\nincludes the ability to inject content into Firefox and Internet Explorer browsers, just as Zeus\ndoes (this screen shot shows the result of a demo configuration file on the left, which instructs\nthe malware to inject SpyEye and \u201cZeuskiller\u201d\u00a0 banner ads into a live Bank of America Web site). It\nis precisely this injection ability that allows thieves using Zeus to defeat the security tokens\nthat many banks require commercial customers to use for online banking.\n\nThe new version comes as the Zeus author is pushing out his own updates (v. 1.4), along with a hefty\nprice tag hike. The old Zeus kit started at around $4,000, while the base price of the newer version\nis double that. According to research from Atlanta-based security firm SecureWorks, Zeus plug-ins\nthat offer additional functionality raise the price even more. For example:\n\n-Windows7/Vista compatibility module \u2013 $2,000 -Backconnect module (lets criminals connect back to\nvictim and make bank transactions through that PC) \u2013 $1,500 -Firefox form grabbing (copies out any\ndata entered into a form field, such as a user name and password) \u2013 $2,000 -Jabber notification (a\nform of instant message) \u2013 $500 -FTP clients saved credentials grabbing module \u2013 $2,000 -VNC module\n\u2014 $10,000 (like GoToMyPC for the bad guys, reportedly no longer being sold/supported)\n\nThe SpyEye author declined to be interviewed for this story. But it\u2019s clear from his Flash banner\nads reproduced here that he plans to keep up the public relations campaign against Zeus, with a\nfocus on the relatively low price: SpyEye costs just $500 (although the new Firefox injection tool\nruns an extra $1,000).\n\nSecureWorks has noted that the latest versions of Zeus include anti-piracy technology that uses a\nhardware-based licensing system that can only be run on one computer. \u201cOnce you run it, you get a\ncode  from the  specific computer, and then the author gives you a key just for that   computer,\u201d\nSecureWorks wrote. \u201cThis is the first time we have  seen this level of control  for malware.\u201d\n\nNot to be outdone, the SpyEye author now claims his malware builder also includes a hardware lock,\nusing VMProtect, a Russian commercial software protection package.\n\n", "polarity": 0.06444427665357896, "subjectivity": 0.40872294372294365, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/02/security-updates-for-adobe-reader-acrobat/", "date": "2010-02-17T00:00:00.000Z", "author": "Brian Krebs", "title": "Security Updates for Adobe Reader, Acrobat", "body": "Adobe is urging users of its PDF Reader and Acrobat software to install an update that fixes a\ncouple of critical security holes in the products. The patches come amid news that booby-trapped PDF\nfiles were responsible for roughly 80 percent of the exploits detected in the 4th quarter of 2009.\n\nThe latest update brings Adobe Reader to version 9.3.1, and fixes a pair of vulnerabilities that\nAdobe has labeled \u201ccritical,\u201d which means the flaws could be used to install malicious software on\nvulnerable systems. Updates are available for Windows, Mac and Linux versions.\n\nIf you use Adobe Reader, please apply this update. Then, take a moment to turn off Javascript, the\nfeature in Reader that is most exploited by attackers. To do this, follow these instructions:\n\n1. Launch Acrobat or Adobe Reader. 2. Select Edit>Preferences 3. Select the JavaScript Category 4.\nUncheck the \u2018Enable Acrobat JavaScript\u2019 option 5. Click OK\n\nBetter yet, consider using an alternative PDF reader, such as the free Foxit Reader. I also disable\nJavascript in Foxit, mainly because I find I don\u2019t need it.\n\nEarlier this week, Web security firm ScanSafe released a report (.pdf !) showing that roughly 80\npercent of the Web-based exploits it detected in the last three months of 2009 attacked Adobe Reader\nvulnerabilities. Add Adobe Flash vulnerabilities into the mix, and the two programs made up the\nlion\u2019s share of the Web exploits ScanSafe detected in Q409.\n\nFor its part, Firefox maker Mozilla at the end of last year began tracking a huge uptick in the\nnumber of Firefox crashes due to Adobe Reader. As some posters to this Mozilla Bug Database entry\nposit, the crashes were almost certainly due to increased exploitation of the Adobe Reader zero-day\nvulnerability that Adobe finally patched on Jan. 12, weeks after evidence surfaced that criminal\nhackers were exploiting the flaw in targeted attacks.\n\nUpdate, 4:06 p.m. ET: If you decide to do without Adobe Reader and uninstall it, you might want to\nnix the Adobe Download Manager as well. Researcher Aviv Raff points to some nifty work he\u2019s done\nwhich shows that Adobe\u2019s Download Manager \u2014 which ships with all new versions of Flash and Reader \u2014\ncan be forced to reinstall an application that\u2019s been removed, such as Reader. According to Raff, a\nWeb site could hijack the Adobe Download manager to download and install any of the following:\n\nAdobe Flash 10\n\nRaff writes: \u201cSo, even if you use an alternative PDF reader, an attacker can force you to download\nand install Adobe Reader, and then exploit the (yet to be patched, but now known) vulnerability. The\nattacker can also\u00a0exploit 0-day vulnerabilities in any of the other products mentioned above.\u201d Read\nmore on his findings at this link here.\n\n", "polarity": 0.0726010101010101, "subjectivity": 0.4782070707070707, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/02/critical-security-update-for-adobe-flash-player/", "date": "2010-02-11T00:00:00.000Z", "author": "Brian Krebs", "title": "Critical Security Update for Adobe Flash Player", "body": "Adobe Systems Inc. today released an updated version of its Flash Player software to fix two\ncritical security holes in\u00a0 the ubiquitous Web browser plugin. Adobe also issued a security update\nfor its Air software, a central component of several widely-used Web applications, such as\nTweetdeck.\n\nThe Flash update brings the newest, patched version of Flash to v. 10.0.45.2, and applies to all\nsupported platforms, including Windows, Mac and Linux installations. Visit this link to find out\nwhat version of Flash you have. The latest update is available from this link.\n\nWindows users will need to apply this update twice if they use another browser in addition to\nInternet Explorer. Those users will need to visit the Flash Player Download Page and install the\nupdate once with IE, and a second time while visiting that link with Firefox or Opera (the non-IE\ninstaller is designed to update Mozilla-based browsers).\n\nNote also that Adobe\u2019s installer typically pre-checks some third party software \u2014 such as Google\nToolbar or a trial of some anti-virus product \u2014 so if you don\u2019t want these \u201cextras,\u201d make sure to\nuncheck that option before agreeing to install the update.\n\nThe security update for Air brings that software to version 1.5.3.1930, available here. More detail\nabout the vulnerabilities fixed in this update is available from the Adobe advisory, which is here.\n\nAdobe today also issued an advisory saying that we can also expect another update bundle for its PDF\nReader and Acrobat applications. The company said it plans to issue security updates for those\nprograms next Tuesday, Feb. 16.\n\nI was a little confused why Adobe was issuing these updates today, as Adobe said not long ago that\nit was moving to a quarterly update cycle, in which patches would be released in sync with\nMicrosoft\u2019s Patch Tuesday, the second Tuesday of the month. Figuring maybe Adobe was rushing out a\nfix to staunch the bleeding from a flaw that hackers were actively exploiting, I put the following\nquestions to Adobe spokeswoman Wiebke Lips. Here was the gist of that e-mail Q&A:\n\nBK: Can you tell me why these weren\u2019t released on Tuesday? It would seem that this is out of sync\nwith the quarterly schedule Adobe set up to coincide with MSFT\u2019s Patch Tuesday.\n\nWL: The quarterly update cycle is specific to Adobe Reader and Acrobat. (The last quarterly update\nfor Adobe Reader and Acrobat was on January 12, 2010.) Other Adobe product teams work with Adobe\u2019s\nSecure Software Engineering Team (ASSET) to deliver updates as appropriate\u2014cycles may be different\nfrom the patch cycle for Adobe Reader and Acrobat. Today\u2019s updates for Adobe Flash Player and\nBlazeDS were specifically scheduled to address vulnerabilities in Adobe Flash Player and Blaze DS.\n\nThe Flash Player vulnerability also affects Adobe Reader and Acrobat. Rather than waiting for the\nnext quarterly update for Adobe Reader and Acrobat, which is scheduled for April, Adobe decided to\nmake this fix available as an out-of-cycle update.\n\nBK: Is Adobe aware of attackers exploiting any of the vulnerabilities patched in this Flash/Air\nupdate, or attacking the vulnerabilities that Adobe plans to patch with the Reader/Acrobat patch\nnext Tuesday?\n\nWL: No on both updates.\n\n", "polarity": 0.09233870967741935, "subjectivity": 0.353405017921147, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/02/another-way-to-ditch-ie6/", "date": "2010-02-03T00:00:00.000Z", "author": "Brian Krebs", "title": "Another Way to Ditch IE6", "body": "This past week, I was reminded of a conversation I had with an ethical hacker I met at the annual\nDefcon security conference in Las Vegas a couple of years back who showed me what remains the\nshortest, most elegant and reliable trick I\u2019ve seen to crash the Internet Explorer 6 Web browser.\n\nIf you\u2019re curious and have IE6 lying around, type or cut and paste the following into the address\nbar (that last character is a zero):\n\nms-its:%F0:\n\nor just click this link with IE6.\n\nHere\u2019s a short video example of the crash that results from typing that text above into an IE6\nwindow:\n\nThe \u201cms-its\u201d bit is a reference to one of the helper extensions built into IE6. Alex Holden, the\nWisconsin based researcher who showed me this crash, said the bug is the result of a pointer\noverflow in IE. The crash does not appear to work in newer versions of IE.\n\nHolden said he notified Microsoft about his finding back in 2004. An e-mail thread Holden shared\nwith krebsonsecurity.com indicates that Microsoft engineers believed there were no severe security\nconsequences of this bug, and that it would probably be fixed in a future service pack. Obviously,\nit never was.\n\nOne way XP users might encounter this would be if the short code above or something like it were\nincluded in a link sent to a targeted user via instant message or e-mail. Indeed, one could imagine\na computer worm that went around and changed the victim\u2019s default home page to this short bit of\ncode. The victim would be no longer be to get online\u2026.with IE6, anyway (although a registry hack\ncould almost certainly fix the swapped home page).\n\nThere is one interesting possible use for this tiny snippet of crash-inducing code. Maybe someone\nyou know and care about insists on using IE6 or refuses to upgrade to IE7 or IE8. Install Firefox or\nsome other browser alternative, and then change their IE home page to \u201cms-its:%F0:\u201d Chances are good\nthey will never be able to open IE6 again.\n\n", "polarity": 0.09247448979591837, "subjectivity": 0.388562925170068, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/01/a-peek-inside-the-eleonore-browser-exploit-kit/", "date": "2010-01-25T00:00:00.000Z", "author": "Brian Krebs", "title": "A Peek Inside the \u2018Eleonore\u2019 Browser Exploit Kit", "body": "If you happen to stumble upon a Web site that freaks out your anti-virus program, chances are good\nthat the page you\u2019ve visited is part of a malicious or hacked site that has been outfitted with\nwhat\u2019s known as an \u201cexploit pack.\u201d These are pre-packaged kits designed to probe the visitor\u2019s\nbrowser for known security vulnerabilities, and then use the first one found as a vehicle to\nsilently install malicious software.\n\nExploit packs have been around for years, and typically are sold on shadowy underground forums. A\nconstant feature of exploit packs is a Web administration page (pictured above), which gives the\nattacker real-time statistics about victims, such as which browser exploits are working best, and\nwhich browsers and browser versions are most successfully attacked.\n\nOne of the most popular at the moment is a kit called \u201cEleonore,\u201d and I\u2019m writing about it here\nbecause it highlights the importance of remaining vigilant about patching. It\u2019s also a reminder that\nsometimes the older exploits are more successful than the brand new variety that garner all of the\nheadlines from the tech press.\n\nThe screen captures in this blog post were taken a few weeks ago from a working Eleonore\ninstallation (version 1.3.2) that was linked to several adult Web sites. As we can see from the\nfirst image, this pack tries to exploit several vulnerabilities in Adobe Reader, including one that\nAdobe just patched this month. The kit also attacks at least two Internet Explorer vulnerabilities,\nand a Java bug. In addition, the pack also attacks two rather old Firefox vulnerabilities (from 2005\nand 2006). For a partial list of the exploits included in this pack, skip to the bottom of this\npost.\n\nIt\u2019s important to keep in mind that some of these exploits are browser-agnostic: For example, with\nthe PDF exploits, the vulnerability being exploited is the PDF Reader browser plug-in, not\nnecessarily the browser itself. That probably explains the statistics in the images below, which\nshows a fairly high success rate against Opera, Safari, and Google Chrome users. In the screen shots\nbelow, the numbers beneath the \u201ctraffic\u201d field indicate the number of visitors to the malicious site\nusing that particular version of the browser, while the \u201cloads\u201d number corresponds to the number of\nvisitors for that browser version that were found to be vulnerable to one or more of the\nvulnerabilities exploited by the Eleonore pack. The \u201cpercent\u201d fields obviously indicate the\npercentage of visitors for each specific browser type that were successfully exploited (click for a\nlarger version):\n\nJust from observing some of these stats, it\u2019s clear that some of the most successful exploits target\nvulnerabilities that were patched quite some time ago. In a few cases where I have highlighted the\nimportance of patching Java vulnerabilities, for example, I received feedback from some readers who\ndoubted whether anyone ever tried to attack Java flaws. As we can see from the second screenshot\nabove, the Java exploit was the second most successful attack (behind an exploit pack that attacks\nat least three different Adobe Reader flaws).\n\nMore Firefox stats (again, click for a larger version)\n\nHere are the Internet Explorer breakdowns:\n\n\u2026and the Opera and Safari statistics:\n\nVulnerabilities exploited by this Eleonore pack include:\n\nPDF pack\n\nPDF Brand new PDF Exploit (12/2009)\n\nPDF collab.getIcon (4/2009)\n\nPDF Util.Printf (11/2008)\n\nPDF collab.collectEmailInfo (2/2008)\n\nMS Internet Explorer Exploits\n\nMS09-002 (Internet Explorer 7 exploit 1/2009)\n\nMDAC \u2013 ActiveX (Internet Explorer exploit, 3/2007)\n\nJava\n\nJavad0 (12/2008) \u2013 Java Calendar (Java Runtime Environment (JRE) for Sun JDK and JRE 6 Update 10 and\nearlier; JDK and JRE 5.0 Update 16 and earlier; and SDK and JRE 1.4.2_18 and earlier)\n\nFirefox\n\ncompareTo \u2013 exploit for a Firefox vulnerability from 2005\n\njno \u2013 Exploit for Firefox version 1.5.x (2006)\n\n", "polarity": 0.17271625344352617, "subjectivity": 0.43771074380165287, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/01/adobe-ships-critical-shockwave-update/", "date": "2010-01-23T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe Ships Critical Shockwave Update", "body": "Last week, Adobe Systems Inc. shipped critical security updates for its PDF Reader software. Now\ncomes an update that fixes at least two critical flaws in Adobe\u2019s Shockwave Player, a commonly\ninstalled multimedia player.\n\nNot sure whether you even have Shockwave Player on your system? You\u2019re not alone. Because of a long\nhistory of rebranding between Macromedia and Adobe, the various naming conventions used for this\nsoftware are extremely confusing. Here\u2019s Adobe\u2019s effort to draw clearer distinctions between the\nFlash and Shockwave multimedia players:\n\nMozilla is one of those that refers to the regular Flash Player plugin as \u201cShockwave Flash.\u201d Firefox\nusers can find this under \u201cTools,\u201d \u201cAdd-ons,\u201d and then under the \u201cPlugins\u201d tab. By the way, the\nlatest, most secure version of Flash is v. 10.0.42.34, so if your version of Flash is lower than\nthat, it\u2019s time to update your Flash Player as well. Adobe shipped an update in December that fixed\nat least seven critical vulnerabilities in Flash. Instructions on how to update the Flash Player to\nthe latest version are available here.\n\nHere\u2019s a way to test whether you even have Shockwave Player on your system (I don\u2019t, and since I\napparently haven\u2019t missed it, I\u2019m adding it to the list of programs you can probably do without\nunless you have a specific need for it). Visit this page. If it says you need to install a missing\nplugin, then you don\u2019t have Shockwave Player installed, and you probably don\u2019t need it.\n\nIf that link above shows that you do have Shockwave Player installed, it\u2019s time to update it. The\nflaws are in Shockwave Player version 11.5.2.602 and earlier. Adobe recommends that Shockwave users\nactually uninstall the program (Windows users can do this via the Add/Remove Programs menu), and\nthen reboot before attempting to install the latest, patched version (v. 11.5.6.606), available\nhere.\n\nUpdates are available for both Windows and Mac systems. Adobe\u2019s advice about removing the old\nversion of Shockwave and restarting before installing the update would appear to apply to Mac users\nas well. Here\u2019s the full advisory from Adobe.\n\n", "polarity": 0.08620689655172414, "subjectivity": 0.4554302976716771, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/01/exploit-in-the-wild-for-new-internet-explorer-flaw/", "date": "2010-01-15T00:00:00.000Z", "author": "Brian Krebs", "title": "Exploit in the Wild for New Internet Explorer Flaw", "body": "Less than 24 hours after Microsoft acknowledged the existence of an unpatched, critical flaw in all\nversions of its Internet Explorer Web browser, computer code that can be used to exploit the flaw\nhas been posted online.\n\nThis was bound to happen, as dozens of researchers were poring over malicious code samples that\nexploited the flaw, which has generated more interest and buzz than perhaps any other vulnerability\nin recent memory. The reason? Anti-virus makers and security experts say this was the same flaw and\nexploit that was used in a series of sophisticated, targeted attacks against Google, Adobe and a\nslew of other major corporations, in what is being called a massive campaign by Chinese hacking\ngroups to hoover up source code and other proprietary information from these companies.\n\nMicrosoft said it will continue monitoring this situation and take appropriate action to protect its\ncustomers, including releasing an out-of-band patch to address the threat. Typically, Microsoft\nissues patches on the second Tuesday of the month (a.k.a. \u201cPatch Tuesday), but due to the\nseriousness of this threat and the sheer number of companies that have apparently already been\nhacked because of it, Microsoft is likely to push out an update before the end of the month. In\nfact, I would not be surprised to see a fix for this within the next 7 to 10 days.\n\n\ufeff\ufeffIn the meantime, Redmond is urging IE users to upgrade to the latest version, IE8, which the\ncompany touts as its most secure version of the browser. Still, even IE is still vulnerable, and\nthis is a browse-to-a-nasty-site-and-get-owned kind of vulnerability. As such, Internet users will\nbe far more secure surfing the Web with an alternative browser (at least until Microsoft fixes this\nproblem), such as Google Chrome, Mozilla Firefox, Opera, or Apple\u2018s Safari for Windows.\n\n", "polarity": 0.09633838383838385, "subjectivity": 0.5073232323232323, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2010/01/the-wire/", "date": "2010-01-12T00:00:00.000Z", "author": "Brian Krebs", "title": "The Wire", "body": "A periodic pointer to some of the more interesting and newsworthy security news stories. In no\nparticular order:\n\nProof-of-concept for Mac OS X systems Released Possible Malicious Apps for Google\u2019s Android Phone\nOnline Gaming Exec. Sentenced to 33 Months \u2018Massive Cybercrime Conspiracy\u2019\n\nRead after the jump for summaries and links to more information.\n\n\u2013Dan Goodin from The Register writes that researchers have disclosed a critical vulnerability in the\nlatest version of Mac OS X that they claim Apple has sat on for almost seven months without fixing.\nThe Reg says the flaw \u201ccould be exploited by attackers to remotely execute malicious code, and\nvirtually all Apple devices \u2013 including Mac computers and servers, iPhones, and even Apple TV \u2013 are\nsusceptible.\u201d Once again, full disclosure in the face of apparent vendor lethargy.\n\nI exchanged e-mails about this threat last night with Dino Dai Zovi, probably one of the foremost\nexperts on Mac security. Dai Zovi said while the flaw may be exploitable through a number of third-\nparty applications that run on top of Mac OS X (Firefox, for example), it isn\u2019t likely we\u2019ll see\nthis bug being exploited in the wild. \u201cThis vulnerability is more complex than much simpler\nvulnerabilities in Mac OS X that did not result in widespread exploitation,\u201d Dai Zovi wrote in an\nemail to KoS. \u201d There have yet to be any reports of Mac-based malware exploiting a browser\nvulnerability in order to install itself in the wild.\u00a0 For that reason, I wouldn\u2019t suggest that Mac\nusers need to take action to protect themselves against this issue at this time.\u201d\n\nMITRE\u2019s writeup on this vulnerability has a nice list of applications that may be a potential way to\nexploit this flaw.\n\n\u2013The blogs are abuzz with word of fraudulent apps being posted to the Android Market. The apps,\nreportedly created by an anonymous developer named \u201c09Droid\u201d, appear to be an attempt to snag online\nbanking credentials from Android users. The F-Secure blog has a bit more on the nasty apps.\n\n\u2013The chief executive of an overseas, online gambling operation was sentenced by a U.S. judge to 33\nmonths in prison after pleading guilty to racketeering, writes Wired.com\u2019s Threat Level. The\nsentence, against David Carruthers, 52, a former executive at BetonSports, comes as U.S. lawmakers\nconsider allowing Internet gambling, even as federal regulators step up enforcement of existing\nanti-online gaming laws.\n\n\u2013In other cyber justice news, a federal grand jury in Dallas last Friday indicted 19 people in what\nthe government is calling a \u201cmassive cybercrime conspiracy\u201d \u2013 a Web hosting scam that defrauded both\ncustomers and contractors, according to Dark Reading\u2019s Tim Wilson. The accused alleged created a\nmess of shell companies purporting to be legitimate Web hosting and services providers, and used\nsaid companies to collect customer fees, obtain loans, and purchase good services. \u201cIn the end, many\nof the customers were left without Web servers, the loans were not repaid, and many contractors \u2014\nincluding collocation service providers such as AT&T and Verizon \u2014 were never paid, the indictment\nsays.\u201d\n\n", "polarity": 0.12017543859649124, "subjectivity": 0.5135964912280703, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/sha-1-end-times-have-arrived/123061/", "date": "2017-01-17T00:00:00.000Z", "author": "Tom Spring", "title": "SHA-1 End Times Have Arrived", "body": "For the past couple of years, browser makers have raced to migrate from SHA-1 to SHA-2 as\nresearchers have intensified\u00a0warnings about\u00a0collision attacks moving from theoretical to practical.\nIn just weeks, a transition deadline set by Google, Mozilla and Microsoft for the deprecation of\nSHA-1 is up. \n\nStarting on Jan. 24, Mozilla\u2019s Firefox browser will be the first major browser to display a warning\nto its users who run into a site that doesn\u2019t support TLS certificates signed by the SHA-2 hashing\nalgorithm. The move protects users from collision attacks, where two or more inputs generate the\nsame hash value. \n\nIn 2012, Bruce Schneier projected a collision attack SHA-1 would cost $700,000 to perform by 2015\nand $143,000 by 2018. In 2015, researchers said tweaks to existing attacks\u00a0and new understanding of\nthe algorithm could accelerate attacks and make a full-on collision attack feasible for somewhere\nbetween $75,000 to $125,000. \n\n \n\nExperts warn the move SHA-2 comes with a wide range of side effects; from unsupported applications,\nnew hardware headaches tied to misconfigured equipment and cases of crippled credit card processing\ngear unable to communicate with backend servers. They say the entire process has been confusing and\nunwieldy to businesses dependent on a growing number of digital certificates used for not only their\nwebsites, but data centers, cloud services, and mobile apps. \n\n\u201cSHA-1 deprecation in the context of the browser has been an unmitigated success. But it\u2019s just the\ntip of the SHA-2 migration iceberg. Most people are not seeing the whole problem,\u201d said Kevin Bocek,\nVP of security strategy and threat intelligence for Venafi,\u00a0\u201cSHA-1 isn\u2019t just a problem to solve by\nFebruary, there are thousands more private certificates that will also need migrating.\u201d \n\nNevertheless, it\u2019s browsers that have been at the front lines of the SHA-1 to SHA-2 migration. And\nstarting next month, public websites not supporting SHA-2 will generate various versions of ominous\nwarnings cautioning users the site they are visiting is insecure. \n\nAccording to Venafi\u2019s research team,\u00a035 percent of the IPv4 websites it analyzed in November are\nstill using insecure SHA-1 certificates. However,\u00a0when researchers scanned Alexa\u2019s top 1 million\nmost popular websites for SHA-2 compliance it found only 536 sites were not compliant. \n\nExceptions to Every Rule \n\nBut still there are companies concerned about\u00a0disruption to their business after the deadline asking\nfor exceptions and exploring alternatives to full SHA-2 support. \n\n\u201cWhat you are seeing is various companies, for one reason or another, unable to complete the\nmigration\u201d said Patrick Donahue, security engineering product lead at Cloudflare. \u201cThe browser\nmakers have created an exception process that allows companies to make appeals for exceptions that\nallow CAs (certificate authorities) to issue them.\u201d \n\nFor example, last year Mozilla allowed a security firm to issue nine new SHA-1 certificates to\npayment processor Worldpay to use in 10,000 of its payment terminals worldwide. Worldpay argued\nbecause\u00a0it missed a Dec. 31, 2015 cutoff for obtaining SHA-1 certificates, it needed SHA-1\ncertificates to buy more time to make the transition to SHA-2, or risk having thousands of its\nterminals go dark. After considerable debate, Mozilla granted the exception and issued SHA-1\ncertificates after the cutoff date. \n\nAccording to Cloudflare, as many as 10 percent of credit card payment systems may also face problems\nas browsers reject SHA-1 certificates used in terminals similar to Worldpay\u2019s. \n\n\u201cFor credit card processing, it\u2019s not as simple as a software update. It will require sending out\nnew credit card processing machines that support SHA-2,\u201d Donahue said. \n\nFor social networking behemoth Facebook, it wasn\u2019t so much about the company looking for an\nexception, rather a solution that could allow it to keep users stuck on older computers and aging\nhandhelds connected to its service. In late 2015, Facebook estimated up to 7 percent of browsers\nused by its customers, particularly in developing countries, would not able to use the newer SHA-2\nstandard. \n\nAt the time, Facebook chief security officer\u00a0Alex Stamos\u00a0said,\u00a0\u201cWe don\u2019t think it\u2019s right to cut\ntens of millions of people off from the benefits of the encrypted Internet, particularly because of\nthe continued usage of devices that are known to be incompatible with SHA-256.\u201d \n\nThe solution for Facebook is similar to what a number of companies have sought, a stopgap fix until\nSHA-2 adoption is ubiquitous. \n\nFacebook said it has found success running a large TLS termination edge with certificate switching,\nwhere it intelligently chooses which certificates a person sees based upon Facebook\u2019s guess as to\nthe capabilities of user\u2019s browser. \u201cThis allows us to provide HTTPS to older browsers using SHA-1\nwhile giving newer browsers the security benefits of SHA-256,\u201d Stamos explained. \n\nCloudflare and Mozilla have both developed a similar techniques for customers concerned that line-\nof-business websites will stop working after the deprecation\u00a0deadline. \n\n\u201cThe biggest excuse among web server operators was the need to support Internet Explorer on Windows\nXP (pre-SP3), which does not support SHA-2.\u00a0 However, websites with this requirement (including\nwww.mozilla.org) have developed techniques that allow them to serve SHA-2 certificate to modern\nbrowsers while still providing a SHA-1 certificate to IE/XP clients,\u201d said J.C. Jones, cryptographic\nengineering manager at Mozilla. \n\nWorkarounds work for browsers, but different SHA-2 transition challenges persist within the mobile\napp space. \n\n \n\nApps Must Catch Up on SHA-2 Support \n\nWhen a browser rejects a SHA-1 certificate, the warning message is easy to spot. That\u2019s not the case\nwith apps. While Google\u2019s Android and Apple\u2019s iOS operating systems have supported SHA-2 for more\nthan\u00a0a year, most apps still do not. \n\n\u201cWith apps, you don\u2019t get to see what the actual trusted connections are. It requires blind faith,\u201d\nVenafi\u2019s Bocek said. Alternatively, it should be a matter of trust and verify, he said. He reminds\nhow bad things got in 2014 when Fandango and Credit Karma assured users that their data was secure\nand being sent over encrypted SSL connections when in fact they disabled their apps\u2019 SSL certificate\nvalidation. \n\nSHA-1 used by apps is a far cry from no protection. But still, the absence of SHA-2 introduces risk\nthat someone could mint a forged SHA-1 certificate to connect with an app using a SHA-1 certificate.\nAn attacker\u00a0spoofing the DNS of a public Wi-Fi connection could launch a man-in-the-middle attack,\nand unlike with a browser, the use of untrusted TLS certificates would go unnoticed, Bocek said. \n\nApp developers don\u2019t have to worry about pressure from browser makers. More often, it\u2019s about what\nindividual platforms and app makers decide to enforce. \n\nIn December, Apple backtracked on its plan to enforce a year-end deadline that would have required\ndevelopers to adopt App Transport Security, which included SHA-2 support. It did not set a new\ndeadline. As with Apple, it\u2019s unclear when Google might force app developers to use SHA-2 or if it\nwill reject SHA-1 certificates used to sign\u00a0apps. \n\nSalesforce warned its developer community and users if they wanted to continue to have error-free\naccess to Salesforce, they needed to ensure their operating systems, browsers, and middleware were\ncapable of accepting HTTPS certificates with the SHA-2 hashing algorithm or risk being blocked. \n\nFor Facebook, unlike its stance on SHA-1 deprecation for its website, it set a firm sunset date of\nJan. 1, 2016 for SHA-1 for developers using its SDKs. After that date, Facebook required apps that\nconnect to it\u00a0to support SHA-2 connections. \n\n\u201cIf your app relies on SHA-1 based certificate verification, then people may encounter broken\nexperiences in your app if you fail to update it,\u201d said Adam Gross, a production engineer at\nFacebook. \n\nInternal PKIs Aren\u2019t Immune \n\nEnterprises are also not under the same immediate pressure to update their internal PKI used for\ninternal hardware, software and cloud applications. But security experts warn that doesn\u2019t make them\nimmune to major certificate headaches. One of those hassles is the fact the number of certificates\nhas ballooned to an average of more than\u00a010,000 per company, which makes the switch from SHA-1 to\nSHA-2 a logistical nightmare, according to Venafi. \n\nThe growth of SSL and TLS traffic has been a mixed blessing, Bocek said. \u201cMore security is always\nbetter, but one blind spot in a sea of thousands of certificates used within the enterprise could be\ndisastrous for the security of a business.\u201d \n\nThat\u2019s prompted Microsoft to take a hardline approach to SHA-1\u00a0deprecation. It announced an ultimate\nkill date for SHA-1 for its operating system in 2014: \n\n\u201cCAs must stop issuing new SHA-1 SSL and Code Signing end-entity certificates by 1 January 2016 \u2026\nFor SSL certificates, Windows will stop accepting SHA-1 end-entity certificates by 1 January 2017.\nThis means any time valid SHA-1 SSL certificates must be replaced with a SHA-2 equivalent by 1\nJanuary 2017 \u2026 For code signing certificates, Windows will stop accepting SHA-1 code signing\ncertificates without time stamps after 1 January 2016.\u00a0 SHA-1 code signing certificates that are\ntime stamped before 1 January 2016 will be accepted until such time when Microsoft decides SHA1 is\nvulnerable to pre-image attack.\u201d \n\n\u201cThis is an operational issue. It isn\u2019t as simple as patching or upgrading systems,\u201d Bocek said. The\nmigration requires a certificate inventory assessment, a review of policies, application and system\ntesting and automation, he said. But he warns of the perils of procrastination. \n\n\u201cThis is a non-trivial migration,\u201d Bocek said. Think of 2017 not as the end of the race, rather when\nSHA-2 migrations begin to hit their stride, he said. \n\n", "polarity": 0.04989230540701128, "subjectivity": 0.4097795178677529, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/lastpass-fixes-ormandy-rce-bug-two-outstanding-vulnerabilities-remain/124471/", "date": "2017-03-22T00:00:00.000Z", "author": "Chris Brook", "title": "LastPass Fixes Three Password Theft Vulnerabilities", "body": "Engineers at LastPass fixed three different vulnerabilities in the password manager over the last 24\nhours, all discovered by Google Project Zero researcher Tavis Ormandy, which could have allowed for\nthe theft of passwords. \n\nOne of the issues,\u00a0a remote code execution vulnerability that could have enabled\u00a0the proxying of\ninternal Remote Procedure Call (RPC) commands, was fixed Tuesday morning. \n\nFixes for two other vulnerabilities, including one in LastPass\u2019 Firefox add-on and another in\nLastPass for Firefox, were pushed Wednesday morning. \n\nOrmandy disclosed bug reports for the last two vulnerabilities on Wednesday and commended the\ncompany for the fast fixes. \n\nTwo more LastPass bugs fixed today https://t.co/nP4Z2cObWg and https://t.co/LzeoJ0Q5JI. Very quick\nresponse from LastPass, < 24hr. \n\n\u2014 Tavis Ormandy (@taviso) March 22, 2017 \n\n \n\nOrmandy first disclosed the LastPass for Firefox vulnerability in a since-deleted tweet on Tuesday\nnight, warning it could allow the theft of passwords for any domain. Little was known about the\nvulnerability, other than that it existed in version 4.1.35, until early Wednesday morning when\nLastPass released 4.1.36a to address the issue. \n\nAccording to the\u00a0Project Zero bug tracker report, the LastPass for Firefox vulnerability was similar\nto the remote code execution bug, Ormandy claims, because the browser loads content scripts into\nerror pages, which could let an attacker run arbitrary script to read back a user\u2019s password. \n\nLastPass, for its part, acknowledged Ormandy\u2019s remote code execution bug early Tuesday morning and\nsaid it had put a workaround in place. The company said on Twitter it resolved the bug later that\nmorning and that it was working on a blog post to recap additional details around the vulnerability. \n\nWe are aware of the report by @taviso and our team has put a workaround in place while we work on a\nresolution. Stay tuned for updates. \n\n\u2014 LastPass (@LastPass) March 21, 2017 \n\n \n\nThe issue reported by Tavis Ormandy has been resolved. We will provide additional details on our\nblog soon. \n\n\u2014 LastPass (@LastPass) March 21, 2017 \n\n \n\nIn a blog entry on Wednesday morning the company confirmed the vulnerability existed in all LastPass\nclients, Chrome, Firefox, and Edge, and stemmed from \u201can experimental user onboarding feature\u201d that\nwas released. \n\nOrmandy sent details of an exploit he wrote for the vulnerability, just two lines of JavaScript, to\nLastPass on Monday. While the exploit was written to work without prompts, he said on Twitter, it\ncould be adapted to work on other platforms such as Linux. \n\nThe researcher said he discovered the bug, which affects version 4.1.42 of the service on Chrome and\nFirefox, after noticing an entry in the service\u2019s websiteconnector.js content script that can proxy\nunauthenticated window messages to the extension. \n\nOops, new LastPass bug that affects 4.1.42 (Chrome&FF). RCE if you use the \"Binary Component\",\notherwise can steal pwds. Full report on way. pic.twitter.com/y92vm3Ibxd \n\n\u2014 Tavis Ormandy (@taviso) March 20, 2017 \n\n \n\nThe researcher said that on its own, the bug could allow for the access of internal privileged RPCs,\nsomething that could in turn allow \u201ccomplete control of the LastPass extension, including stealing\npasswords.\u201d If a user had Binary Component installed, an attacker could use \u201copenattach\u201d to run\narbitrary code. \n\nOrmandy warned last Wednesday of a third vulnerability that affected version 3.3.2 of LastPass\u2019\nFirefox add-on, posting a redacted screenshot of the exploit code: \n\nWrote a quick exploit for another LastPass vulnerability. Only affects version on\nhttps://t.co/lGcefN9YXM (3.3.2), report on way. \u00af_(\u30c4)_/\u00af pic.twitter.com/AgjASiQMfJ \n\n\u2014 Tavis Ormandy (@taviso) March 16, 2017 \n\n \n\nLastPass incorporated a fix for that vulnerability into version 3.3.4 of the add-on, released\nWednesday morning. Firefox users should be automatically updated to the latest version, Ormandy\nsaid. \n\nIt took a few days but the company confirmed it was aware of a vulnerability that affected a Firefox\nadd-on, presumably the same issue Ormandy raised to the company, on Tuesday night. \n\nWe are aware of reports of a Firefox add-on vulnerability. Our security is investigating and working\non issuing a fix. \n\n\u2014 LastPass (@LastPass) March 22, 2017 \n\n \n\nAs Ormandy pointed out on Twitter Tuesday, Firefox add-ons customarily have to undergo a review by\nMozilla before they\u2019re pushed live, something which likely held up the fix from being pushed until\nthis morning. \n\nSince LastPass patched the issues, details around all three of the bugs, including a link to\nOrmandy\u2019s RCE exploit, were made public by Google\u2019s Project Zero on Tuesday. Under Project Zero\nguidelines, Google releases bug reports either 90 days after a private disclosure, or after a patch\nhas been made broadly available. \n\nTod Beardsley, research director at Rapid7 thought releasing details around the bugs so quickly\nafter disclosing it to the company was a head scratcher however. \n\n\u201cIt\u2019s a little puzzling why Google publicly disclosed this issue merely 37 hours after the initial\nprivate disclosure to LastPass,\u201d Beardsley said Wednesday, \u201cThe issue doesn\u2019t appear to be so grave\nas to warrant a fast track to disclosure, and even if it was, I would generally expect at least a\ncouple days\u2019 of grace period to allow for a more coordinated disclosure.\u201d \n\nRegardless, the issues appear to be the latest among several bumps in the road for the password\nmanager, especially when it comes to bugs identified by the Project Zero researcher. Ormandy made\nheadlines last summer after he said on Twitter that he had found \u201ca bunch of obvious critical\nproblems\u201d in the service. LastPass was quick to fix the most concerning issue, which like this\nweek\u2019s, could have allowed access to privileged LastPass RPCs, but also led to a complete remote\ncompromise. \n\n", "polarity": 0.08794372294372295, "subjectivity": 0.39911255411255403, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/vm-escape-earns-hackers-105k-at-pwn2own/124397/", "date": "2017-03-17T00:00:00.000Z", "author": "Chris Brook", "title": "VM Escape Earns Hackers $105K at Pwn2Own", "body": "Hackers managed to take down Microsoft Edge and\u00a0escape a virtual machine to boot on the third day of\nPwn2Own early Friday. Members from Qihoo\u2019s 360 Security Team carried out the VM exploit, earning the\ngroup $105,000, by far the highest amount awarded to a group at the hacking challenge this week. \n\nLed by team leader Zheng Wenbin, a/k/a mj0011, the group used a heap overflow in Microsoft Edge, a\ntype confusion bug in the Windows kernel, and an uninitialized buffer in VMware for a complete\nvirtual machine escape. \n\nWow. @mj0011sec did it. Used heap overflow in Edge, type confusion in kernel, & uninit buffer in\nVMware for complete virtual machine escape. \n\n\u2014 Zero Day Initiative (@thezdi) March 17, 2017 \n\n \n\nThis is the second year that entrants have been given the opportunity to exploit a VMware\nWorkstation virtual machine. After no one attempted targeting it last year, Pwn2Own upped the ante\nthis year by raising the award for an escape from $75,000 to $100,000. \n\nOn the second day of Pwn2Own, no product was immune; hackers took down Adobe Flash, Microsoft\nWindows and Edge, Apple Safari and macOS, and Mozilla Firefox. \n\nApple products were targeted early and often on Thursday as part of the annual competition held\nalongside the CanSecWest conference in Vancouver. \n\nHackers from two groups were able to elevate privileges on macOS right off the bat. 360 Security\nused an info leak and a race condition in the kernel to do so, while Chaitin Security\u2019s Research Lab\nused an info leak and an out of bounds bug in the operating system\u2019s kernel. \n\nChaitin, a newcomer to the competition this year, had chained six Safari bugs together the day prior\nto achieve root access on macOS. While the macOS exploits earned both groups $10,000 apiece, 360\nSecurity came back and exploited Safari through an integer overflow, then escalated to root through\na macOS kernel use-after-free, earning them an additional $35,000. \n\nTwo other teams were scheduled to exploit bugs in macOS; one decided to withdraw its\u00a0attempt, the\nother was disqualified because the bugs they were planning on using had previously been disclosed to\nApple. \n\nThe attacks against Flash came a day after hackers took down another Adobe product, Reader. Hackers\nwith Tencent Security and Qihoo 360 poked holes in the software early Wednesday to earn $75,000\ncollectively. \n\n360 Security team exploited a use-after-free bug, two Windows kernel info leaks, and an\nuninitialized Windows kernel buffer to elevate Flash to SYSTEM-level access to start out the day.\nTencent meanwhile used a use-after-free bug against Flash, and then escalated to SYSTEM via another\nuse-after-free in the Windows kernel. Both groups earned $40,000 apiece for their work. \n\nLike Wednesday, Microsoft\u2019s Edge browser was a popular target on Thursday. Another Tencent Security\ngroup, Team Lance, managed to exploit a use-after-free in Chakra core, then elevate their privilege\nto SYSTEM through another use-after-free in the kernel. \n\n \n\nAnother Tencent Security team, Team Sniper, comprised of Keen Lab and PC Manager researchers, also\nowned the browser through a use-after-free in Chakra. Like Team Lance, the group was able to\nescalate to SYSTEM privileges after through another use-after-free in the Windows kernel. Both\nTencent teams pulled in $55K apiece for their exploits. \n\nEdge was a popular punching bag\u2013Tencent\u2019s Team Ether earned $80K on Wednesday for escaping the\nbrowser\u2019s sandbox\u2013but Windows had its share of exploits too. 360 Security exploited the operating\nsystem with an out-of-bounds bug in the kernel while Tencent\u2019s Team Sniper elevated privileges in\nthe OS via an integer overflow in the kernel. \n\nAs far as browser hacks go, the only news outside of the Edge exploits was that one group, Chaitin,\nmanaged to take down Firefox. The group used an integer overflow and then escalated privileges\nthrough an initialized buffer in the Windows kernel, an exploit that earned them $30K. \n\n \n\nGoogle\u2019s Chrome has emerged in one piece \u2013 the one team that targeted the browser Wednesday couldn\u2019t\nget their exploit chain working in the allotted timeframe. \n\nThere are only three exploits scheduled for today, the last day of the hacking challenge. \n\n360 Security has already succeeded at the\u00a0SYSTEM-level escalation exploit it planned to pair with a\nvirtual machine escape. \n\nOne entrant, Richard Zhu a/k/a fluorescence, will target Edge with a SYSTEM-level escalation while\nanother, Tencent Security\u2019s Team Sniper also plans to target VMWare Workstation. \n\nWhile there aren\u2019t many attempts scheduled, there could still be a good amount of money on the line. \n\nIf Tencent Security\u2019s Team Sniper, the group targeting the second VMWare exploit, manages to pull\noff their exploit, the group will become the second to earn $100,000. \n\n", "polarity": 0.10137721755368814, "subjectivity": 0.4012138188608777, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-patches-pwn2own-zero-day-in-firefox/124415/", "date": "2017-03-20T00:00:00.000Z", "author": "Chris Brook", "title": "Mozilla Patches Pwn2Own Zero Day in Firefox", "body": "Mozilla was quick to patch a zero day vulnerability identified in the Firefox browser at the Pwn2Own\nhacking competition last week. The company remedied the issue just shy of 24 hours of being made\naware of the flaw, pushing out the updated version 52.0.1 of the browser late Friday. \n\nAsa Dotzler, Mozilla\u2019s participation director for Firefox OS, and Daniel Veditz, a member of\nMozilla\u2019s security team, confirmed the fix via Twitter. \n\n@OrigShyWriter @threatpost @SAP Yes. \n\n\u2014 Asa Dotzler (@asadotzler) March 19, 2017 \n\n \n\nWe shipped @Firefox 52.0.1 today which fixes the vulnerability demonstrated at #Pwn2Own 22 hours\nbefore. \n\n\u2014 Daniel Veditz (@dveditz) March 18, 2017 \n\n \n\nThe vulnerability, an integer overflow in the createImageBitmap() method, was disclosed to Mozilla\non Thursday in Vancouver\u00a0via Trend Micro\u2019s Zero Day Initiative. Hackers with China-based Chaitin\nSecurity Research Lab discovered the bug and used it to escalate privileges in an exploit at the\nhacking competition. The group escalated privileges by combining the bug with an initialized buffer\nin the Windows kernel. The exploit earned them $30,000. \n\nAccording to a Mozilla advisory from Friday, the bug \u2013 marked critical \u2013 was fixed in both Firefox\n52.0.1 and Firefox ESR 52.0.1 by disabling experimental extensions to the createImageBitmap API. \n\nMozilla claims that since the function runs in the content sandbox, it would have required a second\nvulnerability, like the initialized buffer in the Windows kernel Chaitin used, to compromise a\nuser\u2019s computer. If exploited, a remote user would be able to cause arbitrary code to be executed on\na targeted system. \n\nPwn2Own 2017 wrapped up Friday afternoon with several high figure payouts. \n\nRichard Zhu, a/k/a fluorescence, managed to exploit Microsoft\u2019s Edge browser with a SYSTEM-level\nescalation after he chained two use-after-free bugs in the browser together. He used\u00a0a buffer\noverflow, to escalate with SYSTEM, something which fetched him $55,000. \n\nTencent Security\u2019s Team Sniper managed to pull off the competition\u2019s second virtual machine escape\nas well. It required three different bugs but the group, a mix of researchers from Keen Lab and PC\nManager, took down VMWare Workstation. The hackers used a Windows kernel use-after-free\nvulnerability, a Workstation info leak, and an uninitialized buffer in Workstation, to go from\nguest-to-host. \n\nHackers with 360 Security had executed the competition\u2019s first VM escape in 90 seconds via an Edge\nvulnerability earlier Friday. Both teams earned $100,000 for their VM exploits. \n\nLast week saw hackers poke a series of holes in software like Apple\u2019s Safari and macOS, Microsoft\u2019s\nWindows and Edge, and Adobe\u2019s Flash and Reader platforms. \n\nIt\u2019s unclear if any vendors aside from Mozilla are planning to release emergency patches in wake of\nPwn2Own however. Companies like Microsoft and Apple usually wait to incorporate fixes for\nvulnerabilities found during the competition into their next scheduled round of updates. \n\nIn total, contestants were awarded $833,000 for vulnerabilities found this year, surpassing the\namount given out last year, $460,000, and the year prior, $557,000. \n\n", "polarity": 0.0209920634920635, "subjectivity": 0.3620436507936508, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/hackers-take-down-reader-safari-edge-ubuntu-linux-at-pwn2own-2017/124362/", "date": "2017-03-16T00:00:00.000Z", "author": "Chris Brook", "title": "Hackers Take Down Reader, Safari, Edge, Ubuntu Linux at Pwn2Own 2017", "body": "Hackers took down Adobe Reader, Apple Safari, Microsoft Edge, and Ubuntu Linux over the course of 11\nhours on Wednesday, the first day of Pwn2Own, the annual hacking competition held in tandem with the\nCanSecWest conference in Vancouver. \n\nContestants with the Chinese security firm Qihoo 360 were the first to strike; exploiting a heap\noverflow in the way Reader parsed JPEG200, an image compression standard and coding system used by\nsoftware. Hackers combined the heap overflow with a Windows kernel information leak and a remote\ncode execution vulnerability in the Windows kernel to earn $50,000. \n\nBoom! @mj0011sec uses 1 #Adobe and 2 #Windows bugs to take down #Reader & earn $50K. Next up is\n#Safari. https://t.co/IeNyzBUStE #P2O \n\n\u2014 Zero Day Initiative (@thezdi) March 15, 2017 \n\n \n\nThe attack would be the first of two to be carried out against Reader on the day. Later in the\nafternoon hackers working with Tencent Security used an info leak bug and a use-after-free bug to\nachieve code execution. They followed that up with\u00a0leveraging another use-after-free in the kernel\nto gain SYSTEM-level privileges, earning $25K. \n\nAnother group of hackers working with Tencent, Team Ether, broke Microsoft Edge earlier in the day.\nThe bug they found earned the group the largest payout of the day, $80,000 and was tied to an\narbitrary write in Chakra core and a logic bug that escaped the sandbox. Chakra is the JavaScript\nengine that powers Edge and other Windows apps written in HTML, CSS, and JS. \n\n \n\nHackers with another China-based group, Chaitin Security Research Lab, took down both Ubuntu Linux\nand Apple\u2019s Safari browser, in two attempts on Wednesday. \n\nWe win it! https://t.co/bRUCcRulBr \n\n\u2014 Chaitin Tech (@ChaitinTech) March 15, 2017 \n\n \n\nThe Linux bug was a heap out-of-bound access bug in the Linux kernel which earned the group $15,000. \n\nThe Safari bug was a little more involved. The group had to chain together six different bugs,\nincluding an information disclosure in Safari, four different type confusion bugs in the browser,\nand a use-after-free in WindowServer \u2013 a component that manages requests between OS X apps and the\nmachine\u2019s graphics hardware \u2013 to carry it out. The group was able to achieve root access on macOS\nthrough the exploit and earn $35,000. \n\nWednesday\u2019s other Safari hack, like Chaitin\u2019s, involved chaining together multiple Apple bugs. \n\nTwo German hackers, Samuel Gro\u00df and Niklas Baumstark, Capture the Flag players from the Karlsruhe\nInstitute of Technology, got partial credit for hacking the browser early on the first day. The two\nwere able to broadcast a special message across a MacBook Pro\u2019s Touch Bar by chaining together five\nbugs, a use-after-free in Safari, three logic bugs and a null pointer dereference, something which\nallowed them to elevate to root in macOS.\u00a0Apple has apparently already fixed the use-after-free in a\nbeta version of Safari, hence the partial credit. \n\nFirst team to pwn Safari on macOS with escalation to root at #pwn2own! Was a ton of fun to pull that\noff with @5aelo pic.twitter.com/4G8KNXuult \n\n\u2014 Niklas Baumstark (@_niklasb) March 15, 2017 \n\n \n\nTwo groups withdrew attacks planned against Windows and Edge on Wednesday, mounting speculation over\nwhether Microsoft\u2019s delayed Patch Tuesday updates\u00a0broke attack vectors the entrants were planning on\nusing. \n\nUnlike last year, when it was partially broken, it appears Google Chrome will emerge from this\nyear\u2019s Pwn2Own unscathed. There are currently no exploits scheduled against the browser for the\ncompetition\u2019s second day today. Tencent\u2019s Team Sniper attempted to break the browser with a SYSTEM-\nlevel escalation hack yesterday but couldn\u2019t complete their exploit chain in time. \n\nGiven the large\u00a0number of entrants \u2013 17 \u2013 the competition\u2019s sponsors, Trend Micro and Zero Day\nInitiative, are splitting Pwn2Own\u2019s second day into two tracks. Attacks against Mozilla\u2019s Firefox,\nboth Microsoft Windows and Edge, Apple\u2019s macOS and Safari, and Adobe Flash are on tap for Thursday. \n\n", "polarity": 0.07572590011614402, "subjectivity": 0.31097560975609756, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/firefox-52-expands-non-secure-http-warnings-enables-sha-1-deprecation/124155/", "date": "2017-03-08T00:00:00.000Z", "author": "Chris Brook", "title": "Firefox 52 Expands Non-Secure HTTP Warnings, Enables SHA-1 Deprecation", "body": "Mozilla fixed 28 vulnerabilities, including some that could result in a crash and the\u00a0bypass of ASLR\nand DEP, when it released Firefox 52 on Tuesday. \n\nSeven of the vulnerabilities are considered critical, according to an advisory posted by the Mozilla\nFoundation. \n\nOne of those vulnerabilities would stem from a JIT spray attack carried out against the asm.js\nJavaScript subset and combined with a heap spray. By chaining together the sprays,\u00a0an attacker could\nhave bypassed the browser\u2019s Address Space Layout Randomization (ASLR) and Data Execution Prevention\n(DEP) protections. ASLR and DEP are preventative features\u00a0that protect memory and helps thwart\nbuffer-overflow attacks. If exploited, the attack could have led to additional memory corruption\nattacks, Mozilla claims. \n\nSeveral of the remaining critical bugs could have resulted in a crash of the browser, either through\na logic error or a series of use-after-free vulnerabilities. \n\nIvan Fratric, a researcher on Google\u2019s Project Zero team, uncovered one of the use-after-free bugs\nafter \u201cmanipulating ranges in selections with one node inside a native anonymous tree and one node\noutside of it.\u201d \n\nA handful of memory safety bugs dug up by Mozilla developers and community members were also fixed\nin Firefox 52. According to the advisory the bugs showed evidence of memory corruption and \u201cwith\nenough effort\u201d could be exploited to run arbitrary code. \n\nAdditional, low-tier bugs fixed in the update fix a potential denial of service attack vector, the\npotential for information leakage, and spoofing attacks. \n\nThe latest iteration of the browser expands in-context user warnings for non-secure HTTP pages with\nlogins. Users will now be confronted with a \u201cThis connection is not secure. Logins entered here\ncould be compromised.\u201d message when they try to enter a username and password field on a non-HTTPS\npage. \n\nFirefox\u00a0began warning users in January, in\u00a0Firefox 51, that HTTP websites collecting passwords may\nnot be secure. Firefox, taking a tip from Google\u2019s Chrome, began displaying such pages with a grey\nlock icon with a red strike-through in the address bar. \n\nFirefox 52 also incorporates Mozilla\u2019s Strict Secure Cookies specification. The rule forbids\ninsecure HTTP sites from setting cookies with the \u201csecure\u201d attribute and from setting a cookie with\nthe same name as an existing secure cookie from the same base domain. Previously insecure origins\ncould add secure cookies, delete them or evict them. Google added support for the specification in\nChrome 52 last July. \n\nWhile Mozilla has been gradually deprecating the SHA-1 algorithm over the past few months, the\ndeprecation policy is enabled by default in Firefox 52. \n\nThe cryptographic hash function has long been viewed as insecure but researchers from Google and\nCentrum Wiskunde and Informatica (CWI) delivered what may end up being the final nail in the coffin\nfor SHA-1, the first practical collision attack, last month. \n\nGoing forward users who encounter SHA-1 certificates that chain up to a root cert in Mozilla\u2019s CA\nprogram will be displayed an \u201cUntrusted Connection\u201d error. For the time being users can override\nthose warnings. \n\nThe latest version of the browser also finally removes support for NPAPI, the Netscape Plugin API. \n\n\u201cSilverlight, Java, Acrobat and the like are no longer supported,\u201d release notes for the browser\nread. \n\nAccording to Martin Thomson, an engineer at Mozilla, the company\u00a0opted not to enable TLS 1.3 by\ndefault in Firefox 52 as originally planned.\u00a0\u00a0According to Thomson, Firefox\u2019s testing showed a\nhigher anticipated rate of failure due to middleboxes. \n\n\u201cI can\u2019t say for certain, but it looks like Firefox 53 will use TLS 1.3,\u201d Thomson told Threatpost\nThursday. \n\nThe technology, widely regarded as archaic\u00a0in today\u2019s web landscape, was initially designed to help\nextend the functionality of browsers. Mozilla announced in October 2015 that it was looking to do\naway with NPAPI plugins by the end of 2016 but pushed back the timeline last year to 2017. \n\nMozilla plans to support Flash in Firefox a bit longer, \u201cuntil early 2018, for those users who need\nmore time for their transition,\u201d Benjamin Smedberg, the manager for Firefox\u2019s quality engineering\nteam, said last July. \n\nThis story was updated on March 9 to clarify whether or not\u00a0Firefox 52 enables TLS 1.3 by default.\u00a0 \n\n", "polarity": 0.027033730158730156, "subjectivity": 0.4639880952380952, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/doj-dismisses-playpen-case-to-keep-tor-hack-private/124102/", "date": "2017-03-06T00:00:00.000Z", "author": "Chris Brook", "title": "DOJ Dismisses Playpen Case to Keep Tor Hack Private", "body": "Intent on keeping details private about how it hacked the Tor browser, prosecutors with the U.S.\nDepartment of Justice on Friday asked to dismiss a case involving a suspect who visited the Playpen\ndark web child pornography site in 2015. \n\n\u201cThe government must now choose between disclosure of classified information and dismissal of its\nindictment,\u201d Annette Hayes, a US attorney, wrote in a court filing\u00a0(.PDF) on Friday. \u201cDisclosure is\nnot currently an option.\u201d \n\nHayes asked the court to drop charges around\u00a0the case without prejudice, insisting the government\nhas \u201csimply acted to protect highly sensitive information from criminal discovery as was its\nobligation.\u201d There\u2019s a chance, if the exploit is unclassified later down the line, the government\ncould reopen its case, she claims. \n\n\u201cDismissal without prejudice leaves open the possibility that the government could bring new charges\nshould there come a time within the statute of limitations when and the government be in a position\nto provide the requested discovery,\u201d Hayes\u00a0wrote. \n\nNews the government is unwilling to disclose the exploit\u2013something the FBI refers to as a \u201cNetwork\nInvestigative Technique\u201d (NIT)\u2013has seemingly been a long time coming; the DOJ has remained resolute\nto\u00a0keeping the exploit under wraps. Last April the FBI refused to comply with the judge\u2019s request to\ndescribe how it compromised the Tor browser. \n\nThe case deals with Jay Michaud, a 62-year-old teacher from Vancouver, Wash. who was arrested in\n2015 after allegedly accessing the child pornography dark web site Playpen. The case is one of more\nthan\u00a0100 related to the site currently wending their way through the judicial system. \n\nJudge Robert J. Bryan, the U.S. District Judge who has overseen much of \u201cUnited States v. Michaud\u201d\ncase, granted Michaud\u2019s defense team\u2019s motion to exclude any evidence gathered through the exploit\nlast May. The motion was spurred after the FBI repeatedly failed to discuss how the NIT worked. \n\n\u201cFor the reasons stated orally on the record, evidence of the NIT, the search warrant issued based\non the NIT, and the fruits of that warrant should be excluded and should not be offered in evidence\nat trial,\u201d Bryan said at the time. \n\nAfter the FBI seized servers belonging to Playpen in February 2015, the agency moved the site to a\ngovernment controlled server\u00a0in Virginia and spied on its patrons for 13 days. Michaud is one of 137\npeople who had charges filed against them following the sting. \n\nWhile details around the NIT haven\u2019t been disclosed, it\u2019s believed the exploit\u2013essentially malware \u2013\nbypassed Tor\u2019s anonymity protections and siphoned up technical data on victims, including their IP\naddress, MAC address, and other system information, and forwarded it along to law enforcement. \n\nThe FBI classified portions of the tool, exploits used in connection with it, and \u201coperation\naspects\u201d of the NIT in June 2016, making it highly unlikely information about exploit will become\npublic anytime soon. \n\nMozilla\u00a0filed a motion last May with the U.S. District Court in Tacoma, Wash., in hopes of\ncompelling the government to turn over details around the exploit. Since\u00a0Tor is partially built on\nFirefox source code, Mozilla was concerned many of its users could be put at risk if the\nvulnerability was disclosed prematurely. Judge Bryan ultimately rejected Mozilla\u2019s request and\ninstructed the company\u00a0to address their concerns to the U.S. government\u00a0directly. \n\nAnother vulnerability that affected Firefox and could have been used to de-anonymize Tor users\nsurfaced at the end of November. The vulnerability, which stemmed from a bug in the way the browser\nhandled JavaScript and SVG code, worked \u201cessentially the same way\u201d as the NIT, Mozilla\u2019s Daniel\nVeditz said at the time. \n\n\u201cIf this exploit was in fact developed and deployed by a government agency, the fact that it has\nbeen published and can now be used by anyone to attack Firefox users is a clear demonstration of how\nsupposedly limited government hacking can become a threat to the broader Web,\u201d Veditz wrote. \n\nThe vulnerability, which existed on Windows, MacOS, and Linux, was\u00a0patched in both browsers through\nan emergency update. \n\nDevelopers with Tor are readying a sandboxed version of the browser, something that should help\nthwart future de-anonymization attempts, be it by attackers or the government, going forward. \n\n", "polarity": -0.00717893217893218, "subjectivity": 0.3363090363090363, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/unpatched-smb-zero-day-easily-exploitable/123963/", "date": "2017-02-28T00:00:00.000Z", "author": "Chris Brook", "title": "Unpatched SMB Zero Day Easily Exploitable", "body": "In what\u2019s turning out to be the zero day that keeps on giving, researchers are still finding ways to\nexploit an unpatched denial of service vulnerability that exists in the way Windows implements the\nServer Message Block protocol. \n\nDetails around the bug aren\u2019t a mystery. Laurent Gaffi\u00e9, the security researcher who found the\nvulnerability, made exploit code for the vulnerability public\u00a0on GitHub when he disclosed it on\nFebruary 2. Researchers are claiming that there\u2019s a handful of easier ways to exploit it however. \n\nGaffi\u00e9\u2019s proof of concept relies on tricking a victim to connect to a malicious SMB server instance,\nsomething that could prove challenging for an attacker. Experts with Dell SecureWorks said Monday\nthat it could be more effective for attackers to combine Gaffi\u00e9\u2019s attack with a redirect to SMB\nvulnerability from 2015 to crash a victim\u2019s machine. \n\nThe redirect to SMB vulnerability, first uncovered by researchers at Cylance in April 2015, affected\nall versions of Windows when it was announced. If exploited, victims could be forwarded to a file://\nprotocol on a malicious server. That would have prompted Windows to automatically attempt\nauthentication via SMB to the server and logged encrypted user credentials that could\u00a0be cracked\noffline. \n\nMicrosoft disputed the bug in 2015 and said that several factors \u2013 namely successfully luring a\nperson to enter data into a fake website \u2013 would need to come together in order for an attack to\nwork. \n\nTo combine the vulnerability with Gaffi\u00e9\u2019s proof of concept, a scenario would require two systems,\nresearchers say. An attacker would have to run the SMB zero day proof of concept code on one system\nand use the other for the redirect to SMB attack. After putting the malicious redirect-smb.php file\non that web server\u2019s public directory, the attacker would have to trick a user into clicking it on a\nWindows 10 system running Internet Explorer. From there, the link would redirect a victim\u2019s system\nto the attacker\u2019s SMB server, the denial of service attack would be initiated, and a blue screen of\ndeath would be displayed. \n\nAccording to SecureWorks researchers Mitsuyoshi Ozaki and Hironori Miwa, an attacker could also hide\nthe SMB DoS exploit in a hyperlink, or an inline image, to trick users. While the vectors wouldn\u2019t\nwork for every browser \u2013 exploits didn\u2019t work for Firefox or Chrome when they tested \u2013 they could be\nused against the latest version of Edge and Internet Explorer, Ozaki and Miwa claim. \n\nAn attacker could also exploit the zero day through unvalidated redirects, HTTP header injection or\nvia cross-site scripting, the researchers warn. Each attack functions more or less the same way and\ngives\u00a0an attacker a different way to try and get the victim to click a link or redirect. \n\nThe same advice that the United States Computer Emergency Readiness Team gave at the beginning of\nthe month around the vulnerability is still valid, SecureWorks researchers said. In an advisory\npushed after the vulnerability was disclosed, US-CERT said to mitigate the vulnerability concerned\norganizations should consider blocking outbound SMB connections, on TCP ports 139 and 445 along with\nUDP ports 137 and 138, from the local network to external networks. \n\nWhen pressed at the beginning of February\u00a0Microsoft said that it considers the vulnerability \u2013 a\nremotely triggered DoS bug in SMB for Windows 8.1, Windows 10, Windows Server 2012 R2, and Windows\nServer 2016 \u2013 low risk. \n\nDespite the vulnerability\u2019s \u201clow risk,\u201d it was still assumed Microsoft\u00a0would fix\u00a0the flaw with\nFebruary\u2019s Patch Tuesday security updates. Instead Microsoft elected to skip the release. The\ncompany never disclosed exactly why it postponed the round of patches, instead saying\nthat\u00a0it\u00a0\u201cdiscovered a last minute issue that could impact some customers.\u201d \n\nGaffi\u00e9 \u2013 who disclosed the bug to Microsoft in November \u2013 released details around the bug a week\nbefore he assumed it was going to be patched. He never thought Microsoft would sit on the patch. \n\n\u201cI decided to release this bug one week before the patch is released, because it is not the first\ntime Microsoft sits on my bugs,\u201d he said at the time. \u201cI\u2019m doing free work here with them (I\u2019m not\npaid in anyways for that) with the goal of helping their users. When they sit on a bug like this\none, they\u2019re not helping their users but doing marketing damage control, and opportunistic patch\nrelease. This attitude is wrong for their users, and for the security community at large.\u201d \n\nA second vulnerability, a flaw in Windows\u2019 GDI library discovered by Google\u2019s Project Zero\nresearchers, also remains unpatched. That vulnerability, called \u201chigh severity\u201d by Google,\u00a0affects\nMicrosoft\u2019s Internet Explorer and Edge browsers. \n\nMicrosoft is expected to fix both issues in two weeks as part of March\u2019s Patch Tuesday update. \n\n", "polarity": 0.08007275132275132, "subjectivity": 0.35352513227513227, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/intermediate-ca-caching-could-be-used-to-fingerprint-firefox-users/123834/", "date": "2017-02-22T00:00:00.000Z", "author": "Chris Brook", "title": "Intermediate CA Caching Could Be Used to Fingerprint Firefox Users", "body": "The way that Firefox caches intermediate CA certificates could open the door to the fingerprinting\nof users and the leaking\u00a0of browsing details, a researcher warned this week. \n\nAlexander Klink, a security researcher based in Germany, discovered the issue and reported it to\nMozilla in January but details of the bug weren\u2019t made public via the company\u2019s Bugzilla\nplatform\u00a0until Tuesday. Klink published a blog post and his proof of concept for the issue later the\nsame day. \n\nIntermediate certificates are subordinate certificates, usually used as a stand-in or proxy, issued\nby root certificates. Intermediate CAs enhance the security of SSL certificates by diminishing the\npotential for root cert compromise; if the root is compromised, the entire ecosystem could collapse,\nif an intermediate CA is compromised, the root CA can revoke it and issue a new one. \n\nFingerprinting Firefox users with cached intermediate CA certificates. #fiprinca\nhttps://t.co/6FQlN4ANlT pic.twitter.com/LfRKAu3tbI \n\n\u2014 Alexander Klink (@alech) February 21, 2017 \n\n \n\nKlink discovered that through a third-party request\u2013in this case one sent from his proof of concept\nwebsite\u2013he could determine which intermediate CAs a Firefox user has cached, even if the user is\noperating the browser in Private Browsing mode. Private Browsing mode doesn\u2019t isolate a user\u2019s\ncache, which is why Private Browsing users aren\u2019t immune here, Klink claims. \n\nAccording to Klink, the browser loads content from incorrectly configured hosts, hosts that are\nmissing the intermediate cert, and then observes whether they were loaded correctly. The backbone of\nhis\u00a0test relies on trying to load an image from a webserver that has a valid cert, but not a\nintermediate CA. Klink is able to tell the difference between whether a user has an intermediate CA\ninstalled based on whether the image loads. \n\nUpon visiting the site, assuming a user is on Firefox, Klink\u2019s proof of concept immediately starts\ncycling through 326 different CAs\u2013Comodo, VeriSign, WoSign, to name a few\u2013and identifies any\nintermediate CAs associated with the profile. \n\n \n\nHe based his proof of concept on intermediate CA cert data he gathered from Root CA extract, a list\nof CA certificates extracted from Mozilla provided by the curl command line tool and library. He\nalso used data from Censys, a search engine for hosts and networks, and Project Sonar, a Rapid 7\nservice that scans public-facing networks for apps, software, and hardware. With the tools he was\nable to uncover 3,366 intermediate CAs that ultimately chain back to a Firefox-trusted root. \n\nAccording to Klink, \u201csemantic information\u201d gleaned from installed intermediate certificates could be\nused to piece together data\u00a0on a user. Some CAs are country- and region- specific and could help an\nattacker narrow down where a user is based geographically. An attacker might also be able to\ndetermine where a user attends college, or studies, as well. In Klink\u2019s case, he has a number of\nGerman academic certs pinned to his profile that could help fill out his fingerprint. If only a\nlimited number of CAs are flagged by the exploit, it\u2019s likely the user could be running the browser\nfrom a malware analysis sandbox, Klink claims. \n\nKlink reported the issue to Mozilla on Jan.\u00a027, but it\u2019s unclear if the company can actually do\nanything \u2013 at least in the near future \u2013 about the problem. Klink says the easiest route would be to\nhave the browser \u201cnot connect to incorrectly configured servers, regardless of whether the\nintermediate is cached or not,\u201d but that\u2019s likely not a move Mozilla would make. \n\nThe researcher advocates\u00a0anyone concerned about the issue to be proactive when it comes to the\ncleanliness of their Firefox profile. \n\n\u201cFrom a user\u2019s perspective, at the moment I can only recommend to regularly clean up your profile\n(by creating a fresh one, cleaning it up from the Firefox UI or using the certutil command line\ntool),\u201d Klink wrote Tuesday, \u201cAlternatively, blocking third-party requests with an add-on such as\nRequest Policy might be useful since the attack obviously needs to make (a lot of) third-party\nrequests. \n\nGervase Markham, a software engineer for Mozilla, weighed in on Klink\u2019s finding via Bugzilla in late\nJanuary\u00a0and\u00a0called Klink\u2019s process \u201ctechnically possible,\u201d but admitted it\u2019d be a \u201cfairly terrible\nway of fingerprinting/tracking.\u201d The engineer goes on to argue that each certificate only provides a\nsmall tidbit of information on a user. \n\n\u201cYou would need 16-24 or so different SSL connections to different servers in order to give you a\nuseful identifier, and that would probably be bad for the performance of your website. You\u2019d also\nneed to buy certificates from 16-24 different CAs, which would be a big hassle,\u201d Markham wrote. \n\nStill Markham acknowledged the issue and wondered if modifying the behavior of the cache, or just\neliminating it, could mitigate the issue. \n\nMozilla\u2019s next step appears to be gathering more information about the cache. Markham said\u00a0that in\norder to move forward, engineers need more telemetry around it, mostly to see how much it\u2019s being\nused but also to get a better grip on \u201cperformance characteristics, and the consequences of turning\nit off.\u201d A bug was filed in Bugzilla earlier this month to look into the issue further but there\u2019s\nbeen no visible movement since. \n\nThe Tor Browser, which is almost entirely built on Firefox code, apparently prevents cached\ncertificate-based tracking like this. Arthur Edelstein, a Firefox engineer, also chimed in on\nKlink\u2019s Bugzilla post, said a preference in Tor, security.nocertdb, is set to true. This makes it so\nthe browser\u2019s intermediate certificate store is memory-based only. \n\nStill, this could be further tweaked, Edelstein says. \n\n\u201cA better solution might be to apply first-party isolation to the certificate cache instead, similar\nto the HSTS/HPKP effort,\u201d Edelstein wrote. \n\nBoth Mozilla and Tor\u00a0scrambled to fix a zero day at the end of November that could\u2019ve been used to\nde-anonymize Tor users. That issue, ultimately tied to a use-after-free vulnerability, was much more\nsevere than Klink\u2019s. An attacker could have remotely executed arbitrary code to collect and forward\nIP and MAC addresses to a central server. The Tor Project is in the middle of hardening its browser\nwith a sandboxed version, something that should limit de-anonymization attacks and confine future\nexploits to the sandbox. \n\n", "polarity": 0.04251494537208823, "subjectivity": 0.4617089259946403, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/https-hits-50-percent-traffic-milestone/123512/", "date": "2017-02-01T00:00:00.000Z", "author": "Tom Spring", "title": "HTTPS Hits 50 Percent Traffic Milestone", "body": "This week\u00a0HTTPS hit another big milestone. According to a two-week survey of telemetry data from the\nMozilla Firefox browser, 50 percent of page loads used HTTPS. \n\n\u201cFor the first time, the running average crested the 50 percent HTTPS page load mark,\u201d said Sarah\nGran, director of communications for Let\u2019s Encrypt, the free certificate authority. \u201cWe see that as\nsolid progress when it comes to making the entire internet more secure.\u201d \n\nIt was only three months ago,\u00a0in October, that\u00a0Let\u2019s Encrypt\u00a0saw over 50 percent of HTTPS page load\nrequests across a 24-hour window. \n\n\u201cWe are really excited about this two-week running average that clearly demonstrates much more\nstability in the platform and security online,\u201d Gran said. \n\nHypertext Transfer Protocol Secure (HTTPS) is a communication protocol used by both browsers and\nwebsite that provides authentication of the website and associated web server. It also offers\nbidirectional encryption of browser data reducing significantly the threat of a man-in-the-middle\nattack. \n\n\u201cThis rate of growth is quite spectacular,\u201d said security researcher Troy Hunt\u00a0in a blog post noting\nthe milestone. Further analysis of HTTPS adoption by Hunt and security researcher Scott Helme shows\nthat sites implementing HTTPS have doubled in the past year. \n\nHunt said there is still work to be done however. \n\n\u201cMost sites are now HTTPS because\u2026 a huge portion of traffic is served from a small number of big\nsites. Twitter, Facebook, Gmail etc. all do all their things over HTTPS and that keeps that number\nquite high,\u201d Hunt said. He wrote that still only 18.4 percent of Alexa ranked top million sites\nsupport HTTPS. \n\nFueling HTTPS adoption, Hunt notes, is the certificate authority Let\u2019s Encrypt. The service,\u00a0which\nmakes eases the installation and renewal of certs easy for any sites, is the largest certificate\nprovider for the Alexa top 1 million sites, according to Helme. \n\n\u201cThere have been some other great contributions to the HTTPS ecosystem in the past year, so we can\u2019t\ntake all of the credit for recent adoption. But it\u2019s no coincidence that HTTPS adoption exploded\nduring the month that Let\u2019s Encrypt launched and hasn\u2019t slowed down yet,\u201d wrote Josh Aas, the\nexecutive director of Let\u2019s Encrypt, in an email exchange with Threatpost. \n\nAnother\u00a0contributor to HTTPS adoption has been the increase in warnings of insecure sites inside\nbrowsers.\u00a0Last week, Google\u2019s Chrome 54 browser started subtly warning Chrome users via the\nbrowser\u2019s address bar that a site may not be safe. When users navigate to unsafe\u00a0sites that prompt\nusers for sensitive information, Chrome 54 shows a \u201cNot secure\u201d warning instead of a green lock. \n\nMozilla rolled out Firefox 51 last week that warns browser users in a similar fashion when they land\non a HTTP website collecting personal information such as passwords. \n\nThis will eventually be the experience for all HTTP pages both Google and Mozilla said. \n\n\u201cWarnings about a site\u2019s security at the time where you\u2019re providing sensitive information is\nprecisely the sort of thing that will force the hand of these sites,\u201d Hunt wrote. \n\nHunt and others warn things are going to get even tougher for the over 80 percent of website that\ndon\u2019t support HTTPS. \n\nBrowsers security isn\u2019t the only thing driving HTTPS adoption, said Hunt. \n\n\u201cFor example, there\u2019s the SEO bump Google started giving secure sites a couple of years ago. There\u2019s\nalso the fascination many governments are developing with intercepting everyone\u2019s data, notably the\nlikes of Australia\u2019s Meta Data Retention law and the UK\u2019s Snooper\u2019s Charter (law),\u201d Hunt wrote. \n\n\u201cEvery time we encrypt even just another 1 percent of the Web, that is a massive amount of data that\nbecomes protected,\u201d Aas said. \n\n", "polarity": 0.14175381263616557, "subjectivity": 0.5316122004357299, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/high-severity-chrome-vulnerabilities-earn-researcher-32k-in-rewards/123363/", "date": "2017-01-26T00:00:00.000Z", "author": "Michael Mimoso", "title": "High-Severity Chrome Vulnerabilities Earn Researcher $32K in Rewards", "body": "For the second time in less than a year, researcher Mariusz Mlynski has earned more than $30,000\nthrough Google\u2019s Chrome Rewards program. \n\nGoogle on Wednesday released Chrome 56.0.02924.76 for Windows, Mac and Linux platforms, and Mlynski\nwas credited with finding and disclosing four high-severity vulnerabilities that were patched. \n\nAll four were universal cross-site scripting flaws in Blink, the web browser rendering engine\ndeveloped by Google\u2019s Chromium project and used in the Chrome browser. The vulnerabilities earned\nMlynski $32,337; last May, he pocketed $45,000 after finding a number of high-severity issues that\nwere patched in the browser. \n\nMlynski has been a prolific browser vulnerability researcher, in particular at the annual Pwn2Own\ncontest. In 2015, he used a cross-origin bug in Firefox to gain Windows admin privileges on a\nmachine, earning himself $55,000; in 2014 he won another $50,000 with chaining together two Firefox\nflaws to gain privilege escalation on a Windows machine. \n\nThe latest version of Chrome includes patches for 51 vulnerabilities, seven of which that were rated\nhigh severity qualified for rewards. Google patched 14 high-severity bugs in total, with the\nremainder discovered internally. \n\nAside from the four Mlynski bugs, an unauthorized file access bug was found in Devtools, an out of\nbounds memory access issue in WebRTC, and a heap overflow in V8 were also rated high-severity and\nearned three researchers a collective $11,500. \n\nGoogle was also expected to begin deprecating SHA-1 in this version of Chrome. In line with the\nother browser makers, Google said in November that it would remove support for SHA-1 certificates\nstarting with Chrome 56; Microsoft and Mozilla have announced similar deprecation schedules through\nthe next month. SHA-1 has long been considered a weakened hashing algorithm and susceptible to\ncollisions attacks. Experts have been urging site owners and application developers to migrate to\nSHA-2 or other modern algorithms, but success on that front has been mixed. \n\nYesterday\u2019s Chrome update also continues Google\u2019s acceleration of its support for HTML5 over Adobe\nFlash. Starting with a slow rollout in Chrome 55, Google is expected to have enabled HTML5 support\nby default for half of Chrome 56 beta users. \n\nIn Chrome 56, Google also paid out rewards for eight medium-severity vulnerabilities, and six others\nrated low severity. \n\n", "polarity": 0.030512820512820508, "subjectivity": 0.2855128205128205, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/firefox-51-begins-warning-users-of-insecure-http-connections/123331/", "date": "2017-01-25T00:00:00.000Z", "author": "Tom Spring", "title": "Firefox 51 Begins Warning Users of Insecure HTTP Connections", "body": "Mozilla Foundation took steps with the release of Firefox 51 on Tuesday to communicate more clearly\nto users when they land on a HTTP website collecting personal information such as passwords that\u00a0the\nsite may not be secure. \n\nGoing forward, Firefox will display a gray lock icon with a red strikethrough in the address bar.\nShould the user click on the lock, a dialog box will pop up with text indicating the connection is\nnot secure. Eventually, Mozilla said, this will be the experience for all HTTP pages. \n\n\u201cTo continue to promote the use of HTTPS and properly convey the risks to users, Firefox will\neventually display the struck-through lock icon for all pages that don\u2019t use HTTPS, to make clear\nthat they are not secure,\u201d a post to the Mozilla security blog said. \u201cAs our plans evolve, we will\ncontinue to post updates but our hope is that all developers are encouraged by these changes to take\nthe necessary steps to protect users of the Web through HTTPS.\u201d \n\n \n\nMozilla\u2019s move follows similar efforts by Google with its Chrome browser. Late last year, Google\nsaid starting this month,\u00a0Chrome users who navigate to some\u00a0HTTP sites will be notified they\u2019re on a\nsite that isn\u2019t secure. \n\nOn Tuesday, Mozilla also patched\u00a0several critical security vulnerabilities.\u00a0Topping the list of\ncritical vulnerabilities is one described as a \u201cexcessive JIT code allocation allowing the bypass of\nASLR and DEP.\u201d A JIT (just in time) code is a default processes that handles how Java request are\nmade, allowing for compiled byte code to run directly versus taking an additional step of\ninterpreting the code and then running it. The ASLR (address space layout randomization) guards\nagainst buffer-overflow attacks and DEP (data execution prevention) protects operating systems from\nvirus attacks launched from Window\u2019s system memory locations. \n\n\u201cJIT code allocation can allow for a bypass of ASLR and DEP protections leading to potential memory\ncorruption attacks,\u201d according to the security advisory. The vulnerability (CVE-2017-5375) impacts\nonly Firefox 51. \n\nOther critical vulnerabilities include a use-after-free flaw (CVE-2017-5376) related to manipulating\nXSL in XSLT documents. A second critical memory corruption flaw (CVE-2017-5377) was found impacting\nthe open source 2D graphics library called Skia. \n\nOf the advisories rated high three were use-after-free vulnerabilities related to web animations\n(CVE-2017-5379), DOM manipulation of SVG content (CVE-2017-5380) and a bug related to the Firefox\nMedia Decoder (CVE-2017-5396). \n\nSeveral critical vulnerabilities were also found in Mozilla\u2019s Extended Support Release (ESR) version\nof the Firefox browser. Firefox ESR is a custom version of the Mozilla Firefox browser specifically\ndesigned for the special browser requirements relied upon by schools, government agencies and\nbusinesses that maybe leery about forced browser updates that could disrupt line-of-business\nbrowser-based applications. \n\nOne of those Firefox ESR critical security alerts (CVE-2017-5374) was a memory safety bug that with\nenough effort could be exploited to run arbitrary code, according to the advisory. Another critical\nmemory safety bug was found in Firefox and Firefox ESR 45.7 that also could be exploited to run\narbitrary code. Both Firefox ERS vulnerabilities were patched. \n\nFirefox 51 browser also became the first of the major browsers to display a warning to users who run\ninto a site that doesn\u2019t support TLS certificates signed by the SHA-2 hashing algorithm. According\nto Mozilla, SHA-1 warnings start this week for beta Firefox users and will roll out to all other\nusers sometime after that. The move is meant to protect users from collision attacks, where two or\nmore inputs generate the same hash value. \n\n", "polarity": 0.026731366459627332, "subjectivity": 0.4924585921325053, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/alpha-version-of-sandboxed-tor-browser-released/122414/", "date": "2016-12-12T00:00:00.000Z", "author": "Chris Brook", "title": "Alpha Version of Sandboxed Tor Browser Released", "body": "A\u00a0sandboxed version of the Tor Browser was released over the weekend, and while there are still some\nrough edges and bugs \u2013 potentially major, according to the developer\u2013 it\u00a0could be\u00a0the\u00a0first\nstep\u00a0toward protecting Tor users from recent de-anonymization exploits. \n\nYawning Angel, a longtime Tor developer, unveiled version 0.0.2,\u00a0in a post to the Tor developers\nmailing list on Saturday. \n\nOfficial binaries, available only for Linux distributions, won\u2019t be out until later this week. Until\nthen, if prospective users want to try it out themselves, they can build it by downloading\u00a0the code\non GitHub, according to the developer. \n\nWhile the alpha release of a piece of software wouldn\u2019t usually merit much attention, the fact that\nTor Browser\u00a0has been targeted with several exploits intended to unmask users over the past\u00a0two years\nmakes it a welcomed announcement for users who value their privacy. \n\nDevelopers with both Firefox and the Tor Browser, which is partially built on open source Firefox\ncode, had to scramble last month to fix a zero-day vulnerability that was being exploited in the\nwild to unmask Tor users. \n\nThe FBI targeted Tor Browser users in 2015 after officials with the service seized servers belonging\nto a child pornography site called Playpen. Instead of shuttering the site, the FBI used a network\ninvestigative technique to harvest the IP and MAC addresses of Tor users who visited the site for 13\ndays. \n\nIn the sandboxed version of Tor, exploits against the browser are confined to the sandbox,\u00a0limiting\nthe disclosure of information about whatever\u00a0machine the browser is running on. Data like files and\nlegitimate IP and MAC addresses is hidden as well. \n\nThe browser has come a long way to even get to alpha mode; In October, when Yawning Angel discussed\nthe prototype in a Q&A with the Tor Project, he called it \u201cexperimental,\u201d \u201cnot user friendly\u201d and\nsomething that only worked on his laptop. The developer first mentioned that he was tinkering with a\nsandboxed version of the browser back in September, although at that point the concept\u00a0was even more\nrudimentary. \n\nYawning Angel has sandboxed the Tor Browser! https://t.co/5pbBvJgUn4 pic.twitter.com/q8lHA6Fib6 \n\n\u2014 torproject (@torproject) October 11, 2016 \n\n \n\nThe browser is built around bubblewrap, a sandboxing utility for Linux designed to restrict an\napplication\u2019s access to parts of the operating system or user data. Since it is an alpha release\nhowever, Yawning Angel is stressing users not to\u00a0assume the browser isn\u2019t without its\u00a0flaws. \n\n\u201cThere are several unresolved issues that affect security and fingerprinting,\u201d the developer wrote\nin a README packaged with code for the sandboxed Tor Browser on GitHub. Users seeking strong\nsecurity should pair the sandbox with a Linux-based operating system designed to thwart exploit and\nmalware attacks, such as\u00a0Qubes, Subgraph, or Tails, he adds. \n\nWhile major browsers such as\u00a0Chrome, Edge and Safari operate in secure sandboxes, developers with\nTor haven\u2019t had the time to build a sandbox until now. In the Q&A that Yawning Angel gave in\nOctober, he acknowledged this is his third time trying to write code for the sandbox and that the\nprocess is \u201cincredibly complicated\u201d and not without \u201clots of design problems.\u201d \n\n\u201cWe never have time to do this. We have a funding proposal to do this but I decided to do it\nseparately from the Tor Browser team. I\u2019ve been trying to do this since last year,\u201d Yawning Angel\nsaid at the time. \n\n", "polarity": 0.05755208333333334, "subjectivity": 0.3817708333333333, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/distributed-guessing-attack-reels-in-payment-card-data/122251/", "date": "2016-12-05T00:00:00.000Z", "author": "Michael Mimoso", "title": "Distributed Guessing Attack Reels in Payment Card Data", "body": "Academics at Newcastle University have proven that an attacker in possession of a minimal amount of\nexisting information can, in an automated way, guess payment card data by exploiting weaknesses in\nonline payment processes. \n\nThe issue lies in the fact that the global payment system lacks a centralized mechanism for\nmonitoring invalid payment attempts across multiple websites. Using a purpose-built bot, an attacker\ncan try multiple guesses on different websites until they land on all the necessary information\nwithout triggering a warning. \n\nThe attack works only against Visa\u2019s payment ecosystem, the researchers said, adding that their\nexperiments against 400 of the top-rated Alexa websites, including PayPal and Amazon rendered card\nnumbers, expiration dates, CVV numbers and additional data in a matter of seconds. \n\nThe attack scales and is practical, the researchers caution. The vulnerabilities and research were\ndisclosed in advance to Visa and a number of the affected top websites, some of which have mitigated\nthe attack. Visa said that the paper \u201cDoes The Online Card Payment Landscape Unwittingly Facilitate\nFraud?\u201d does not take into account its fraud prevention systems that protect against such attacks.\nMohammed Aamir Ali, one of the report\u2019s coauthors, said that the researchers does indeed demonstrate\nhow advanced attackers could exploit Visa\u2019s multiple layers of fraud protection. \n\n\u201cThis is about trying to stay one step ahead of the criminals, pushing the system, finding the flaws\nand learning from that,\u201d Ali said. \n\nAli and his coauthors Budi Arief, Martin Emms and Aad van Moorsel advocate for a centralized system\nof security checks across transactions to be implemented to prevent what the paper describes as a\ndistributed guessing attack. \n\n\u201cThis attack subverts the payment functionality from its intended purpose of validating card\ndetails, into helping the attackers to generate all security data fields required to make online\ntransactions,\u201d the researchers wrote. \u201cWe will show that this attack would not be practical if all\npayment sites performed the same security checks.\u201d \n\nIt has been reported as well that the attack against Tesco, a U.K. retail bank, in which 20,000\naccount holders reported missing money, may have been carried out using this distributed guessing\nattack. \n\n\u201cWe don\u2019t have enough evidence to support this claim,\u201d Ali told Threatpost. \n\nThe research was carried out against Visa and MasterCard; MasterCard has a centralized network that\ndetects such guessing attacks after 10 tries, even if the 10 guesses are distributed across a number\nof sites. Visa does not have such checks, the researchers wrote. \n\n\u201cAttackers can just start with a laptop connected to the internet,\u201d Ali said. \u201cAs a starting point,\nthey will need the first six digits, also called the Bank Identification Number (BIN) of a bank,\nwhich is publicly available through the internet.\u201d \n\nThe paper points out that there are two weaknesses being exploited here, and standing alone, each is\nrelatively benign. Used together, however, and the researchers believe they are a risk to the entire\nglobal payment system. \n\nPayment systems, the researchers wrote, often do not detect invalid payment requests on the same car\nfrom different websites. \n\n\u201cEffectively, this implies that practically unlimited guesses can be made by distributing the\nguesses over many websites, even if individual websites limit the number of attempts,\u201d the\nresearchers wrote. \n\nThe second weakness enables the attack to scare. Different websites, for example, provide for\ndifferent fields where card information can be entered; some merchants require a primary account\nnumber, expiration date, CVV number and address, while others require less information. \n\n\u201cStarting with a valid card number (PAN), to guess the expiry date an attacker can utilize several\nmerchants\u2019 websites that check only two fields: the card number and the expiry date,\u201d the\nresearchers wrote. \u201cOnce the expiry date is known, the attacker can use it along with the card\nnumber to guess the CVV2 information using another set of websites that check 3 fields (the card\nnumber, the expiry date, and the CVV2).\u201d \n\nThe researchers built a bot and used automated scripts written in the Java Selenium browser\nautomation framework to automate the guessing of card information across numerous sites. The group\u2019s\nexperiments were run on Firefox and the bot did the heavy lifting of inputting and guessing values\nfor each field. \n\n \n\nThe researchers said that CVV numbers can be obtained in fewer than 1,000 guesses, while the\nexpiration date in 60 tries. \n\n\u201cIf all merchants would use three fields and ask for expiry date as well as CVV2, then it may take\nas many as 60 x 1,000 = 60,000 attempts,\u201d the researchers wrote. \u201cThe difference between 1,060 and\n60,000 is the difference between a quick and practical attack, and a tedious, close to impractical\nattack.\u201d \n\nThe researchers notified Visa and 36 of the top websites affected by the vulnerabilities. Within\nfour weeks, they\u2019d received 20 responses from people requesting more details, while the rest were\nautomated responses. Eight of the 36 websites patched the weakness by either adding delay or\nvelocity filters, or CAPTCHAs, for example. Twenty eight of the notified websites have yet to\nmitigate the issue. \n\nThe researchers meanwhile suggest industry-wide changes such as merchant standardizing on the same\npayment interface, which would reduce the scale of the attack, or centralization where payment\ngateways or card payment networks have a full view of payment tries on its networks. \n\n\u201cNeither standardization nor centralization naturally fit the flexibility and freedom of choice one\nassociates with the Internet or successful commercial activity, but they will provide the required\nprotection,\u201d the researchers wrote. \u201cIt is up to the various stakeholders to determine the case for\nand timing of such solutions.\u201d \n\n", "polarity": 0.09276729559748428, "subjectivity": 0.4141509433962263, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/tor-patched-against-zero-day-under-attack/122176/", "date": "2016-11-30T00:00:00.000Z", "author": "Tom Spring", "title": "Tor Patched Against Zero Day Under Attack", "body": "Update\u00a0The Tor Project has provided a browser update that patches a zero-day vulnerability being\nexploited in the wild to de-anonymize Tor users. \n\n\u201cThe security flaw responsible for this urgent release is already actively exploited on Windows\nsystems. Even though there is currently, to the best of our knowledge, no similar exploit for OS X\nor Linux users available, the underlying bug affects those platforms as well,\u201d the Tor Project said\nin its announcement. \u201cThus\u00a0we strongly recommend that all users apply the update to their Tor\nBrowser immediately. A restart is required for it to take effect.\u201d \n\nThe Tor Project said the update released late Wednesday included an \u201cimportant security update to\nFirefox and contains, in addition to that, an update to NoScript (2.9.5.2).\u201d NoScript\u00a0for Firefox is\nan open-source add-on that pre-emptively blocks malicious scripts and allows JavaScript, Java and\nother potentially dangerous content only from sites you trust. \n\nWord of the exploit was first posted to a Tor mailing list late Tuesday with the warning \u201cThis is an\nJavaScript exploit actively used against TorBrowser NOW.\u201d \n\nEarly Wednesday, Tor cofounder Roger Dingledine confirmed the reports and said the Mozilla\nFoundation was working to patch the vulnerability. The Tor Browser is partially built on open source\nFirefox code, but also includes proxy code that encrypts and anonymizes users\u2019 sessions as they move\nabout the Internet. \n\nPrior to the availability of a patch, the Tor Project said that users could either disable\nJavaScript, or set their security slider to \u201cHigh\u201d as a mitigation. \n\nThe flaw, security experts point out, is nearly identical to a zero-day vulnerability used\u00a0by the\nFBI in 2013 as part of the agency\u2019s efforts to identify Tor users sharing\u00a0child pornography.\nAccording to an email from the Tor Project, the flaw is in Firefox\u2019s SVG animation feature, and both\nSVG and JavaScript must be enabled for the exploit to be effective. \n\nTechnical details pertaining to the zero-day were initially scant and limited to a post to the Tor\nmailing list site with the short description: \n\n\u201cIt consists of one HTML and one CSS file, both pasted below and also de-obscured. The exact\nfunctionality is unknown but it\u2019s getting access to \u2018VirtualAlloc\u2019 in \u2018kernel32.dll\u2019 and goes from\nthere. Please fix ASAP.\u201d \n\nA security researcher by the Twitter handle\u00a0@TheWack0lian\u00a0posted a comparison of 2013 shellcode used\nby the FBI to the 2016 shellcode. \n\nThe shellcode used is almost exactly the shellcode of the 2013 one https://t.co/6vuIzqp0rj \n\n\u2026except it builds sockaddr_in on the stack. https://t.co/pWsUe4uHiZ \n\n\u2014 slipstream/RoL (@TheWack0lian) November 29, 2016 \n\n \n\nDan Guido, security researcher and CEO of Trail of Bits, chimed in on Twitter Wednesday saying that\n\u201cthe vulnerability is also present on macOS, but the exploit does not include support for targeting\nany operating system but Windows.\u201d \n\nThe vulnerability is present on macOS, but the exploit does not include support for targeting any\noperating system but Windows. \n\n\u2014 Dan Guido (@dguido) November 30, 2016 \n\n \n\nThe TorBrowser vulnerability revelation Tuesday dredges up issues surrounding the government\u2019s\nstockpiling and use of zero day exploits. In April, FBI Director James Comey revealed the agency\npaid an undisclosed third-party over a $1 million for a hacking tool that opened the iPhone 5c of\nthe San Bernardino terrorist Syed Farook. In May, Mozilla filed a motion with the U.S. District\nCourt in Tacoma, Wa., asking the government to disclose a vulnerability it exploited in the Tor\nBrowser and Firefox in the 2013 case. \n\nThe FBI did not return inquiries for comment for this story. \n\nThe Tor malware calling home to a French IP address is puzzling though. I'd be surprised to see a US\nfederal judge authorize that. https://t.co/FiOPwRj0C7 \n\n\u2014 Christopher Soghoian (@csoghoian) November 29, 2016 \n\n \n\nChris Soghoian, principal technologist with the American Civil Liberties Union, noted in a tweet\nthat the zero-day malware discovered in the Tor on Wednesday is calling home to a French IP address,\nadding \u201cI\u2019d be surprised to see a US federal judge authorize that.\u201d \n\nThis story will be updated as more information becomes available. \n\nThis story was updated at 5pm ET to reflect a fix for the security vulnerability issued by the Tor\nProject late Wednesday along with additional technical details provided in the organization\u2019s blog\npost. \n\n", "polarity": 0.0852437641723356, "subjectivity": 0.43034580498866215, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-patches-firefox-zero-day-used-to-unmask-tor-browser-users/122204/", "date": "2016-12-01T00:00:00.000Z", "author": "Chris Brook", "title": "Mozilla Patches Firefox Zero Day Used to Unmask Tor Browser Users", "body": "As expected, Mozilla released a new version of Firefox on Wednesday to address a zero-day\nvulnerability that was actively being exploited\u00a0to de-anonymize Tor Browser users. \n\nThe vulnerability, disclosed on a public Tor Project mailing list late Tuesday night, forced the Tor\nProject to also issue an emergency update (6.0.7) in its Tor Browser \u2013 which is partially built on\nopen source Firefox code \u2013 on Wednesday. \n\nAccording to Daniel Veditz, who leads\u00a0Mozilla\u2019s security team, Firefox users should have their\nbrowsers automatically updated at some point over the next 24 hours. If they\u2019d rather not wait,\nusers can download the updated versions \u2013 Firefox 50.0.2, Firefox ESR 45.5.1, and Thunderbird\n45.5.1. \u2013 manually. \n\nFirefox users should update to get an important vulnerability fix https://t.co/DohnA5coHd \n\n\u2014 Daniel Veditz (@dveditz) November 30, 2016 \n\n \n\nThe issue, a use-after-free vulnerability, technically existed in an object, nsSMILTimeContainer,\nwhich is used to facilitate SVG animation in Firefox. Assuming an attacker could trick a user into\nvisiting specially-crafted web content, they could have leveraged the vulnerability to remotely\nexecute arbitrary code on the system. \n\nVeditz said Wednesday afternoon that because of the way the vulnerability behaved, it was collecting\nand forwarding IP and MAC addresses thought to be private and forwarding them back to a central\nserver. \n\n\u201cThe exploit took advantage of a bug in Firefox to allow the attacker to execute arbitrary code on\nthe targeted system by having the victim load a web page containing malicious JavaScript and SVG\ncode. It used this capability to collect the IP and MAC address of the targeted system and report\nthem back to a central server. While the payload of the exploit would only work on Windows, the\nvulnerability exists on Mac OS and Linux as well,\u201d Veditz wrote. \n\nVeditz acknowledged many security researchers surmised on Twitter Wednesday that the way ToR\nvulnerability worked was similar to the way the FBI de-anonymized Tor users in 2013. While Veditz\nstopped short of saying the exploit was created by the FBI or law enforcement, he did float the idea\nand warned how\u00a0it could pose a\u00a0serious threat to privacy. \n\n\u201cAs of now, we do not know whether this is the case. If this exploit was in fact developed and\ndeployed by a government agency, the fact that it has been published and can now be used by anyone\nto attack Firefox users is a clear demonstration of how supposedly limited government hacking can\nbecome a threat to the broader Web,\u201d Veditz said. \n\n", "polarity": -0.01702612863327149, "subjectivity": 0.36568104514533084, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/microsoft-cutting-off-sha-1-support-in-february-for-edge-ie-11/122119/", "date": "2016-11-22T00:00:00.000Z", "author": "Tom Spring", "title": "Microsoft Cutting Off SHA-1 Support in February for Edge, IE 11", "body": "Microsoft confirmed that Feb.\u00a014, 2017 is the cutoff date for SHA-1 support in its Microsoft Edge\nand Internet Explorer 11 browsers. After that date, neither browser will immediately load sites\nstill running SHA-1 certificates and users will be shown an invalid certificate warning. Users will\nalso have to take extra steps to reach the site if they so choose. \n\nThe move follows Google\u2019s announcement last week that it will remove support for SHA-1 certificates\nin Chrome 56 that is slated to be released at the end of January. Mozilla also announced a similar\ndeprecation cutoff date for early next year. \n\nSHA-1 (Secure Hash Algorithm 1) has been supported\u00a0by\u00a0Google, Firefox and Microsoft browsers for\nmore than\u00a0a decade. But weaknesses and theoretical collisions have been demonstrated in SHA-1,\nexposing users to spoofing and man-in-the-middle attacks. \n\nThe successor, SHA-2, addresses those concerns. But the industry has a long way to go to update,\naccording to Venafi. It estimates 35 percent of websites (out of 11 million public websites) are\nstill using SHA-1 certificates. \n\nIn a blog post, Microsoft said that its transition will impact only SHA-1 certificates that chain to\na Microsoft Trusted Root certificate authority. The tech giant also attempted to allay fears over\nthe migration saying manually installed enterprise or self-signed SHA-1 certificates will not be\nimpacted; ensuring a smooth transition for internal corporate sites mostly located behind a\ncompany\u2019s firewall. \n\nMicrosoft also said that system administrators can get a jump on testing SHA-2 readiness if they are\nrunning the November 2016 Windows Updates, including the November 2016 Preview of Monthly Quality\nRollups for Windows 7/Windows 8.1. Those users can use Edge and IE 11 to test how their site will be\nimpacted by the SHA-2 migration, Microsoft said. \n\nAdditionally, users that visit sites that have missed the Feb.\u00a014, 2017 migration date will also\nhave the option to ignore the certificate error and will be able to continue to the website in\nquestion. \n\nMicrosoft also clarified concerns around cross-signed certificates explaining that Windows will only\ncheck if the thumbprint of the root certificate is in Microsoft Trusted Root Certificate Program. \u201cA\ncertificate cross-signed with a Microsoft Trusted Root that chains to an enterprise/self-signed root\nwould not be impacted by the changes planned for February 2017,\u201d according to Alec Oot and Jody\nCloutier both senior program managers at Microsoft. \n\nMicrosoft\u2019s SHA-1 certificate error message to be displayed after Feb. 14, 2017 on Edge and IE 11\nbrowsers. \n\n\u201cCertificate security is critical to a website\u2019s success. All web browsers use certificates to\ndetermine what can and can\u2019t be trusted during online transactions. This is particularly critical in\ntransactions that include sensitive data such as ecommerce and online banking,\u201d notes Venafi\u2019s Scott\nCarter in a recent post regarding SHA-1 depreciation. \n\nConsequences to website owners that don\u2019t migrate include visitors being warned of visiting insecure\nwebsites and being urged to look elsewhere for content. Browsers will not display a \u201cgreen padlock\u201d\nin the address bar and some sites could experience performance problems, according to Venafi. \n\n\u201cEither a third of websites are frantically scrambling to replace their SHA-1 certificates or they\nare blissfully unaware that they may still have SHA-1 certificates they have not yet located,\u201d\nCarter wrote. \u201cI doubt that many of these websites are still unaware of the consequences.\u201d \n\n", "polarity": 0.0796875, "subjectivity": 0.4619791666666668, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-patches-29-vulnerabilities-prevents-mime-confusion-attacks-in-firefox-50/122007/", "date": "2016-11-16T00:00:00.000Z", "author": "Chris Brook", "title": "Mozilla Patches 29 Vulnerabilities, Prevents MIME Confusion Attacks, in Firefox 50", "body": "Mozilla addressed 29 vulnerabilities, three rated critical, when it released the latest iteration of\nits flagship browser, Firefox 50 and Firefox ESR 45.5, on Tuesday. \n\nFirefox developers said this week that it might take some effort, but at least two of the critical\nbugs could be exploited to run arbitrary code. Both bugs stemmed from memory safety issues in\nFirefox 49, released in mid-September. \n\nAccording to a security advisory published by Mozilla, both issues showed evidence of memory\ncorruption and were discovered by Mozilla developers and community members. \n\nThe other critical bug, a heap-buffer-overflow in Cairo, a programming library that handles 2D\nrendering for the browser could have resulted in an exploitable crash. Abhishek Arya of Google\u2019s\nChrome Security Team is credited for discovering the bug, which Mozilla claims could have been\ntriggered when processing SVG, or Scalable Vector Graphics, content caused by compiler optimization. \n\nSeveral of the bugs Mozilla fixed that were marked high could have also resulted in potentially\nexploitable crashes, including two use-after-free vulnerabilities dug up by researcher Nils. \n\nOther issues could have allowed for timing attacks if images were loaded from a third-party\nlocation, the installation of extensions without user permission, and in Firefox for Android, the\nspoofing of a location bar. \n\nAs Mozilla said it would do in August, Firefox now\u00a0rejects stylesheets, images, or scripts if their\nMIME type doesn\u2019t match the context in which files are loaded. MIME types, or Multipurpose Internet\nMail Extensions types, classify media types. \n\nDoing so reduces the likeliness of the browser being exploited by a MIME confusion attack, according\nto Christoph Kerschbaumer, a Security and Privacy Engineer with the company at the time. Through a\nMIME confusion attack, an attacker could craft and upload images that on the surface appear to be\nimage files but actually contain scripting content. Now the browser will display a warning,\ninforming users when files are blocked due to a \u201cMIME type mismatch.\u201d \n\n \n\nTwo months ago, when Mozilla pushed Firefox 49 it patched a flaw tied to its automated update\nprocess for add-ons that stretched to the Tor Browser as well. To exploit the vulnerability an\nattacker would have had to stolen or forged a TLS certificate and inserted themselves into traffic,\nsomething experts speculated would have been a challenge. \n\nThe 50th iteration of the browser boasts a host of non-security fixes as well. The new version has a\nhandful of new keyboard shortcuts, download protection for executable file types, and improved video\nand SDK extension capabilities. \n\n", "polarity": 0.017095959595959595, "subjectivity": 0.487449494949495, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/microsoft-tears-off-the-band-aid-with-emet/121824/", "date": "2016-11-07T00:00:00.000Z", "author": "Michael Mimoso", "title": "Microsoft Tears off the Band-Aid with EMET", "body": "Microsoft last week extended the end-of-life expiration date to July 2018 on its exploit mitigation\nadd-on, the Enhanced Mitigation Experience Toolkit (EMET). But for some time, the once-useful tool\nhas been well on its way out to pasture. \n\nWhile EMET was never meant to be anything more than stopgap protection against exploits, attackers\nand white-hat researchers accelerated its demise with a number of publicized bypass attacks. That\nsituation, plus Microsoft\u2019s urgency to have users migrate to Windows 10 and the array of new memory\nmitigations included in the latest OS has brought the curtain down on EMET. \n\n\u201cIt was a stopgap. It was never supposed to be something [Microsoft] wanted people to use longterm,\u201d\nsaid Cody Pierce, director of vulnerability research at Endgame. \u201cThey want people to upgrade\nWindows 10; for the good of their customers, they want to transition them to Windows 10 where there\nare some protections baked into the operating system.\u201d \n\nForemost is Control Flow Guard, a technology built to counter memory-corruption vulnerabilities,\nwhich has been available since Visual Studio 2015 and is also built into Windows 10 and Windows 8.1.\nControl Flow Guard is thought to be a primary impediment to use-after-free attacks, which became a\nfavorite exploit once ASLR and DEP put a damper in buffer overflow attacks. \n\n\u201cThere are a lot more compile time mitigations [in Windows 10] like Control Flow Guard, and a new\nReturn Flow Guard feature,\u201d said Darren Kemp, security researcher with Duo Security. Kemp also\npointed out that since Windows 10\u2019s mitigations are integrated into the operating system, unlike\nEMET, there are fewer instances where users will notice a performance hit, which was increasingly\ncommon with EMET. Also, EMET required close care when configuring it to work, otherwise it could\nbreak certain application processes. \n\n\u201cSince it\u2019s not integrated, you don\u2019t get the same type of tight coupling,\u201d Kemp said. \u201cWith a lot\nof stuff in EMET, you have to test the software you\u2019re applying it to, to make sure the mitigations\ndon\u2019t cause problems. It hooks into functions and injects features. If software does non-standard\nthings, it can cause problems with those apps.\u201d \n\nMicrosoft, meanwhile, has not had EMET on a consistent upgrade path since version 5.0 dropped in\n2014. This was an abrupt change from the early days when EMET was introduced and exploits were\nunleashed within days of Patch Tuesday releases. In announcing the deadline extension to July 31,\n2018, Microsoft\u2019s Jeffrey Sutherland acknowledged EMET\u2019s limitations against modern advanced\nattacks, its performance and reliability shortcomings, and urged users toward Windows 10, which\nmakes the most of hardware virtualization to sandbox applications and links before they can harm the\noperating system. \n\n\u201cWith the types of threats enterprises face today, we are constantly reminded of this simple truth:\nmodern defense against software vulnerabilities requires a modern platform,\u201d Sutherland said. \n\nThe true value of any mitigation continues to be how well it raises the cost of attacks. Pierce\nillustrated how advanced attackers have blown well past EMET\u2019s menu of mitigations with advanced\nlogic that automates many facets of an attack that its defenses cannot keep up with. \n\n\u201cIf you\u2019re an exploit kit writer and you acquire a zero day or develop an exploit, you have to get\nthe most bang for your buck; and part of that is supporting a wide range of targets. If you\u2019ve got a\nFlash exploit, you want it to work on Firefox, Windows, Linux and more and you have to come up with\nways to make it easier on you,\u201d Pierce said. \u201cA lot of the ways they\u2019ve figured out to do that\nbypasses a lot of these late-hook defenses like EMET. They\u2019re getting more value out of it. The\ntypes of exploit mitigations EMET provides were limited in utility due to the nature of\nexploitation. If you look at an exploit kit from 2010, it looks wildly different than it does now.\u201d \n\nDuo\u2019s Kemp, meanwhile, says Windows 10 is one of the hardest targets to breach today. \n\n\u201cThat\u2019s the nature of this stuff: raising the bar. If you\u2019re an attacker, do you want to invest a\nlot of time and energy to figure out a way around this, or are you going to go after something\nelse?\u201d Kemp said. \n\n", "polarity": 0.21078643578643583, "subjectivity": 0.45360028860028867, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/google-to-red-flag-repeat-offender-websites/121872/", "date": "2016-11-09T00:00:00.000Z", "author": "Tom Spring", "title": "Google to Red Flag \u2018Repeat Offender\u2019 Websites", "body": "Google upped the ante on Tuesday on its Safe Browsing efforts to warn users of questionable websites\nwith the introduction of a Repeat Offender designation. \n\nThe designation, Google says, builds on the company\u2019s existing Safe Browsing warning system that\nblocks access to sites that are in violation of its malware, unwanted software, phishing, and social\nengineering policies. The Repeat Offender label, Google said, will be given to websites Google\nconcludes has repeatedly violated its Safe Browsing rules. \n\nGoogle says the Repeat Offender verification can be triggered automatically, or can be requested by\na webmaster via Google\u2019s Search Console. Once Google determines a site is a Repeat Offender, users\nattempting to visit the website are presented the red Google Safe Browsing warning page alerting\nthem they are attempting to visit a possible dangerous site. \n\n\u201cRepeat Offenders are websites that repeatedly switch between compliant and policy-violating\nbehavior for the purpose of having a successful review and having warnings removed,\u201d Google said.\n\u201cOver time, we\u2019ve observed that a small number of websites will cease harming users for long enough\nto have the warnings removed, and will then revert to harmful activity,\u201d Google said. \n\nGoogle introduced Safe Browsing in 2005 with the goal of protecting users from harmful websites\npeddling malware, phishing ploys and social engineering schemes. Over the past decade the program\nhas evolved and today approximately 1 billion Internet users are protected by Google\u2019s Safe Browsing\nservice on a growing number of platforms including Mozilla Firefox, Apple Safari and Google Chrome.\nAccording to the company\u2019s Transparency Report, released earlier this year, more than 57 million\nusers attempted to visit an unsafe site and were notified by the service. \n\nOnce a website is deemed a Repeat Offender, webmasters will have to wait 30 days before they can\nrequest an additional review of the site, Google said. \n\n\u201cGoogle Safe Browsing helps protect users by showing warnings on dangerous sites or dangerous\ndownload files. Safe Browsing also notifies webmasters when their websites are compromised by\nmalicious actors and helps them diagnose and resolve the problem so that their visitors stay safer,\u201d\naccording to Google\u2019s Search Console. \n\nGoogle notes that it will not classify hacked websites as Repeat Offenders. \u201cOnly sites that\npurposefully post harmful content will be subject to the policy,\u201d Google said. \n\n", "polarity": 0.07307692307692307, "subjectivity": 0.5487179487179488, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/google-to-make-certificate-transparency-mandatory-by-2017/121651/", "date": "2016-10-29T00:00:00.000Z", "author": "Tom Spring", "title": "Google to Make Certificate Transparency Mandatory By 2017", "body": "Google is making Certificate Transparency mandatory for its Chrome web browser by October 2017.\nGoogle software engineer Ryan Sleevi made the announcement in conjunction with the CA/Browser Forum\nthat took place in Redmond, Washington last week. \n\nThe move is an attempt to reduce the number of domain certificates that are compromised and abused\nby hackers who are taking advantage of structural flaws in the certificate authority system, say\nexperts. Those security flaws have allowed hackers to exploit holes in the certificate authority\nsystem and launch man-in-the-middle and website spoofing attacks. \n\nCertificate Transparency is an open source framework developed by Google for monitoring and auditing\ndomain certificates. The framework was proposed by Google in 2013 and has since has become an\nInternet Engineering Task Force open standard. After the October 2017 deadline all websites will be\nrequired to adopt the new Certificate Transparency standard. \n\nGiven current domain certificates have a maximum 39-month lifecycle, by 2020 all issued certificates\nwill be logged and in compliance with the new Certificate Transparency (CT) standard, according to\nDoug Beattie, \u200eVP product management at GlobalSign. \n\nSleevi said the move is a significant step forward to building a trusted online ecosystem. \u201cThe\ninvestments made by CAs adopting CT, and Chrome requiring it in some cases, have already paid\ntremendous dividends in providing a more secure and trustworthy Internet. The use of Certificate\nTransparency has profoundly altered how browsers, site owners, and relying parties are able to\ndetect and respond to mis-issuance, and importantly, gives new tools to mitigate the damage caused\nwhen a CA no longer complies with community expectations and browser programs,\u201d Sleevi said online\nannouncing the 2017 goal. \n\n\u201cThe penalty for having an unqualified certificate is that Chrome doesn\u2019t display the nice green\nbanner that CT certificates generally have,\u201d Beattie said. \u201cWhat they are planning on doing in a\nyear is marking all non-CT certificates as untrusted. That\u2019s going to be a real motivator to get\npeople to get certificates that are CT qualified.\u201d \n\nOnce implemented, Certificate Transparency would only impact Google\u2019s Chrome browser. When a Chrome\nuser visited a website that didn\u2019t use a CT cert, an \u201cuntrusted\u201d alert would warn the visitor the\ndomain could not be verified as having a known and registered owner. \n\n\u201cThis will not impact Firefox, Safari or Edge browsers unless they implement some type of CT\nvalidation,\u201d said Bruce Morton, director of certificate services with EnTrust. But, he said, with\nChrome market share hovering at 60 percent, most mobile and desktop browser sessions will be\nimpacted. \n\nExperts say by tightening rules around certificates issued to websites, Google is hoping to reduce\nthe number of certificate authorities that have been lax about whom they issue certificates to. In\nthe past, a number of certificate authorities have issued certs to the wrong websites creating\nopportunities for criminals to spoof a domain certificate as part of a broader man-in-the-middle and\nwebsite spoofing attacks. \n\nThe move has been viewed as a welcome improvement to the existing framework that can easily be\nabused by hackers,\u00a0Morton said. Nevertheless, there have been some who have expressed hesitance when\nit comes to registering all their external and internal domain names inside one publicly accessible\nrepository. \n\n\u201cOne of the big issues of doing CT logging and the exposure of domain name information both outside\nand especially inside the enterprise,\u201d Morton said. \u201cMany of these companies would just assume keep\nthis information private.\u201d \n\nSleevi said Google is encouraging any certificate authority participants with concerns about the CT\nvalidation program to bring grievances forward as soon as possible during the next three months so\nthe IETF and the CA/Browser Forum can address them. \n\n", "polarity": 0.14125874125874124, "subjectivity": 0.48496503496503496, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/google-to-distrust-wosign-startcom-certs-in-2017/121709/", "date": "2016-11-01T00:00:00.000Z", "author": "Chris Brook", "title": "Google to Distrust WoSign, StartCom Certs in 2017", "body": "Google announced Monday that when it ships Chrome 56 in January 2017 the browser will distrust\ncertificates issued by Chinese certificate authoritiesWoSign and StartCom that have made\u00a0headlines\nover the past month. \n\nThe move was somewhat expected after Mozilla announced last week the company would begin distrusting\ncertificates from the same CAs in Firefox 51, also slated to launch in January. \n\nBoth companies have publicly blamed WoSign for failing to adhere to standards expected of\ncertificate authorities.\u00a0Google blamed WoSign\u2019s acquisition of StartCom, a move it tried to sweep\nunder the rug in September \n\nMozilla in particular released a five-page report in late September explaining\u00a0missteps made by\nWoSign and StartCom. the most glaring perhaps the fact the CA was found backdating SSL certificates\nto circumvent a deadline requiring CAs to stop issuing SHA-1 SSL certs by Jan.\u00a01, 2016. \u00a0Microsoft\u2019s\nEdge and Internet Explorer browsers are scheduled to block SHA-1 certs, widely viewed as unstable,\nwhile Firefox and Chrome deprecated the algorithm at the beginning of this year.\u00a0WoSign backdated\ncertificates to December 2015 on 62 occasions for certs it issued in 2016 to get around that\nrestriction, according to Mozilla\u2019s report. \n\nLike Mozilla, Andrew Whalley, a member of the company\u2019s Chrome Security team, said Google was made\naware of WoSign\u2019s malfeasances in mid-August when the company issued a cert for Github\u2019s domains\nwithout Github\u2019s authorization. \n\nAn update on WoSign and StartCom in Google Chrome: https://t.co/uctoVvtaC4 \n\n\u2014 Andrew R. Whalley (@arw) October 31, 2016 \n\n \n\nWoSign\u2019s acquisition of StartCom led to a shakeup in staff, policies, and issuance systems,\nwhich\u00a0directly mislead the browser community, in the eyes of\u00a0Google.\u00a0Whalley claims that the way the\ncompany went about its acquisition of StartCom and the mis-issued certificates were tipping points\nfor the company. \n\n\u201cFor both CAs, we have concluded there is a pattern of issues and incidents that indicate an\napproach to security that is not in concordance with the responsibilities of a publicly trusted CA,\u201d\nWhalley said. \n\nMuch like Mozilla did last week, Google said Monday it will distrust WoSign and StartCom certs\nissued after Oct.\u00a021 in Chrome 56. Certs issued before Oct.\u00a021 will be trusted assuming they comply\nwith Chrome\u2019s policies but Google says it reserves the right to fully distrust all of WoSign\u2019s certs\nin future releases. Adding a sense of urgency to the situation, Whalley adds that in some instances,\nWoSign and StartCom customers may find their certificates don\u2019t work at all in Chrome 56. \n\nUsers are being encouraged to switch to another CA that is trusted by Chrome; any sites still using\nthe old certs will be put on a whitelist and can request to be removed once they\u2019ve transitioned. \n\n\u201cAny attempt by WoSign or StartCom to circumvent these controls will result in immediate and\ncomplete removal of trust,\u201d Whalley warns. \n\nKathleen Wilson, the owner of Mozilla\u2019s CA Certificates Module and Policy, said last week that the\ncompany will remove the affected root certs from its root store at some point \u2013 likely after March\n2017 \u2013 but if WoSign\u2019s new root certs are accepted for inclusion, it could change the removal date\nto coincide with WoSign\u2019s plans to move customers to the new certs. \n\nApple took a similar stance last month when it announced it would no longer trust certificates\nissued by the WoSign\u2019s\u00a0Free SSL Certificate G2 intermediate CA on macOS and iOS. \n\nIt\u2019s still unclear when or if Microsoft, one of the last remaining major root certificate stores,\nwill revoke trust for WoSign and StartCom. The company did not immediately return a request for\ncomment on Tuesday. \n\nBoth WoSign code signing certificates and WoSign EV code signing certificates are still trusted by\nWindows and four of WoSign\u2019s root certificates are still listed as on Microsoft\u2019s Trusted Root\nCertificate Program list.\u00a0Microsoft\u2019s Azure Key Vault, which allows users to save keys and other\ncloud app data, also supports WoSign for SSL certs. \n\n", "polarity": 0.04718091048736211, "subjectivity": 0.34096145789694177, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-turning-tls-1-3-on-by-default-with-firefox-52/121461/", "date": "2016-10-21T00:00:00.000Z", "author": "Chris Brook", "title": "Mozilla Turning TLS 1.3 On By Default With Firefox 52", "body": "When Mozilla ships Firefox 52, on or around March 7, 2017, the browser will come with\nthe\u00a0cryptographic protocol TLS 1.3\u00a0on by default. \n\nMartin Thomson, a principle engineer at Mozilla broke the news Wednesday\u00a0in an email to Mozilla\nDevelopment Platform members. \n\n\u201cTLS 1.3 removes old and unsafe cryptographic primitives, it is built using modern analytic\ntechniques to be safer, it is always forward secure, it encrypts more data, and it is faster than\nTLS 1.2,\u201d Thomson wrote. \n\nTLS 1.3 is the latest version of the Transport Layer Security (TLS) Protocol, the successor to\nSecure Sockets Layer (SSL). It was first drafted more than two years ago, in April 2014, by the\nInternet Engineering Task Force. \n\nThomson said Mozilla tested the standard for incompatibility and didn\u2019t find any issues. The company\nalready has the\u00a0developer tools and UI to support the protocol as well. \n\nMozilla initially implemented support for the protocol with Firefox 49 back in June. But to take\nadvantage of it users had to change a parameter in the browser\u00a0in order to turn it on by default.\nStarting in March, it will ship with draft 16 of the protocol and update to 17 as it becomes\navailable. \n\nGoogle previously implemented TLS 1.3 \u2013 but only in Chrome Canary, its experimental browser, and\nonly if users turn it on in Flags, the browser\u2019s hidden settings section. \n\nTLS 1.3 is still a draft and viewable on the IETF\u2019s website. The consortium is said to be close to\nsettling on a final version of the protocol. The drafts the IETF develops are valid for six months.\nThe current draft expires on March 26, 2017. \n\nCloudflare got an early jump on TLS 1.3 adoption and rolled out the specification to its\u00a0customers\nlast month. \n\nCloudflare\u2019s Head of Cryptography Nick Sullivan lauded the protocol at the time, saying TLS 1.3\n\u201cremoves the \u2018bad crypto smell\u2019 of legacy features, making it less likely that attacks on previous\nversions of the protocol will affect 1.3. \u201d \n\nSullivan said the move makes it easier to configure for server operators, and also results in a\nfaster and better web browsing experience. \n\n\u201cWhen it comes to browsing, we\u2019ve been driving around in a beat-up car from the \u201990s for a while.\nLittle does anyone know, we\u2019re all about to trade in our station wagons for a smoking new sports\ncar,\u201d Sullivan said of TLS 1.3. \n\n", "polarity": 0.08731713688610243, "subjectivity": 0.42946708463949845, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/apple-to-block-wosign-intermediate-certificates/121044/", "date": "2016-10-03T00:00:00.000Z", "author": "Chris Brook", "title": "Apple To Block WoSign Intermediate Certificates", "body": "Apple weighed in on the ongoing WoSign fiasco over the weekend, saying it would soon distrust\ncertificates issued by the Chinese Certificate Authority\u2019s Free SSL Certificate G2 intermediate CA\non macOS. \n\nApple\u2019s decision\u00a0comes several days after Mozilla accused the CA of backdating SHA-1 certificates to\neffectively bypass restrictions banning certs from being trusted. Mozilla\u2019s CA team said last week\nthat in wake of the discovery, and several other wrongdoings, it was considering blocking the the\nWoSign and its subsidiary StartCom for one year. \n\nIn light of Apple\u2019s decision to outright block a specific intermediate WoSign certificate, it\u2019s\npossible Firefox, which wasn\u2019t exactly concrete in its stance last week,\u00a0could come down harder on\nthe CA after a scheduled\u00a0face to face meeting with the company this week. \n\nIt\u2019s unclear whether the remaining major root certificate stores, Microsoft and Google, will take as\nswift an action as Apple. \n\nIn an advisory from Apple,\u00a0published late Friday, the company said it would block trust for the\nintermediate CA in an upcoming security update. \n\nApple said in the advisory that WoSign experienced \u201cmultiple control failures\u201d in its certificate\nissuance processes\u00a0for\u00a0its Free SSL Certificate G2 intermediate CA. \n\nWhile the company points out that no WoSign root is in the list of Apple trusted roots, the\nintermediate service is used to cross sign cert relationships with StartCom and Comodo to establish\ntrust.\u00a0Apple said it would give current WoSign certificate holders a chance to transition to trusted\nroots, as long as their certs were published to log servers by Sept. 9. \n\n\u201cTo avoid disruption to existing WoSign certificate holders and to allow their transition to trusted\nroots, Apple products will trust individual existing certificates issued from this intermediate CA\nand published to public Certificate Transparency log servers by 2016-09-19. They will continue to be\ntrusted until they expire, are revoked, or are untrusted at Apple\u2019s discretion.\u201d \n\nApple said it would continue its investigation and take further action on WoSign/StartCom trust\nanchors, if necessary. \n\nMozilla denounced the Chinese CA in a report it published last Monday. In addition to backdating\ncerts, Mozilla said WoSign also appears to have mis-issued certs, allowed arbitrary domain names to\nbe included in certs without validating them, and failed to report its acquisition of StartCom last\nmonth. \n\nWoSign closed the\u00a0free SSL certificate issuing service\u00a0in question,\u00a0which was offering functional DV\nSSL certs issued by its root, \u201cWoSign CA Free SSL Certificate,\u201d at least temporarily, last week\namidst the controversy. \n\n \n\nGervase Markham, a software engineer for Mozilla, wrote last week in a post to Mozilla\u2019s dev-\nsecurity-policy email lists that officials from both StartCom and Qihoo 360, a Chinese security firm\nthat has a controlling interest in the company, will meet Tuesday with Mozilla in London and decide\nwhat to do about the situation. \n\nWhile Markham said Monday that Mozilla\u2019s proposal to WoSign last week was just that, a proposal, he\nalso noted that\u00a0he believes the company has a lot of work to do in order to get on steady footing\nagain. \n\n\u201cI currently believe that WoSign would need to make significant technical changes (and perhaps other\nsorts of changes) in order to pass a full security audit from a code auditor,\u201d Markham wrote early\nMonday morning, \u201cIf the time period before the possibility of re-enablement was too short, there\nmight be a temptation to rush this process, which would be in nobody\u2019s interest.\u201d \n\n", "polarity": 0.05497222222222223, "subjectivity": 0.3484444444444445, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-wants-to-drop-wosign-as-trusted-ca/120912/", "date": "2016-09-27T00:00:00.000Z", "author": "Michael Mimoso", "title": "Mozilla Wants to Drop WoSign as Trusted CA", "body": "Mozilla has accused a Chinese Certificate Authority of back-dating SHA-1 certificates to get around\nrestrictions barring deprecated certs from being trusted, and is ready to ban the CA for one year. \n\nThe back-dating is just one of many violations derived after a lengthy investigation of WoSign and\none of its subsidiaries, StartCom. In addition to consistently back-dating SHA-1 certs, WoSign is\naccused of mis-issuing certificates for GitHub to a customer, allowing arbitrary domain names to be\nincluded in certs without validating them, failing to report its acquisition of\u00a0StartCom as CAs are\nrequired to do. A report published Monday by Mozilla lists numerous other infractions that go\nagainst requirements put forth by the CA/Browser Forum\u2019s published baseline requirements. \n\n\u201cMozilla\u2019s CA team has lost confidence in the ability of WoSign/StartCom to faithfully and\ncompetently discharge the functions of a CA,\u201d Mozilla said in its report. \u201cTherefore we propose\nthat, starting on a date to be determined in the near future, Mozilla products will no longer trust\nnewly-issued certificates issued by either of these two CA brands.\u201d \n\nMozilla said it will only distrust newly issued certs to avoid adversely impacting users; both\nWoSign and StartCom have issued a large number of certificates, Mozilla said. Mozilla has started a\npublic comment period on its proposal, including WoSign customers. \n\n\u201cMozilla believes that continued public trust in the correct working of the CA certificate system is\nvital to the health of the Internet, and we will not hesitate to take steps such as those outlined\nabove to maintain that public trust,\u201d Mozilla said. \u201cWe believe that the behavior documented here\nwould be unacceptable in any CA, whatever their nationality, business model or position in the\nmarket.\u201d \n\nThe back-dating of SHA-1 certs was the crux of the Mozilla report published this week. SHA-1 has\nlong been considered a weak hashing algorithm and the major browser makers and leading technology\nproviders have already taken great pains to deprecate it across product lines. Browsers, for\nexample, will no longer accept SHA-1 certs in the near future; Microsoft\u2019s Edge and Internet\nExplorer browsers will block them starting in February. \n\nMozilla\u2019s Firefox and Google Chrome enforce SHA-1 deprecation and will not trust certificates with a\nnotBefore date of Jan. 1, 2016. Mozilla points out that CAs could bypass this restriction by back-\ndating certificates, which it says WoSign did 62 times for certs issued in 2016 that were back-dated\nto December 2015. \n\nMozilla spelled out in its investigation how it spotted an anomalous number of SHA-1 certs issued by\nWoSign on Dec. 20, 2015, a Sunday. This runs counter to the vast majority of other SHA-1 certs\nissued by the company on working days during normal work hours. \n\n\u201cWe think it is highly unlikely that WoSign employees decided to go to work on that particular\nSunday for a marathon 24-hour period and approve an unprecedented number of Type Y certificate\nrequests,\u201d Mozilla said. \u201cWe think it is more plausible that for those certificates, the notBefore\ndate does not reflect the actual date of certificate creation, and that these certificates were\ncreated in 2016 (or the last day of 2015) and back-dated.\u201d \n\n", "polarity": 0.0948635794030531, "subjectivity": 0.3927574618364092, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/microsoft-edge-adds-app-guard-browser-security/120925/", "date": "2016-09-28T00:00:00.000Z", "author": "Tom Spring", "title": "Microsoft Edge Adds App Guard Browser Security", "body": "Microsoft is bringing virtualization to its Edge browser with a security tool called Windows\nDefender Application Guard. The technology, announced this week at Microsoft\u2019s 2016 Ignite\nconference in Atlanta, takes a virtualization-based approach to isolating browser-based attacks from\nthe internet. \n\nWindows Defender Application Guard will be exclusive to enterprise versions of Windows 10 and will\nbe available for preview Oct. 1 via the Windows Insiders program, with general availability slated\nfor 2017. \n\nThe virtualization approach to containing malware inside a browser is different from browsers Google\nand Firefox which rely heavily on sandboxing technology to keep malicious websites from launching\nbrowser-based attacks against targeted systems. \n\n\u201cThis level of protection has never been more important, as the majority of attacks start in the\nbrowser,\u201d wrote Yusuf Mehdi, corporate vice president of Microsoft\u2019s Windows and Devices Group in a\nblog post outlining the technology. \n\nWindows Defender Application Guard works by isolating any site an enterprise administrator hasn\u2019t\nalready whitelisted. Should a user click a link in an email or visit the site through some other\nmeans, Application Guard creates a virtual hardware-based container for the site to run in. \n\nThe virtual container is treated as a new instance of Windows at the hardware layer, describes\nMehdi. That container is an entirely separate copy of the Windows\u2019 kernel and only offers the\nminimum Windows Platform Services required to run Microsoft Edge. This separate copy of Windows has\nno access to a user\u2019s normal operating environment. \n\nShould Edge encounter a malicious attack \u00a0Application Guard will block access to memory, local\nstorage, installed applications and any other corporate network endpoints, Microsoft says. \n\n\u201cThis separate copy of Windows has no access to any credentials, including domain credentials, that\nmay be stored in the permanent credential store,\u201d Mehdi said. \n\nOnce the Application Guard browser session is over the virtual container is destroyed. \u201cThere is no\npersistence of any cookies or local storage when the user is finished,\u201d according to Mehdi. \n\nThis type of protection differs that of other browsers such as Firefox and Chrome that rely on\nsandboxing, essentially isolating the browser from the computer and any changes made by malware. \n\n", "polarity": 0.05806818181818181, "subjectivity": 0.4077272727272727, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/openssl-patches-high-severity-ocsp-bug-mitigates-sweet32-attack/120845/", "date": "2016-09-23T00:00:00.000Z", "author": "Michael Mimoso", "title": "OpenSSL Patches High-Severity OCSP Bug, Mitigates SWEET32 Attack", "body": "A vulnerability in the OpenSSL implementation of the Online Certificate Status Protocol (OCSP) was\npatched this week, closing a denial-of-service weakness in affected servers. \n\nThe patch was the most severe of 14 released yesterday by OpenSSL. \n\nOCSP is an alternative in many cases to Certificate Revocation Lists where a client can use the\nprotocol to ping a server requesting the status of a digital certificate. \n\nThe vulnerability, CVE-2016-6304, can be exploited by a malicious client by sending a large OCSP\nStatus Request extension. \n\n\u201cIf that client continually requests renegotiation, sending a large OCSP Status Request extension\neach time, then there will be unbounded memory growth on the server,\u201d OpenSSL said in its advisory.\n\u201cThis will eventually lead to a denial of service attack through memory exhaustion.\u201d \n\nResearchers from Qihoo 360 of China privately disclosed the vulnerability. \n\n\u201cA server with default configuration would allow unbounded memory allocation of the OCSP ids every\ntime a renegotiation occurs even if the server is not configured with OCSP,\u201d Qihoo 360 said in its\nreport on the bug. \u201cThe OCSP id can, according to the spec, consume up to 65,535 bytes of memory.\nTheoretically, an attacker could continually reneg with the server thus causing unbounded memory\ngrowth on the server up to 64k each time.\u201d \n\nThe vulnerability affects default configurations of OpenSSL 1.1.0 and later; versions prior to\n1.0.1g are not affected, OpenSSL said. OpenSSL 1.1.0 should be upgraded to 1.1.0a, 1.0.2 to 1.0.2i,\nand 1.0.1 to 1.0.1u. \n\n\u201cIn 1.0.2 an attacker could grow the memory usage on the server by approx 16k per reneg as the\nmaximum overall ClientHello size is set to 16,384 bytes,\u201d Qihoo 360 said. \u201cIn version 1.1.0, along\nwith the maximum size of a ClientHello increased to 131,396 bytes, the memory growth would be near\n64k per reneg.\u201d \n\nLinux and BSD distributors Debian, Ubuntu, RedHat/CentOS and FreeBSD have also updated their\nrespective software. \n\nOf the remaining 13 vulnerabilities, patched, 12 were rated low severity by OpenSSL. The other was\nrated moderate severity and could lead to a denial-of-service condition where SSL or TLS would hang\nduring a SSL_peek() call if an empty record is sent. The bug affected OpenSSL 1.1.0 and users are\nurged to upgrade to 1.1.0a. \n\nOpenSSL also mitigated the SWEET32 vulnerability, CVE-2016-2183. Sweet32 was disclosed in August and\naffected 64-bit ciphers such as Triple-DES (3DES) and Blowfish and could allow an attacker to\nrecover authentication cookie data from 3DES traffic, and usernames and passwords from OpenVPN\ntraffic, which is secured by Blowfish. \n\nAs expected, OpenSSL moved 64-bit ciphers from the high cipherstring group to medium in OpenSSL\n1.0.1 and 1.0.2. OpenSSL 1.1.0 disables these ciphersuites by default. \n\nThe attack is a collision attack against these ciphers in CBC mode, or cipher block chaining; 64-bit\nciphers are still supported in TLS, IPsec, SSH and other protocols. The researchers said that 3DES\nsupport for HTTPS servers that show in Alexa\u2019s top website list hovers between 1 percent and 2\npercent of traffic on Firefox, Internet Explorer, Chrome and Android 5.0 integrated browser. \n\nSWEET32 is one of the first relatively practical attacks against 64-bit suites, and can be executed\nwith the resources at the disposal of a nation-state or well stocked criminal enterprise. \n\n", "polarity": 0.06619047619047617, "subjectivity": 0.32939484126984125, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/hancitor-downloader-abusing-apis-powershell-commands/120868/", "date": "2016-09-26T00:00:00.000Z", "author": "Chris Brook", "title": "Hancitor Downloader Abusing APIs, PowerShell Commands", "body": "Developers behind the malicious downloader Hancitor have bolstered the malware again, this time with\nnew delivery approaches\u00a0that make it more difficult to detect. \n\nThe downloader is still spread through malicious attachments, and distributing\u00a0malware designed to\nsteal data, such as\u00a0Pony and Vawtrak, but researchers said\u00a0the way that Hancitor\u2019s payload is\ndelivered\u00a0is\u00a0different than from previous iterations. \n\nTwo\u00a0FireEye researchers, Ankit Anubhav and Dileep Kumar Jallepalli, said\u00a0the downloader has shifted\nto using a three-pronged delivery approach, and explained the updates in a blog post on Friday. \n\nOne technique involves using an uncommon but native Windows API, \u201cCallWindowProc,\u201d to execute\nshellcode. The second method piggybacks on the previous technique and relies on another API callback\nfunction, \u201cEnumResourceTypesA,\u201d to interpret and execute shellcode. As the researchers note, macros\ncan call APIs directly, but it\u2019s not often they run shellcode. \n\nThe third and perhaps\u00a0most interesting technique is rooted in Hancitor\u2019s ability to obscure\nmalicious PowerShell commands.\u00a0When users are\u00a0tricked into enabling macros, they can\u00a0also open the\ndoor to PowerShell command creation, researchers said. \n\n \n\nThe malware combines code fragments \u2013 taken from the section_header of the embedded image \u2013 to\nassemble the command. The attackers use a tiny font, size 1, to obscure the PowerShell text, making\nit even more difficult to notice, researchers claim. \n\nFrom there the PowerShell obtains a payload from\u00a0the\u00a0attacker-controlled website in .ZIP format and\nuses a function to unzip it. \n\nAssembling a PowerShell command on the fly like this is an excellent way to evade basic standard\nmethods of detection, usually applied to macros forms, the two write. \n\nAfter downloading the executable, code deletes the archive to remove any trace of it, and executes\nit to download the Pony password stealer and the Vawtrak Trojan. \n\nThis iteration of the Pony stealer allows for the theft of autocomplete Intelliforms data, such\nas\u00a0passwords stored in Internet Explorer\u2019s system registry, in addition to\u00a0passwords saved in\nFirefox. According to Anubhav and Jallepalli code is also present in Pony that allows for the theft\nof Microsoft Outlook data. \n\nHancitor has been around for about two years but disappeared for a spell last year. Researchers with\nProofpoint determined that Hancitor was back from\u00a0its\u00a0lengthy hiatus\u00a0in May and was pushing Pony and\nVawtrak. \n\nResearchers from Palo Alto Networks corroborated that stance in August, noting that one variant it\nsaw was using native API calls within Visual Basic \u2013 \u201cCallWindowProcA\u201d \u2013 to decrypt embedded malware\nfrom Word documents. \n\nThat Hancitor was relying on embedded executables, something that normally trips antivirus programs,\nwas of interest to Ryan Olson, a researcher on Palo Alto\u2019s Unit 42 at the time. \n\n\u201cWhen you have embedded code inside an Office document you open up more risk of being detected by an\nantivirus program,\u201d Olson told Threatpost in August, \u201cwith Hancitor the code is embedded in the VB\nthat encrypts it in a way that the AV isn\u2019t going to find it.\u201d \n\nTo better evade detection, it appears\u00a0Hancitor\u2019s authors have elected to stick with the\nCallWindowProc API \u2013 it\u2019s clearly working \u2013 and add another API (\u201cEnumResourceTypesA\u201d) and a\nPowerShell command. \n\nWhile delivery of the payload has evolved over the last few months, the malware is still being\nspread through malicious attachments in phishing emails purporting to be invoices, researchers\nclaim. Like many forms of malware these days, unsuspecting victims still have to enable macros to\nget infected. From there, it downloads and executes Hancitor before going on to drop the additional\ninformation stealing payloads. \n\n", "polarity": 0.119000819000819, "subjectivity": 0.40958230958230957, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-patches-certificate-pinning-vulnerability-in-firefox/120747/", "date": "2016-09-21T00:00:00.000Z", "author": "Michael Mimoso", "title": "Mozilla Patches Certificate Pinning Vulnerability in Firefox", "body": "As expected, Mozilla patched a highly scrutinized flaw in its automated update process for add-ons\nin Firefox, specifically around the expiration of certificate pins. \n\nThe vulnerability allowed attackers to intercept encrypted browser traffic, inject a malicious\nNoScript extension update and gain remote code execution. The flaw extended to the Tor Browser as\nwell; Tor is built from the Firefox code base and was patched last Friday shortly after the bug was\ndisclosed by a researcher known as movrck. \n\nMozilla patched the flaw yesterday in Firefox 49 and in Firefox ESR 45.4. \n\nIn addition to movrck, the bug was also analyzed by researcher Ryan Duff, a former member of U.S.\nCyber Command. Both said exploitation of the vulnerability would be a challenge given the\ncircumstances that must be in place because an attacker would have to steal or forge a TLS\ncertificate and then insert themselves in the traffic, either by running malicious Tor exit nodes or\nvia a man-in-the-middle attack. \n\nThe attacker would then have to look for an add-on update for NoScript, insert their own and gain\nremote control of a compromised machine. Attacks against individuals would be much more difficult\nthan to target Firefox or Tor users at scale. Successful exploits are likely in the realm of state-\nsponsored attackers or resourced criminal operations; movrck, for example, said an attack would\nlikely cost $100,000 to execute. \n\nMozilla said the vulnerability, CVE-2016-5284, occurred in the process used to update Preloaded\nPublic Key Pinning it its releases. Rather than using HTTP Public Key Pinning (HPKP), Mozilla used\nits own static pins that expire periodically. In this case, the pins expired on Sept. 3 and users\nwere exposed to this attack for 17 days. \n\nAs is the case, movrck\u2019s research was serendipitous. As Duff pointed out, had he tried his attack at\nany time other than this 17 day period, it would have failed. \n\nMozilla on Friday admitted to the flaws in its update process and to the expired pins. Mozilla\u2019s\nSelena Deckelmann, a senior manager of security engineering, said the organization was not aware of\nmalicious certs in the wild, though cautioned that Tor users are especially in the line of fire\ngiven that the Tor Browser comes pre-loaded with certain privacy-focused add-ons. \n\nThis scenario of expired pins would happen again two\u00a0more times before the end of this year, Duff\nlearned, with the biggest exposure starting Dec. 17 when Firefox 50 pins were set to expire, but\nwould not be updated until Jan. 24, 2017. The current expiration date in today\u2019s update will carry\nMozilla through to November and it will have until then to address this. \n\nThe certificate pinning vulnerability was rated high severity by Mozilla, which yesterday patched\nfour bugs in Firefox 49 it rated critical. \n\nTwo separate \u201cmemory safety bugs,\u201d CVE-2016-5256 and CVE-2016-5257, were patched, both of which were\nfound internally by Mozilla developers and could expose machines to arbitrary code execution. \n\nAlso patched with a global buffer overflow in\nmozilla::gfx::FilterSupport::ComputeSourceNeededRegions, which occurred when working with empty\nfilters during canvas rendering, Mozilla said. \n\nThe remaining critical flaw was a heap buffer overflow in nsBMPEncoder::AddImageFrame during the\nencoding of image frames to images and could lead to an exploitable crash. This vulnerability, along\nwith CVE-2016-5257, were also rated critical and patched in Firefox ESR 45.4. \n\n", "polarity": 0.029849624060150366, "subjectivity": 0.5441165413533836, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-patching-firefox-certificate-pinning-vulnerability/120694/", "date": "2016-09-19T00:00:00.000Z", "author": "Michael Mimoso", "title": "Mozilla Patching Firefox Certificate Pinning Vulnerability", "body": "Mozilla is expected tomorrow to patch a critical vulnerability in Firefox\u2019s automated update process\nfor extensions that should put the wraps on a confusing set of twists surrounding this bug. The flaw\nalso affected the Tor Browser and was patched Friday by the Tor Project. \n\nThe vulnerability first saw light of day last week when a researcher who goes by the handle movrck\npublished his disclosure. He said that a resourced attacker with the ability to steal or forge a TLS\ncertificate for addons.mozilla.org could put the entire Tor (and Firefox) ecosystem at risk to\ncompromise. \n\nIn explaining the exploit chain required, movrck said an attacker would have to run malicious exit\nnodes on the Tor network putting himself in man-in-the-middle position to intercept update traffic\nfor addons. The attacker would then be able to inject a malicious NoScript update that would be sent\nto a Tor browser, gaining remote code execution. \n\nMovrck said that the attack could be pulled off for about $100,000, a cost well within the reach of\na criminal operation or nation-state attacker. Forging or stealing a TLS certificate is the hard\npart, but it has been done before in 2011 when Iranian hackers compromised Dutch Certificate\nAuthority DigiNotar and obtained valid wildcard certificates for Google, Mozilla, Yahoo and others. \n\nThe twist is that movrck\u2019s discovery was a bit serendipitous, researcher and former U.S. Cyber\nCommand member Ryan Duff said. Duff wrote last week in a post to the Daily Dave mailing list that\nmovrck\u2019s attack against Tor should have failed and his malicious extension should not have loaded\nbecause of Tor\u2019s strict enforcement of certificate pinning. \n\nTor, which is built from the Firefox code base, suffered from Mozilla\u2019s decision to use a static\ncertificate pin list and a HPKP (HTTP Public Key Pinning) pre-load list of pins with the browser.\nThese pins expire and the expiration dates are set, in this case, by Mozilla. Mozilla, however, did\nnot set the expiration data to last until the next Firefox release, which is tomorrow, Duff said.\nThe Firefox ESR pins expired, instead, on Sept. 3 and the regular Firefox release pins expired Sept.\n10, meaning that pinning had not been enforced since. \n\n\u201cIf he had not done this test between Sept . 3 and Sept. 20, it would have failed,\u201d Duff told\nThreatpost. \n\nDuff said exploitation of this vulnerability would be a challenge and likely be limited to a nation-\nstate level of attack. It would be easier to pull off against Tor users at scale, but more difficult\nto target individuals, he said. \n\n\u201cSince pinning fails, you could forge a TLS certificate that reaches CAs built into Firefox,\u201d Duff\nsaid. \u201cIt\u2019s not easy, but it has been done. Then you need to man-in-the-middle the connection to\naddons (addons.mozilla.org), catch an update process in the traffic and put down a malicious\nupdate.\u201d \n\nMozilla on Friday admitted to the flaws in its update process and to the expired pins. Mozilla\u2019s\nSelena Deckelmann, a senior manager of security engineering, said the organization was not aware of\nmalicious certs in the wild, though cautioned that Tor users are especially in the line of fire\ngiven that the Tor Browser comes pre-loaded with certain privacy-focused add-ons. \n\n\u201cWe investigated this and a fix will be issued in the next Firefox release on\u00a0Tuesday, September\n20.\u00a0 We had fixed an issue with the broken automation on the Developer Edition on September 4, but a\ncertificate pinning had expired for users of our Release and Extended Support Release versions,\u201d\nMozilla said in a statement sent to Threatpost. \u201cWe have turned on HPKP on the Add-ons Update\nservice itself so that users will remain protected as part of the background updates performed\nregularly by Firefox.\u201d \n\nAs Duff pointed out in a post-mortem he wrote today, the bug would have cropped up again\u00a0several\nmore times before the end of the year, with the biggest window of exposure starting Dec. 17 when\nFirefox 50 static pins were set to expire and not be updated until five weeks later, Jan. 24, 2017.\nDuff raised the issue in an IRC channel devoted to Tor developers and data compiled by Matt Nordhoff\nshows that the situation has not happened frequently. Firefox ESR pinning, for example, has expired\nonly once before, from July 4-Aug 11, 2015. Tor, meanwhile, did not support static pins until\nversion 5.0 and has not been vulnerable until this most recent release. \n\n\u201cI will never handle anything this interesting again,\u201d Duff said. \n\n", "polarity": -0.005920634920634909, "subjectivity": 0.4286404151404151, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/microsoft-google-to-block-flash-by-default-in-edge-chrome/122542/", "date": "2016-12-15T00:00:00.000Z", "author": "Michael Mimoso", "title": "Microsoft, Google to Block Flash by Default in Edge, Chrome", "body": "The acceleration of Flash\u2019s ride off into the sunset hit top speed with Microsoft on Wednesday\nfollowing up a similar announcement last week from Google that it would block Flash by default in\nthe Edge browser. \n\nGoogle confirmed last Friday that it would be moving to HTML5 by default in Chrome in a measured\nrollout beginning this week with 1 percent of Chrome 55 users. \n\nMicrosoft, meanwhile, described how in the next version of Edge, Flash will be blocked by default on\nsites that support HTML5. \n\n\u201cIn these cases, Flash will not even be loaded, improving performance, battery life, and security,\u201d\nsaid Microsoft\u2019s Crispan Cowan, a former Linux security expert and now longtime member of\nMicrosoft\u2019s security operation. \u201cFor sites that still depend on Flash, users will have the\nopportunity to decide whether they want Flash to load and run, and this preference can be remembered\nfor subsequent visits.\u201d \n\nMicrosoft cautioned that it would regulate how quickly it moves to HTML5 by default across the\nboard. For example, Microsoft said the changes would not immediately impact most popular sites still\nreliant on Flash. \n\n\u201cIn the coming months, we will actively monitor Flash consumption in Microsoft Edge and will\ngradually shorten the list of automatic exceptions,\u201d Cowan said. \u201cAt the end of this process, users\nwill remain in control, and will be able to choose Flash for any site they visit.\u201d \n\nThis summer, Apple and Mozilla also said they would begin to reduce their support of Flash in Safari\nand Firefox respectively. While most of these changes are couched in language of features and\nperformance, the shadow cast by constant reports of serious security vulnerabilities in Flash cannot\nbe escaped. \n\nJust this week, the most recent Flash Player update from Adobe included a patch for a zero-day\nvulnerability under attack. This year, there have also been emergency security updates for Flash in\nApril, May, June and in October, proving that attackers still finding ways to exploit victims\nregardless of improvements to the code and swift patching by Adobe. \n\nIn 2015, Adobe took new measures to secure the weak spots in Flash favored by attacks with\nmitigations added to the software to hold off memory-based attacks. Regardless, a report by security\ncompany Recorded Future released last week pointed out that six of the top 10 vulnerabilities used\nin exploit kits were Flash Player bugs; the report singled out a zero-day patched in October 2015\nthat found its way into seven different exploit kits. \n\nA little more than a year ago, Adobe began internal movement away from Flash and toward HTML5, and\nthat it had renamed Flash Professional to Animate and said it would be Adobe\u2019s preferred platform\nfor HTML5 content development. \n\n\u201cOur customers have clearly communicated that they would like our creative applications to evolve to\nsupport multiple standards and we are committed to doing that,\u201d Adobe said in announcing the move. \n\nAs expected, it\u2019s the browser makers that will truly accelerate Flash\u2019s deprecation. Google, for\nexample, said that HTML5 by default will be enabled for 50 percent of Chrome 56 beta users, and when\nChrome 56 stable is rolled out in February, it will be enabled for all users. \n\n\u201cStarting in January users will be prompted to run Flash on a site-by-site basis for sites that they\nhave never visited before,\u201d said Google\u2019s Eric Deily in a post to the Chromium blog last week. \u201cWe\nwant to avoid over-prompting users, so over time we\u2019ll tighten this restriction using Site\nEngagement Index, a heuristic for how much a user interacts with a site based on their browsing\nactivity. In October all sites will require user permission to run Flash.\u201d \n\n", "polarity": 0.1523212898212898, "subjectivity": 0.3789627039627039, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/exploit-kit-using-csrf-to-redirect-soho-router-dns-settings/112993/", "date": "2015-05-26T00:00:00.000Z", "author": "Michael Mimoso", "title": "Exploit Kit Using CSRF to Redirect SOHO Router DNS Settings", "body": "Attacks targeting small office and home router DNS settings, long a target for network intruders\nseeking to redirect web traffic to malicious sites, have for the first time been included in an\nexploit kit\u2014one that specializes in cross-site request forgery attacks. \n\nAn exploit kit has been spotted by French researcher Kafeine, who on Friday published research about\nthe attacks. At its peak on May 9\u2014after a month-long series of modifications from the attackers that\nincluded better JavaScript obfuscation\u2014traffic from the campaign peaked at almost a\u00a0million hits,\nKafeine said. \n\nThe attackers are driving a lot of traffic from Chrome users in particular, Kafeine said. Such\npharming attacks are particularly dangerous\u2014and have targeted home routers before\u2014putting online\nbanking and other sensitive transactions and communication at risk. The researcher said he hasn\u2019t\nbeen able to determine the extent of any damage, but given the state of router vulnerability\nmanagement, it could be a gold mine. \n\n\u201cThere are fresh exploits inside, and if a user already has trouble updating their software, we can\nguess router update is not something people are doing,\u201d Kafeine said. \u201cThis kind of attack is really\nold, but yes [this is the] first time I\u2019ve seen something with obfuscation, rotating domains and\nlanding going after DNS\u200b.\u201d \n\nResearchers at Kaspersky Lab published a report in September on similar web-based attacks against\nrouters taking place in Brazil. Rather than exploit kits, the attackers relied on phishing emails\nand malicious websites to push code that change home router DNS settings and point them toward\nphishing websites for some of Brazil\u2019s largest banks in an attempt to steal credentials. \n\n\u201cThis is something I hadn\u2019t seen in the attacks I was researching. But this was expected: put\neverything together in a exploit kit is a natural movement from bad guys, as we see an avalanche of\nvulnerabilities in network devices that allows CSRF,\u201d said Kaspersky Lab researcher Fabio Assolini\nof Kafeine\u2019s findings. \n\nAssolini, who lives in Brazil, said hackers in his country are beginning to move in this direction\nas well in terms of using CSRF attacks, but he has yet to see exploit kits or heavy JavaScript\nobfuscation. \n\n\u201cI think the worst scenario is related to attacks that use (remote code execution), exploiting these\nvulnerabilities to change DNS remotely, as there are a lot of devices that are outdated,\u201d Assolini\nsaid, adding that a separate attack in 2011 in Brazil compromised more than four million devices. \n\nSOHO routers are infected in this campaign via drive-by download attacks and malvertising on popular\nwebsites. The attackers\u2019 concentration on Chrome and Chromium users could be because of their\nability to discover local and public IP addresses using tools such as one developed by Daniel\nRoesler called WebRTC-ips. WebRTC is present in Chrome\u2014and Firefox\u2014and allows browsers and mobile\napps to communicate in real time via APIs. Roesler\u2019s tool takes advantage of the fact that WebRTC\nallows requests to STUN servers (Session Traversal Utilities for NAT) that will return IP\ninformation. These use of such requests, Kafeine said, allows an attacker to avoid having to launch\nnoisy shotgun-style attacks. \n\nKafeine explained in a post on his website that he first spotted the attacks in April, expecting at\nthe outset for the payload to be ransomware; instead he saw a cross-site request forgery and related\npharming attacks. CSRF attacks force victims to submit malicious requests on the attackers\u2019 behalf,\nusually on sites where the victim is already logged in. Kafeine said the original exploit was\nwritten in the clear, but inside of a month, had already added obfuscation to the mix among many\nimprovements. \n\nThe code included a long list of routers to target from popular vendors, including D-Link, Belkin,\nAsus, Linksys, Netgear and others. In one example from Kafeine where he \u201cposed\u201d as a vulnerable\nrouter, it was hit with an exploit for a recent D-Link command injection vulnerability\n(CVE-2015-1187), which was made public and patched March 2. \n\n\u201cI guess this attack is pretty effective (the percentage of routers updated in the past two months\nis probably really low),\u201d Kafeine wrote. In the attack, the DNS address was changed to\n185[.]82[.]216[.]86; it has since been changed to 217[.]12[.]202[.93], and always uses Google\u2019s DNS\nas a failover should the first IP fail, Kafeine said. A deeper look at the attack code, he said,\nrevealed exploits for a CVE published in 2008 and another from 2013. \n\n\u201cWe can bet there are a lot more buried in the POST commands dedicated to some of the models,\u201d he\nwrote. \n\nThe risk to users is substantial he said, ranging from financial loss, to click-fraud, man-in-the-\nmiddle attacks and phishing. \n\n\u201cThat depend on what the bad guys\u2019 plans are,\u201d Kafeine said. \u201cThey can stealthily alter traffic of\nall computers in the perimeter, show ad-banners, do some phishing etc\u2026\u201d \n\nThis article was updated to remove references to the Sweet Orange exploit kit. \n\n", "polarity": 0.04583333333333335, "subjectivity": 0.4186781609195402, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/privacy-proponents-rally-in-favor-of-tracking-protection-in-firefox/113130/", "date": "2015-06-03T00:00:00.000Z", "author": "Chris Brook", "title": "Privacy Proponents Rally In Favor of Tracking Protection in Firefox", "body": "Privacy advocates are calling on Mozilla to better deploy Tracking Protection, a technology that\noffers more stringent privacy and speeds up page loads by blocking requests to tracking domains, in\nits Firefox\u00a0browser. \n\nThe functionality has existed in the browser for months but\u00a0the idea of making it a more prominent\nfeature\u00a0began to\u00a0pick up steam a week and a half ago at Web 2.0, a one day workshop held in\nconjunction with the IEEE\u2019s Symposium on Security and Privacy, in San Jose, Calif. A paper\nwritten\u00a0by Monica Chew, a former Mozilla software engineer, and Georgios Kontaxis, a computer\nscience student\u00a0at Columbia University who previously interned at Mozilla, won best paper at\nthe\u00a0conference, and support for the initiative has slowly bubbled up since then. \n\nThe paper, \u201cTracking Protection in Firefox For Privacy and Performance,\u201d (.PDF) was Chew\u2019s last\nproject with Firefox before leaving the company at the beginning of April, and demonstrates how\nbetter implementing the feature could not only result in better privacy, but a better user\nexperience overall. \n\nTracking Protection, prevents any network communication between the browser and unsafe third-party\norigins. The feature, which borrows elements from Disconnect, including its blocklist of known\ntracking domains, has been available in Firefox since January but is currently optional. If enabled,\nChew and Kontaxis found that it could result in a fairly drastic reduction in the number of cookies\nbeing set and faster page load times. \n\nFor their research the two turned on Tracking Protection, combed through Alexa\u2019s top 200 news sites\nand found 67.5 percent fewer HTTP cookies being set. Chew and Kontaxis also experienced a 44 percent\nmedian reduction in page load time and a 39 percent reduction in data usage, something the two\ndirectly attribute to the feature not having to take time to download and render content. \n\nFor one instance, Chew and Kontaxis found that a site like weather.com loaded in 3.5 seconds with\nTracking Protection versus 6.3 without it. The site also only\u00a0triggered 2.8 MB of data usage with\nthe feature, compared to 4.3 MB without. \n\nChew and Kontaxis make a lot of points in the paper but chief among them is\u00a0that the Internet\u2019s\nrevenue model has become muddied by \u201cmisaligned incentives between users, advertisers, and content\nproviders,\u201d something that\u2019s ultimately resulted in what the dub \u201ca race to the bottom.\u201d \n\nOfficials at the Electronic Frontier Foundation echoed Chew\u2019s sentiments on Tuesday, agreeing that\nFirefox developers should enable Tracking Protection and make the functionality easier to use \u2014 even\nif it\u2019s just for users who have enabled Private Browsing mode. \n\nAs it stands currently, Tracking Protection is off by default and buried\u00a0deep in the browser\u2019s\nsettings. Users have to jump through a series of proverbial hoops and ladders, including making\nchanges through Firefox\u2019s about:config section and bypassing a warning to turn it on. \n\n \n\nThe EFF points out the feature isn\u2019t scheduled to be offered to Firefox beta users to testing and\nimprovement anytime soon, and that while Apple and Microsoft include at least some form of anti-\ntracking technology in their browsers, Firefox and Chrome have lagged behind. \n\n\u201cWe eagerly await the day that advertisers respect user\u2019s requests for privacy and for browsers to\nimplement their protections by default,\u201d Noah Swartz, a staff technologist for the EFF\u2019s Tech\nProjects team, wrote Tuesday. \n\nIn the meantime the EFF is again encouraging users to install its Privacy Badger add-on. The\nextension, which the digital rights group released last summer, blocks many silent forms of\ntracking, requires no configuration, and is available for both Firefox and Chrome. \n\nAfter their presentation at Web 2.0, Chew wrote in her personal blog and reflected on her work and\nthe forces at odds between advertising and security, claiming\u00a0it will take a \u201cmajor force to disrupt\nthis ecosystem,\u201d but that she hopes her former employer can be that force. \n\n\u201cI believe that Mozilla can make progress in privacy, but leadership needs to recognize that current\nadvertising practices that enable \u2018free\u2019 content are in direct conflict with security, privacy,\nstability, and performance concerns \u2013 and that Firefox is first and foremost a user-agent, not an\nindustry-agent.\u201d \n\n \n\n", "polarity": 0.18241869918699188, "subjectivity": 0.43109756097560975, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/researchers-hola-fixes-incomplete/113080/", "date": "2015-06-01T00:00:00.000Z", "author": "Michael Mimoso", "title": "Researchers: Hola Fixes Incomplete", "body": "Hola, a popular, free, peer-to-peer service that enables anonymous surfing and access to blocked\nonline resources, said today it has patched vulnerabilities discovered last week that expose its\nmillions of users to possible code execution, remote monitoring and other threats to privacy and\nsecurity. \n\nThe researchers who last week disclosed vulnerabilities in the Hola Unblocker Windows client,\nFirefox and Chrome extensions, and the Hola Android app, however today said that the flaws are still\npresent and that all Hola did was break a vulnerability checker proof-of-concept tool developed by\nthe researchers. \n\nThe flaws, the researchers said, turn Hola into a \u201cpoorly secured botnet\u2014with serious consequences,\u201d\nthey said on the Adios, Hola! website. They add that a half-dozen security issues were identified,\nnot two as claimed by Hola. \n\n\u201cHola also claims that \u2018[vulnerabilities happen] to everyone.\u2019 As we have pointed out from the\nstart, the security issues with Hola are of such a magnitude that it cannot be attributed to\n\u2018oversight\u2019; rather, it\u2019s straight-out negligence,\u201d the researchers said. \u201cThey are not comparable\nto the others mentioned\u2014they are much worse.\u201d \n\nIn an advisory, the researchers describe the vulnerabilities that expose users to information\ndisclosure, local file read, and remote code execution. \n\n\u201cAs Hola users\u2014wittingly, or otherwise\u2013act as exit-nodes for the overlay network, each is capable of\nacting as a Man-in-the-Middle for other users of the free or premium Hola network, or its commercial\n\u2018bandwidth\u2019 service, Luminati, and thereby compromising the privacy and anonymity of their browsing\nand exposing them to further attacks,\u201d the advisory said. \n\nHola CEO Ofer Vilenski conceded today in a blogpost to mistakes he attributed to his company\u2019s rapid\ngrowth. He called the accusations \u201cunjustified\u201d that Hola sells Luminati access to its network for\n$20 per GB and does a shoddy job screening those paying for access and what they\u2019re doing. Chat logs\npublished on adios-hola.org between the researchers and a Hola salesperson allege that the\nsalesperson said certain potentially harmful terms of service are not enforced. \u201cWe have no idea\nwhat you are doing on our platform,\u201d adios-hola quotes the unnamed salesperson. \n\nBeing a free peer-to-peer network, Hola shares its users\u2019 bandwidth with the network, and Vilenski\nsaid the company has changed its website and product \u201cinstallation flows\u201d to make that clear. Users\nwho do not want to share idled resources can pay for Hola Premium. Vilenski also said Hola does not\nmake its users part of a botnet. \n\n\u201cThere was some concern that by selling our VPN services to enterprise customers, we were possibly\nexposing our users to cyber criminal traffic that could get them in trouble (Thus the \u2018botnet\u2019\naccusation),\u201d Vilenski wrote. \u201cThe reality is that we have a record of the real identification and\ntraffic of the Luminati users, such that if a crime is committed, we can report this to the\nauthorities, and thus the criminal is immediately identified. This makes the Hola/Luminati network\nunattractive to criminals \u2013 as opposed to Tor for example, which provides them complete anonymity\nfor free.\u201d \n\nLast week, a distributed denial of service attack against the message board website 8chan, however,\ndid take advantage of the Hola network. The DDoS was tracked back to Luminati, and today Vilenski\nadmitted the hacker passed through the company\u2019s filters. \n\n", "polarity": 0.0041005291005291045, "subjectivity": 0.44365079365079374, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/charter-communications-fixes-website-data-leak-vulnerability/112962/", "date": "2015-05-21T00:00:00.000Z", "author": "Chris Brook", "title": "Charter Communications Fixes Website Data Leak Vulnerability", "body": "Internet-cable-television provider Charter Communications recently fixed an issue with its website\nthat was inadvertently leaking the information of tens of thousands of customers. \n\nCustomers\u2019 payment details, modem serial numbers, device names, account numbers, home addresses,\nwere being\u00a0spilled from the company\u2019s site, charter.com, according to researchers. \n\nEric Taylor, CTO at the\u00a0startup firm, Cinder, and fellow researcher Blake Welsh stumbled upon the\nvulnerability. The two previously discovered a similar bug in Verizon\u2019s online system where\ncustomers\u2019 user IDs, phone numbers, and device names were being exposed. \n\nThe issue with Verizon\u2019s site was reported by Buzzfeed and ultimately closed by the telecom giant\nlast week. \n\nAccording to Fast Company, which interviewed Taylor about the issue, the problem with Charter\u00a0stems\nfrom the fact that cable company identified customers using their IP address. By using a Firefox\nadd-on \u2013 X-Forwarded-For Header \u2013 to do so, an attacker could apparently impersonate a Charter\ncustomer\u2019s IP address as their own. Since Charter keeps customers\u2019 account details under their IP\naddresses, an attacker could easily glean that information. \n\nAccording to Taylor, the technique is worse than the Verizon bug he helped dig up and could even be\nautomated on a larger scale. \n\n\u201cIn theory, anyone with minor programming skills could code an automated program that scans every\nCharter IP and returns the customers billing info,\u201d Taylor told Fast Company. \n\nCharter, based in Stamford, Conn., offers services to nearly 6 million customers across 29 states,\nincluding Texas, California, and New York. \n\nTaylor points out that by using a Charter customers\u2019 IP address, an attacker could make a header\nmodification, visit a Charter URL and then claim they forgot their username. The attacker will\u00a0then\nbe prompted to create a new one and after going through the motions, the\u00a0attacker could eventually\nlearn the name, address, and username of the customer associated with the IP address. \n\nIn fact, by trying to create a username on the site, a form, complete with the users\u2019 last name and\nhome address, pops up. Taylor claims that an attacker could apparently learn more about the user\neither through\u00a0API links or accessing the site\u2019s source code, according to Taylor. \n\nWhile Charter has fixed the issue \u2013 Fast Company notified the company\u00a0and it was fixed within\nseveral hours \u2013 a spokesperson with Charter\u00a0claims the number of customers that were actually\naffected by the issue was fewer than one million and that most of its users use a different version\nof the site. \n\n\u201cThe vast majority of Charter customers use a version of the site on which this security\nvulnerability was not an issue,\u201d the spokesperson told Fast Company, adding that it was continuing\nto look into the issue but that it has \u201cseen no evidence of any password or data hacks.\u201d \n\n", "polarity": 0.09029356060606061, "subjectivity": 0.42007575757575744, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/firefox-38-fixes-13-flaws-ships-with-drm-support/112764/", "date": "2015-05-12T00:00:00.000Z", "author": "Dennis Fisher", "title": "Firefox 38 Fixes 13 Flaws, Ships With DRM Support", "body": "Mozilla has fixed 13 security flaws in Firefox 38, including five critical vulnerabilities. The new\nversion of the browser also includes a feature that enables the use of DRM-enabled video content in\nFirefox, a decision that comes with some controversy. \n\nDRM (digital rights management), the generic name for technologies that are used to restrict the\nconsumption of premium content, is widely seen as a flawed system, and Mozilla officials\nacknowledged that enabling DRM-wrapped content in Firefox was a difficult decision. \n\n\u201cA year ago, we announced the start of efforts to implement support for a component in Firefox that\nwould allow content wrapped in Digital Rights Management (DRM) to be played within the HTML5 video\ntag. This was a hard decision because of our Mission and the closed nature of DRM. As we explained\nthen, we are enabling DRM in order to provide our users with the features they require in a browser\nand allow them to continue accessing premium video content. We don\u2019t believe DRM is a desirable\nmarket solution, but it\u2019s currently the only way to watch a sought-after segment of content,\u201d\nDenelle Dixon-Thayer of Mozilla wrote in a post. \n\n\u201cToday, Firefox includes an integration with the Adobe Content Decryption Module (CDM) to playback\nDRM-wrapped content. The CDM will be downloaded from Adobe shortly after you upgrade or install\nFirefox and will be activated when you first interact with a site that uses Adobe CDM.\u201d \n\nTo help alleviate the potential user pushback on this decision, Mozilla also is offering a version\nof Firefox 38 that doesn\u2019t include the CDM module. The company also has designed a sandbox that\nencompasses the CDM. \n\nOn the security patch side of things, Firefox 38 includes fixes for the five critical flaws, as well\nas five high-risk bugs and two\u00a0moderately rated vulnerabilities. Among the critical bugs is a buffer\noverflow in the way the browser parses compressed XML. \n\n\u201cSecurity researcher Ucha Gobejishvili used the Address Sanitizer tool to find a buffer overflow\nwhile parsing compressed XML content. This was due to an error in how buffer space is created and\nmodified when handling large amounts of XML data. This results in a potentially exploitable crash,\u201d\nthe Mozilla advisory says. \n\nThere is another buffer overflow with SVG content and CSS, as well as use-after-free vulnerability\nthat occurs during some text processing operations. Firefox 38 also fixes a handful of memory safety\nissues. \n\n", "polarity": -0.04163715072805982, "subjectivity": 0.5060507674144038, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/google-research-reveals-profitable-pervasive-ad-injector-ecosystem/112638/", "date": "2015-05-06T00:00:00.000Z", "author": "Dennis Fisher", "title": "Google Research Reveals Profitable, Pervasive Ad Injector Ecosystem", "body": "More than five percent of all unique IP addresses accessing Google sites included some kind of ad\ninjector software, and there are more than 50,000 of those injector browser extensions in use today,\naccording to new research from Google. \n\nThe company conducted the research over the course of several months last year as a way to find out\nmore about the way that the ad injector ecosystem works and help find ways to better defend against\nthem. Ad injectors aren\u2019t always considered outright malicious, though many of them are. Their main\nreason for being is to inject ads into users\u2019 browsers and drive pay-per-click traffic through a\nknot of affiliates, ad networks, and syndicators to sites owned by major advertisers. These\ncompanies typically don\u2019t know that the traffic arriving at their sites is coming from these\nschemes. \n\n\u201cIt all starts with software that infects your browser. We discovered more than 50,000 browser\nextensions and more than 34,000 software applications that took control of users\u2019 browsers and\ninjected ads. Upwards of 30% of these packages were outright malicious and simultaneously stole\naccount credentials, hijacked search queries, and reported a user\u2019s activity to third parties for\ntracking. In total, we found 5.1% of page views on Windows and 3.4% of page views on Mac that showed\ntell-tale signs of ad injection software,\u201d Kurt Thomas of Google\u2019s spam and abuse team wrote in a\npost explaining the results of the research.\u00a0 \n\n\u201cNext, this software is distributed by a network of affiliates that work to drive as many installs\nas possible via tactics like: marketing, bundling applications with popular downloads, outright\nmalware distribution, and large social advertising campaigns. Affiliates are paid a commision\nwhenever a user clicks on an injected ad. We found about 1,000 of these businesses, including\nCrossrider, Shopper Pro, and Netcrawl, that use at least one of these tactics.\u201d \n\nThe ad injectors pull in ads from a bunch of different companies that are the sources of so-called\ninjection libraries. The most well-known of these is Superfish, which rose to infamy earlier this\nyear after researchers discovered it pre-installed on Lenovo laptops and warned that it could be\nused for man-in-the-middle attacks after the password for the root certificate associated with it\nwas cracked. The discovery set off a firestorm in the security and privacy industry and provoked ire\nfrom users, who had no idea the adware was on their machines. \n\nBrowser vendors issued fixes to remove the Superfish root CA from their software. \n\n\u201cLike other SSL interception software, Superfish seeks to add functionality to the Web by\nintercepting secure Web connections and injecting content into Web sites. \u00a0In order to be able to\ninject content into secure connections, it adds a trusted root certificate to the Windows and\nFirefox root stores. \u00a0With this trusted authority in place, Superfish can effectively create a fake\nID for any website, so that it can convince Firefox that the browser is connected to the real\nwebsite \u2014 even though it\u2019s actually connected to Superfish,\u201d Richard Barnes of Mozilla wrote at the\ntime.\u00a0 \n\nGoogle\u2019s research found that nearly 80 percent of all of the injected ads its system detected came\nfrom one of three main ad networks. \n\n\u201cBecause advertisers are generally only able to measure the final click that drives traffic to their\nsites, they\u2019re often unaware of many preceding twists and turns, and don\u2019t know they are receiving\ntraffic via unwanted software and malware. Ads originate from ad networks that translate unwanted\nsoftware installations into profit: 77% of all injected ads go through one of three ad\nnetworks\u2014dealtime.com, pricegrabber.com, and bizrate.com. Publishers, meanwhile, aren\u2019t being\ncompensated for these ads,\u201d Thomas said in his post. \n\nTo conduct the research, Google\u2019s engineers wrote a custom detector for its sites that looked for\ninjected ads. The software found tens of millions of injected ads over the course of the research\nproject, and as a result removed 192 deceptive extensions from the Chrome Web store. Google also\nchanged the way the browser identifies unwanted software and shows users a bold red warning when\nthey\u2019re trying to install such an injector. \n\n\u201cMost recently, we updated our AdWords policies to make it more difficult for advertisers to promote\nunwanted software on AdWords. It\u2019s still early, but we\u2019ve already seen encouraging results since\nmaking the change: the number of \u2018Safe Browsing\u2019 warnings that users receive in Chrome after\nclicking AdWords ads has dropped by more than 95%. This suggests it\u2019s become much more difficult for\nusers to download unwanted software, and for bad advertisers to promote it,\u201d Thomas said. \n\n", "polarity": 0.19279433364254792, "subjectivity": 0.5266330395794682, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-moving-toward-full-https-enforcement-in-firefox/112537/", "date": "2015-05-01T00:00:00.000Z", "author": "Brian Donohue", "title": "Mozilla Moving Toward Full HTTPS Enforcement in Firefox", "body": "The Mozilla Foundation is initiating the process to phase out insecure HTTP connections in the\nFirefox browser. The decision is part of a broader movement to encrypt the Web, which in the case of\nMozilla Firefox, means permitting only encrypted HTTPS browser connections. \n\nMozilla is the developer of Firefox. It accounts for between 12 and 22 percent of the browser market\nshare throughout its various versions. The group has not yet established a timeline for the\ndeprecation of HTTP. \n\nFirefox security lead Richard Barnes says the plan to implement full HTTPS enforcement in the\nbrowser consists of two broad steps. First, the group will select a date, after which new Firefox\nfeatures will be available only to secure, HTTPS-enabled websites. The second step will be to begin\nmaking existing features incompatible with insecure, HTTP sites, particularly features with security\nand privacy implications. \n\nOf course, it\u2019s not altogether clear what constitutes a \u201cnew\u201d feature, so Mozilla plans to work with\nits developer community to clearly define what a new feature is before settling on a hard date.\nPerhaps more complicated will be the decision to start cutting off existing features for HTTP\nconnections. Mozilla acknowledges that it will need to strike a balance between securing and\nbreaking websites, because cutting off HTTP access to critical features will necessarily have a\ndeleterious effect on certain sites. \n\n\u201cWe\u2019re also already considering softer limitations that can be placed on features when used by non-\nsecure sites,\u201d said Barnes yesterday. \u201cFor example, Firefox already prevents persistent permissions\nfor camera and microphone access when invoked from a non-secure website.\u00a0 There have also been some\nproposals to limit the scope of non-secure cookies.\u201d \n\nThe movement toward full SSL adoption on the Web is by no means new. However, revelations of vast,\npervasive and unchecked National Security Agency spying on American citizens have lit a fire under\nthe movement over the past few years. Google announced last year that it would grant search favor to\nsites deploying HTTPS. Earlier this month, the search giant announced it would begin forcing\nencryption on its ad services as well. \n\n", "polarity": 0.011349721706864564, "subjectivity": 0.5612507730364873, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/rombertik-malware-can-overwrite-mbr-if-audited/112608/", "date": "2015-05-04T00:00:00.000Z", "author": "Michael Mimoso", "title": "Rombertik Malware Can Overwrite MBR if Audited", "body": "A new strain of spyware that logs keystrokes and steals data has a destructive side to it,\nunleashing wiper capabilities if it detects it\u2019s being analyzed and audited. \n\nA limited number of samples of the malware, dubbed Rombertik by researchers at Cisco Talos, were\nspotted at the start of the year. That relatively small number indicates it could have been used in\ntargeted attacks at the outset, but Craig Williams, security outreach manager at Cisco, said attacks\nare more widespread now, and are not focused on any particular vertical or geographic location. \n\n\u201cIt sounds clich\u00e9, but this is really a digital arms race and we\u2019re seeing the next evolution of it\nhere,\u201d Williams said. \u201cThey\u2019re no longer content with detect-and-shut-down, now if malware realizes\nit\u2019s being audited, the binary will destroy the system. It\u2019s a simple case of attackers trying to\ndissuade researchers from going after a sample.\u201d \n\nRombertik has a number of unusual and complex features, Williams said, most of which are designed to\nevade detection and analysis. For example, once the malicious executable is launched from a phishing\nor spam message, the malware contains volumes of garbage code that would have to be analyzed (1264Kb\nthat includes 75 images and 8,000 functions that are never used). \n\nLike many other pieces of malware, this one also contains capabilities to detect and evade\nsandboxes. Unlike others that sleep for a predetermined period of time before executing, Rombertik\nwrites a byte of random data to memory 960 million times, Cisco said. Sandboxes cannot differentiate\nthis stall tactic from normal behavior, and also, if all that data is logged, the size of the log\nwould exceed 100Gb and would take a half-hour to write to the hard drive. This is just one of three\nanti-analysis checks, Cisco said. \n\nIf the malware passes those checks, it will install itself in the startup folder and into AppData to\nensure persistence. It will eventually copy the executable a second time and overwrite memory of the\nnew process with the unpacked executable, Cisco said. \n\n\u201cThe unpacking code is monstrous and has many times the complexity of the anti-analysis code. \u00a0The\ncode contains dozens of functions overlapping with each other and unnecessary jumps added to\nincrease complexity,\u201d the Talos report said. \u201cThe result is a nightmare of a control flow graph with\nhundreds of nodes.\u201d \n\nThe malware, however, is not done with its anti-analysis checks. The malware computes a hash of a\nresource in memory and compares it to the unpacked sample, and if there\u2019s been an alteration, it\nwill first attempt to overwrite the Master Boot Record of the physical disk. If that fails, it\ndestroys all the files in the user\u2019s home folder, encrypting each file with a randomly generated RC4\nkey. \n\n\u201cOne of the things that\u2019s interesting about this malware is that it doesn\u2019t have one malicious\nfeature, it\u2019s got several,\u201d Williams said. \u201cAt nearly every turn, it attempts to hang, destroy, or\ntake up storage space of static or dynamic analysis tools. The more samples we see, the more\nproblems companies are likely going to have. [Other attackers] are going to find this effective and\ncopy it.\u201d \n\nMost of the phishing and spam emails pushing Rombertik carry a similar theme of an organization\nmaking a business pitch to work with an enterprise. One sample shared by Cisco shows the attackers\nimpersonating \u201cWindows Corp.\u201d and pitching a business partnership with a semiconductor manufacturer. \n\nThe messages contain an infected attachment in a .zip file. If the user downloads and unzips the\nfile, they will see a document thumbnail, such as a PDF icon, for example. The file is really a .scr\nfile that contains Rombertik. If the malware passes all the checks and executes, it scans running\nprocesses looking for a instances of Chrome, Firefox or Internet Explorer running on the machine and\ninjects itself into the process. The malware hooks API functions that handle plaintext data, Cisco\nsaid, and reads anything typed into the browser before it\u2019s encrypted and sent over HTTPS. Data such\nas usernames, passwords, account numbers and more are at risk. \n\nRombertik indiscriminately targets data, just stealing as much data as it can from the victim, which\nis Base64 encoded and sent to the attacker\u2019s command and control server. Cisco listed one domain in\nits report: www[.]centozos[.]org[.]in/don1/gate.php. \n\n\u201cWhen we first observed it at the beginning of the year, it was fairly unknown and had almost zero\ndetection rates,\u201d Williams said. \u201cToday\u2019s there\u2019s a decent amount of detection for it, and at this\npoint, it\u2019s just being sent out shotgun style.\u201d \n\n", "polarity": 0.06385930735930737, "subjectivity": 0.42703896103896105, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-to-remove-turkish-ca-from-firefox-trust-store/112445/", "date": "2015-04-28T00:00:00.000Z", "author": "Dennis Fisher", "title": "Mozilla to Remove Turkish CA From Firefox Trust Store", "body": "Mozilla is removing a Turkish root CA from the Firefox\u00a0trust store, not because of a compromise or a\nmistakenly issued certificate, but because the certificate authority hasn\u2019t lived up to the audit\nrequirements Mozilla has for trusted CAs. \n\nLike other browser vendors, Mozilla has a lengthy policy that sets out the requirements for CAs to\nbe included in the trust store for its browser. That trust store is the heart of the way that users\ninteract with secure sites, email servers and other entities that require trusted certificates. Each\nbrowser includes a default set of CAs and root certificates that the browser trusts and historically\nit\u2019s been quite rare for browser vendors to remove a CA. But in the last few years, a series of\nattacks on CAs, compromises and certificate thefts has led to a handful of such incidents. \n\nBut this move by Mozilla is one of the few public incidents in which a browser vendor has removed a\nroot CA for not meeting the policy requirements. The CA in this case is\u00a0e-Guven Elektronik Bilgi\nGuvenligi A.S. in Turkey. \n\n\u201cThe integrity of the secure Web depends on CAs issuing certificates that correctly attest to the\nidentity of websites. Mozilla products ship a default list of CA certificates, which may change with\neach security patch or new version of the product. Inclusion of a CA certificate in Mozilla products\ninvolves a rigorous process and evaluation of the CA\u2019s public-facing policy documentation and audit\nstatements, in order to verify that the CA conforms to the criteria required by Mozilla\u2019s CA\nCertificate Inclusion Policy,\u201d Mozilla\u2019s security team wrote in a blog post. \n\n\u201cThe CA certificates included in the Mozilla list can be marked as trusted for various purposes, so\nthat the software can use the CA certificates to verify certificates for (1) SSL/TLS servers, (2)\nS/MIME email users, and/or (3) digitally-signed code objects, without having to ask users for\nfurther permission or information.\u201d \n\nOne of the requirements is an annual audit of the CA\u2019s procedures and technical capabilities, and\nMozilla officials said that e-Guven\u00a0hasn\u2019t had such an audit since 2013. Mozilla has contacted\ncompany officials a number of times, asking for information or audit statements and has gotten\nnothing in return. \n\nThe e-Guven root CA will be removed from Firefox starting with version 38. \n\n", "polarity": 0.038131313131313134, "subjectivity": 0.3576599326599326, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-reduces-threat-of-export-grade-crypto-to-firefox/121034/", "date": "2016-10-03T00:00:00.000Z", "author": "Michael Mimoso", "title": "Mozilla Reduces Threat of Export-Grade Crypto to Firefox", "body": "Logjam was one of several downgrade attacks discovered in the last 18 months that could\ntheoretically allow a resourced attacker to take advantage of lingering export-grade cryptography to\nread and modify data over a supposedly secure connection. \n\nWhile the severity of this particular attack against the Diffie-Hellman key exchange has been\ndebated, Mozilla last week took steps in the Firefox browser to deny connections to servers using\nweak D-H keys. \n\nMozilla said in a short announcement last week that the move was an effort to shore up the privacy\nof Firefox users by increasing the minimum key size to 1023 bits for TLS handshakes configured to\nuse the Diffie-Hellman key exchange. \n\n\u201cA small number of servers are not configured to use strong enough keys. If a user attempts to\nconnect to such a server, they will encounter the error \u2018ssl_error_weak_server_ephemeral_dh_key,'\u201d\nMozilla engineer David Keeler said. \n\nThe Diffie-Hellman algorithm is used in symmetric encryption ciphers such as AES to set up key\nexchanges. Researchers last May found a weakness in Diffie-Hellman where an attacker could downgrade\nthe strength of the encryption used in an exchange to an export-grade 512 bits. The Logjam attack is\nsimilar to its cousin FREAK, but FREAK attacked RSA key exchanges. \n\n\u201cThe attack affects any server that supports\u00a0DHE_EXPORT ciphers, and affects all modern web\nbrowsers,\u201d wrote a team of researchers in explaining the circumstances enabling the Logjam attack.\nExport cryptography is an artifact of the \u201990s crypto wars where deliberately weakened versions of\ncrypto protocols were insisted upon by the U.S. government on products shipped outside the country.\nSupport for export-grade crypto should have been deprecated long ago, but lingering issues crop up,\nas was the case with the FREAK, Logjam and DROWN attacks. \n\nIt\u2019s believed that, for now, only advanced attackers such as the NSA or other government-backed\ngroups focused on offensive security, could have the computational resources and experience to\nexploit export-grade crypto sufficiently to impact encrypted traffic. \n\n\u201cMillions of HTTPS, SSH, and VPN servers all use the same prime numbers for Diffie-Hellman key\nexchange. Practitioners believed this was safe as long as new key exchange messages were generated\nfor every connection,\u201d the Logjam researchers wrote at the time. \u201cHowever, the first step in the\nnumber field sieve\u2014the most efficient algorithm for breaking a Diffie-Hellman connection\u2014is\ndependent only on this prime. After this first step, an attacker can quickly break individual\nconnections.\u201d \n\nInitially, it was believed that the Logjam attacks could be used to downgrade connections on 80\npercent of servers supporting weak Diffie-Hellman exchanges. Coupled with the belief that a nation\nstate group could break a 1024-bit prime number, the Logjam researchers believed that breaking the\nmost common 1024-bit prime number used by webservers would allow for the interception of traffic\nagainst nearly 20 percent of the web\u2019s top one million HTTPS-protected sites, and a second prime\nwould put 66 percent of VPN servers and 26 percent of SSH servers in harm\u2019s way. \n\nThose numbers, however, were quickly reduced after a reality check by other cryptographers. Paul\nWouters, a core developer at the Libreswan Project said because of the way the researchers scanned\nand tested VPN servers, their projections were likely too high. This was backed up in a comment to a\nThreatpost article on Wouters\u2019 work by Adi Shamir, one of the developers of the RSA crypto\nalgorithm, and one of Shamir\u2019s PhD students Eyal Ronen. \n\nShamir and Ronen said they arrived at the same conclusions in independent tests against IPsec\nconnections and said the success rate of a hypothetical NSA attack on Diffie-Hellman would be lower\nthan original estimates. They also tested HTTPS connections and concluded that the most popular\nsites on the web are the least likely to negotiate Diffie-Hellman handshakes and are rarely of\ninterest to intelligence services. \n\n", "polarity": 0.09078738201689021, "subjectivity": 0.49048435171385985, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-bug-bounty-payouts-going-up/113264/", "date": "2015-06-10T00:00:00.000Z", "author": "Michael Mimoso", "title": "Mozilla Bug Bounty Payouts Going Up", "body": "After admittedly letting its bug bounty rewards get a little stagnant, Mozilla on Tuesday announced\nit was ready to sweeten the pot for researchers contributing vulnerabilities to the program. \n\nRaymond Forbes, an engineer at Mozilla, announced on the company\u2019s website that payoffs were\n\u201cdramatically\u201d going up, and that variable payouts would be made based on severity, ease of exploit\nand quality of the report. \n\nForbes said Mozilla last adjusted its payouts\u2014to $3,000\u2014five years ago. \n\n\u201cWe have dramatically increased the amount of money that a vulnerability is worth,\u201d Forbes said. \u201cOn\ntop of that, we took a look at how we decided how much we should pay out.\u201d \n\nMozilla\u2019s Bug Bounty Committee, Forbes said, readjusted how it decides what submissions are worth,\nand for the first time, decided it will pay out for some bugs that are rated moderate in severity;\nprevious awards for bugs rated critical and high topped out at $3,000. \n\n\u201cThe amount that is paid out will be determined by the committee, but the general range is $500 to\n$2,000,\u201d Forbes said. \u201cThis doesn\u2019t mean that all Moderate vulnerabilities will be awarded a bounty\nbut some will.\u201d \n\nMozilla said the minimum payout for a vulnerability rated high or critical will be $3,000, and the\nbug must be accompanied by a fuzzer report or crash dump. A high quality bug report of a\nvulnerability rated critical or high will pay out as much as $5,000; the report must include\nminimized test cases and clear stack traces, Mozilla said. \n\nFor the most severe bugs, Mozilla said it will reward researchers with at least $7,500 for a high\nquality bug with an exploitable critical vulnerability, such as a remote code execution bug; such a\nreport must include exploit details. \n\nFor new vulnerabilities and exploits, a new form of exploitation, or an \u201cexceptional\u201d vulnerability,\nMozilla said it will pay out $10,000 or more. \n\nThe higher rewards are restricted to demonstrations of new classes of attacks, for example, or\nsecurity feature bypasses, Mozilla said. \n\n\u201cResearch might also uncover extremely severe, complex, or interesting problem areas that were\npreviously unreported or unknown issues,\u201d Mozilla says in its guidelines. Some examples include use-\nafter-free bugs that result in an ASLR bypass, or sandbox escapes. \n\nMozilla also announced that it will recognize its tops bug contributors through the establishment of\nthe Firefox Security Bug Bounty Hall of Fame. The page lists top contributors dating back to 2010. \n\nMozilla is only one of numerous large technology companies and enterprises that have deployed bug\nbounty programs, either independently or through a platform provider such as Bugcrowd or HackerOne.\nResearchers have numerous options when it comes to reporting bugs, either to vendors, bounty\nproviders, or disclosure programs such as the HP Zero Day Initiative. These programs either buy the\nbugs and report them to the affected vendor once customers have been afforded a fix; all of them\ncoordinate disclosure between the researcher and the vendor in question. \n\nWhile bounties aren\u2019t necessarily a recent phenomenon, they do make economic sense, for vendors in\nparticular. Two years ago, a study by the University of California at Berkeley examined Google and\nMozilla\u2019s bounty programs specifically and determined that despite paying out several million\ndollars between them, that total is far less than it would have cost to hire and train employees to\ndiscover the same number of vulnerabilities. \n\n", "polarity": 0.08739842029315713, "subjectivity": 0.4639714817346396, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/information-stealing-stegoloader-malware-hides-in-images/113337/", "date": "2015-06-16T00:00:00.000Z", "author": "Michael Mimoso", "title": "Information-Stealing Stegoloader Malware Hides in Images", "body": "Malware writers aren\u2019t hesitant to do what it takes to protect a campaign and keep it hidden from\ndetection technologies and security researchers. \n\nThe group behind the Stegoloader malware, disclosed Monday by researchers at Dell SecureWorks, has\ntaken to digital steganography to keep its information-stealing code from being seen. Once having\ncompromised a user\u2019s machine, the deployment module grabs a PNG file that contains the malware from\na legitimate hosting site. \n\nSteganography is used to hide information inside another message or image. Malware authors use this\nto hide executable code inside an image file, and in this case, is extracted and run only after a\nnumber of other safety checks are passed. It has been used by several other malware families,\nincluding in some targeted attacks carried out by the Miniduke APT group, the Aulreon rootkit, and\nthe Lurk downloader, exposed by Dell SecureWorks last year. \n\nDespite its information-stealing capability, Dell researchers said they have not seen the malware\nused in targeted attacks, but they don\u2019t dismiss the possibility outright. So far, Dell said it has\nseen victims in the health care, education, and manufacturing industries, yet it has not been spread\nvia exploits or spearphishing emails. Instead, Dell researchers believe victims are being\ncompromised by downloading pirated software from third-party sites, the same propagation strategy\nused with older versions of the malware. \n\n\u201cThe only infection vector I can confirm is through software piracy tools. I suspect once the\nattacker gains a foothold on an interesting network, they can deploy additional modules to spread\nfurther but I have not been able to find such module,\u201d said senior security researcher Pierre-Marc\nBureau. \n\nThe malware primarily is used to steal system information and load additional modules that access\nrecently opened documents, list installed programs, steal browser history and installation files for\nthe IDA development and analysis platform, and drop the Pony password stealing malware. \n\n\u201cBefore deploying other modules, the malware checks that it is not running in an analysis\nenvironment. For example, the deployment module monitors mouse cursor movements by making multiple\ncalls to the GetCursorPos function. If the mouse always changes position, or if it does not change\nposition, the malware terminates without exhibiting any malicious activity,\u201d Dell said in its\nreport. \n\n\u201cIn another effort to slow down static analysis, most of the strings found in the binary are\nconstructed on the program stack before being used,\u201d the report said. \u201cThis standard malware\ntechnique ensures that strings are not stored in clear text inside the malware body but rather are\nconstructed dynamically, complicating detection and analysis.\u201d \n\nThe deployment module lists running processes and if one of two dozen hard coded strings for various\nsecurity tools such as Wireshark, Fiddler and others, are present, it will not execute. Otherwise,\nit connects to a command and control server, encrypts communication, and downloads the PNG file\ncontaining the malware. \n\n\u201cThe extracted data stream is decrypted using the RC4 algorithm and a hard-coded key. Neither the\nPNG image nor the decrypted code is saved to disk, making the malware difficult to find via\ntraditional disk-based signature analysis,\u201d the report said. \u201cThe image\u2019s URL and the RC4 key vary\nin the samples analyzed by CTU researchers.\u201d \n\nOnce the main module takes over\u2014Dell said it lives in memory\u2014it can accept a number of commands from\nthe command and control infrastructure if the compromised machine matches certain criteria making it\nattractive enough of a target. Those commands include kill and stop commands, sending of system\ninformation and browser history for Firefox, Chrome and Internet Explorer, and execution of shell\ncode. \n\nOlder versions of Stegoloader were bundled with pirated software, for example, Dell said, and\ninstalled among other malware, Vundo, a family that installs pop-up advertising, scareware, and\nransomware. \n\n", "polarity": 0.05854626403406891, "subjectivity": 0.49842237708091364, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/details-surface-on-patched-bugzilla-privilege-escalation-flaw/114713/", "date": "2015-09-17T00:00:00.000Z", "author": "Michael Mimoso", "title": "Details Surface on Patched Bugzilla Privilege Escalation Flaw", "body": "Developers and organizations that use the Bugzilla open source bug-tracking system should upgrade to\ncurrent versions after the disclosure of details of a vulnerability in its email-based permissions\nprocess. \n\nThe flaw, CVE-2015-4499, was patched last week in versions 4.2.15, 4.4.10 and 5.0.1 after it was\nreported Sept. 7 to Mozilla by researchers at security company PerimeterX. \n\nAn attacker could manipulate the system to elevate their privileges, putting any vulnerabilities\ntracked in a Bugzilla implementation at risk for exploit. \n\n\u201cUpon successful exploitation of the vulnerability we were granted permissions that would have\npotentially allowed us to view confidential data,\u201d wrote researcher Netanel Rubin today in a post to\nthe company\u2019s website. Rubin said the vulnerability was tested on Mozilla\u2019s Bugzilla.mozilla.org.\n\u201cAll Perl-based Bugzilla versions at the time of the report were vulnerable (2.0 to 4.2.14, 4.3.1 to\n4.4.9, 4.5.1 to 5.0),\u201d he said. \n\nThis is the second security story happening around Bugzilla in the last two weeks. On Sept. 4,\nMozilla reported that an internal and privileged Bugzilla user\u2019s account was compromised using a\npassword taken from a data breach on a separate site. Mozilla confirmed that the attacker likely had\naccess to the privileged account for two years and was able to steal information about recently\npatched Firefox vulnerabilities that were publicly exploited before being fixed. \n\nThe issue uncovered by PerimeterX isn\u2019t as splashy, but could still put organizations using\nvulnerable Bugzilla instances at risk. PerimeterX, in fact, posted a recommendation to take\nvulnerable Bugzilla deployments offline until patched and to comb server logs for new accounts that\ncould have been created using the vulnerability. Rubin called the vulnerability \u201cextremely easy to\nexploit.\u201d \n\nAdmins are able to configure a number of access levels and group settings for users that restrict\nwhat information they can see in the tool; generally access privileges are based via a user\u2019s email\naddress. Email addresses belonging to trusted organizations mean that the user is equally trusted in\nBugzilla, Rubin said. \n\nAn attacker exploiting the now-patched vulnerability could create an account using an email from\nsaid trusted domain, even if they don\u2019t belong to that domain. They could do so because of a\nweakness in the registration process where an overly long number of characters in a login can is\nimproperly handled by the system. An attacker can take advantage of the weakness to append their\ntrue email address to an email trusted by Bugzilla. The system will send the validation link and\ntoken to the attacker\u2019s address instead because of the way it handles the extended login, giving the\nattacker legitimate access to the Bugzilla system. \n\n\u201cThe implications of this vulnerability are severe,\u201d Rubin wrote. \u201cIt could allow an attacker to\naccess undisclosed security vulnerabilities in hundreds of products, in a manner similar to the\nMozilla major data leak in August this year, only multiplied by the thousands of publicly available\nBugzilla deployments. Imagine the hundreds or thousands of zero-days and other security\nvulnerabilities that could potentially be exposed.\u201d \n\n", "polarity": 0.05466764418377322, "subjectivity": 0.5064638318670578, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/corebot-adds-new-capabilities-transitions-to-banking-trojan/114667/", "date": "2015-09-15T00:00:00.000Z", "author": "Chris Brook", "title": "CoreBot Adds New Capabilities, Transitions to Banking Trojan", "body": "As researchers expected it would, CoreBot, the credential-stealing malware that surfaced last month,\nhas added a bevy of new capabilities and reinvented itself as a robust banking Trojan. \n\nResearchers said the malware shares more similarities with Dyre, another high profile banking\nTrojan, than a run of the mill\u00a0data-stealing Trojan. \n\nPerhaps the malware\u2019s most telling characteristic is a new list of 55 URL triggers \u2013 triggers that\nresearchers at IBM\u2019s Security Intelligence claim are tied to a handful of online banking sites in\nthe U.S., Canada, and the U.K. and can\u00a0launch webinjects. \n\nWhen the firm first published research on CoreBot late last month, researchers noted the malware\u2019s\nflexibility, acknowledging its modular design as something that could potentially allow for the easy\naddition of new mechanisms later down the line. \n\nTurns out, it didn\u2019t take long for developers behind the malware to up the Trojan\u2019s ante. \n\nSimilar to how Trojans such as Zeus, Dyre and Dridex work, CoreBot snakes the login information of\nvictims, then tries to trick them into giving away more information. \n\n\u201cIn its previous version, CoreBot was only defined as an information stealer because it did not\npossess the capabilities that would enable it to steal username and password combinations in real\ntime from the victim\u2019s browser. This has changed, and CoreBot now hooks the three most popular\nbrowsers \u2014 Google Chrome, Mozilla Firefox and Internet Explorer \u2014 to be able to monitor browsing,\nsteal data and apply webinjections,\u201d Limor Kessem, a Cybersecurity Evangelist with IBM, wrote of the\nmalware last week. \n\nAccording to Kessem, the malware uses a more-advanced, custom-made webinjection mechanism designed\nfor banking credential theft. The malware has also incorporated a slew of other traits specific to\nbanking Trojans such as man-in-the-middle capabilities, a VNC (virtual networking computing) module,\nand real-time form grabbing. \n\nNow that the malware has matured into a full-fledged banking Trojan, speculation is beginning to\nmount whether or not some of the information it\u2019s stealing is being sold online. In particular,\nresearchers are wondering if a recently registered suspicious looking marketplace is peddling stolen\nCoreBot information. \n\nResearchers with Damballa observed a sample of CoreBot last week communicating with a domain\nregistered to a specific email address, drake.lampado777[at]gmail[.]com, that was also used to\nset\u00a0up another domain, btcshop. Btcshop is being used to sell Socket Secure proxies and other\npersonally identifiable information (PII) \u2013 something that\u2019s led some researchers with the firm to\nbelieve there\u2019s a relationship between the two. \n\nResearchers with Damballa also noticed that two other domains communicating with the same IP\naddress, including one being used as a Carberp command and control server, and another that\u2019s\nhosting the TVSPY remote access tool (RAT), but it\u2019s the btcshop, set up on July 30, that caught\ntheir attention the most. \n\nWhile it\u2019s a tenuous connection \u2014 Damballa isn\u2019t completely certain the same person running CoreBot\nis the same person running TVSPY \u2014 the researchers insist it\u2019s plausible. \n\n\u201cIt would be convenient for the same person or a small group of people to be running malicious\ndomains registered under the email and also running btcshop to sell their collected wares,\u201d a blog\nentry on the company\u2019s Day Before Zero Blog theorized on Friday. \n\n", "polarity": 0.0848016553676931, "subjectivity": 0.40498026082931743, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/android-stagefright-exploit-code-released-to-public/114601/", "date": "2015-09-09T00:00:00.000Z", "author": "Michael Mimoso", "title": "Android Stagefright Exploit Code Released to Public", "body": "Joshua Drake, the researcher who found the so-called Stagefright vulnerability in Android, today\nreleased exploit code to the public, which he hopes will be used to test systems\u2019 exposure to the\nflaw. \n\nThe move comes more than a month after vulnerability details were released in August during\npresentations at the Black Hat and DEF CON security conferences in Las Vegas. Since then, Google has\nreleased updates that block the most serious exploit vector where an attacker could take over an\nAndroid device merely by sending it a malicious MMS message. \n\n \n\nDrake, vice president of platform research and exploitation at Zimperium zLabs, said in July the bug\ncould affect more than 950 million Android devices. He chose not to publish exploit code at the\ntime, giving Google time to push patches to the Android Open Source Project and subsequently to\nhandset manufacturers and carriers. He originally planned to release exploit code on Aug. 24. \n\nGoogle, meanwhile, wasted no time in changing the way it releases security updates for Android,\nannouncing at Black Hat that it would send monthly over-the-air updates its Nexus phones. The move\nwas mirrored by others, including Samsung and LG, and the first Nexus updates included patches for\nStagefright. Silent Circle also patched its Blackphone and Mozilla patched Firefox, which uses\nStagefright code in the browser. \n\nStagefright is the name of the media playback engine native to Android, and the vulnerabilities\nDrake discovered date back to version 2.2; devices older than Jelly Bean (4.2) are especially at\nrisk since they lack exploit mitigations such as Address Space Layout Randomization (ASLR) that are\npresent in newer versions of Android. \n\nThe problem is that Stagefright is an over-privileged application with system access on some\ndevices, which enables privileges similar to apps with root access. Stagefright is used to process a\nnumber of common media formats, and it\u2019s implemented in native C++ code, making it simpler to\nexploit. \n\n\u201cOn some devices, [Stagefright] has access to the system group, which is right next to root\u2014very\nclose to root\u2014so it should be easy to get root from system,\u201d Drake told Threatpost in July. \u201cAnd\nsystem runs a lot of stuff. You\u2019d be able to monitor communication on the device and do nasty\nthings. \n\n\u201cThat process, you would think, would be sandboxed and locked down as much as it could because it\u2019s\nprocessing dangerous, risky code, but it actually has access to the Internet. Android has a group\nenforcement where it allows [Stagefright] to connect to the Internet. This service is on all Android\ndevices. I\u2019d rather not have a service that\u2019s doing risky processing have Internet access.\u201d \n\nAn attacker can send a vulnerable device a specially crafted MMS or Google Hangouts message that\nexploits the flaw. The MMS does not have to be viewed or read, and can be deleted remotely by the\nattacker before the victim is aware the phone ever received it. \n\n\u201cGoogle released new versions of Hangouts and Messenger to block automatic processing of multimedia\nfiles arriving via MMS. We\u2019ve tested these updated versions and are happy to confirm they prevent\nunassisted remote exploitation,\u201d Zimperium said today in a blog post. \u201cHowever, this attack vector\nconstituted only the worst of more than 10 different ways potentially malicious media is processed\nby the Stagefright library. With these other vectors still present, the importance of fixing issues\nwithin the code base remains very high.\u201d \n\nOther researchers, meanwhile, found additional security issues using Stagefright as a starting\npoint, including researcher from Exodus Intelligence that demonstrated one of the patches built and\nsubmitted by Drake was incomplete. Using the updated firmware on a Nexus 5 phone, Exodus\u2019 Jordan\nGruskovnjak developed an MP4 file that bypassed the patch. \n\n\u201cThey failed to account for an integer discrepancy between 32- and 64 bit,\u201d Exodus founder Aaron\nPortnoy told Threatpost. \u201cThey\u2019re not accounting for specific integer types, and [Gruskovnjak] was\nable to bypass the patch with specific values that cause a heap buffer allocated to overflow.\u201d \n\nThis bug has been patched in AOSP as have many of the other Stagefright issues, leading some to\nspeculate that the next OTA update from Google could be one of biggest security fixes ever. \n\n\u201cThe most positive thing about our Stagefright research is waking the ecosystem and forcing it to\nrealize updates must distribute more timely. Industry leading vendors clearly stated that they\nintend to provide security updates on a monthly basis,\u201d Zimperium said. \u201cNow that we are facing\nadditional vulnerabilities, we\u2019ll see for ourselves if our devices get these updates or not. In the\nmeantime, updates addressing the initial set of issues we disclosed continue to roll out to affected\ndevices.\u201d \n\n", "polarity": 0.024472117488246525, "subjectivity": 0.4307478238607272, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-fixes-14-year-old-bug-in-firefox-41/114818/", "date": "2015-09-25T00:00:00.000Z", "author": "Chris Brook", "title": "Mozilla Fixes 14-Year-Old Bug in Firefox 41", "body": "Developers at Mozilla pushed out Firefox 41 this week and brought some much needed relief to Adblock\nPlus users by finally fixing a 14-year old bug in the browser. \n\nThe update addresses a longstanding issue with how the browser handles memory usage by the add-on.\nPreviously the browser created too many \u201cstyle sheets\u201d for Adblock Plus users, something that was\ncausing small spikes in memory usage. \n\nAdblock Plus is far and away Firefox\u2019s most popular extension, boasting over 21,000,000 users,\naccording to Firefox\u2019s add-ons page. The second most popular extension only has 5,000,000 users. \n\nWhile Mozilla doesn\u2019t mention the fix in the release notes for Firefox 41, Ben Williams, Adblock\nPlus\u2019 Operations and Communications Manager acknowledged the update with a post on the company\u2019s\nblog Wednesday. \n\n\u201c[Users] can now rest easier and browse just that much quicker, because last week a Mozilla\ndeveloper patched a 14-year-old bug,\u201d Williams wrote, \u201cNow Firefox uses about the same amount of\nmemory whether you\u2019re running ABP or not.\u201d \n\nAs Williams points out, incredulously, a Bugzilla ticket related to the issue (bug 77999) was\nfirst\u00a0filed more than 14 years ago, on April 27, 2001. According to Nicholas Nethercote, an\nAustralian Mozilla programmer, Cameron McCormack, a Firefox developer patched the issue over the\nsummer by adding data structures that share the results of cascading user agent style sheets. \u00a0It\nwasn\u2019t until Tuesday, when Mozilla released the stable version of Firefox 41, that the patch went\nlive however. \n\nThe latest build of the browser also addresses a handful of bugs, including eight reported by\nsecurity researcher Ronald Crane. The bugs, which were dug up during code inspection, included\nseveral potential memory safety issues according to a Mozilla Foundation Security Advisory. \n\n\u201cThese do not all have clear mechanisms to be exploited through web content but are vulnerable is a\nmechanism can be found to trigger them,\u201d the advisory, which is marked high impact, reads. \n\nIn addition to Crane\u2019s bugs, Firefox 41 also fixes a smattering of other issues, including memory\nsafety errors, use-after-free vulnerabilities, buffer overflows, and other bugs that could let\nattackers run arbitrary code, and gather sensitive data, among other consequences. \n\nThe latest iteration of the browser also incorporates Firefox Hello, the browser\u2019s WebRTC-based\ncommunications system, enhanced IME support, user personalization, and enhanced box-shadow rendering\nperformance. \n\n", "polarity": 0.12513814616755792, "subjectivity": 0.49529411764705883, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/attacker-compromised-mozilla-bug-system-stole-private-vulnerability-data/114552/", "date": "2015-09-04T00:00:00.000Z", "author": "Dennis Fisher", "title": "Attacker Compromised Mozilla Bug System, Stole Private Vulnerability Data", "body": "Security experts constantly tell\u00a0users not to reuse passwords on multiple accounts, but the message\noften falls on deaf ears. Now, officials at Mozilla are finding that advanced users don\u2019t always\nfollow that advice either after discovering that an attacker was able to compromise a Bugzilla\nuser\u2019s account by using a password taken from a data breach on a separate site. \n\nThe attacker may have known who he was hitting, because the target was a privileged user who had\nrestricted access to sensitive information about security bugs in Mozilla products. Bugzilla is the\nbig-tracking system used by Mozilla for its various projects, and while much of the information is\npublic, a subset of it is kept private. Specifically, information about security flaws that are in\nthe process of being fixed or evaluated is kept private until a patch is available or the company\ndecides not to fix it. \n\nMozilla officials say the attacker in this instance may have had access to the victim\u2019s account\nsince September 2013. The earliest confirmed access was in September 2014. Once in the victim\u2019s\naccount, the attacker apparently was able to steal information about a Firefox vulnerability that\nMozilla fixed last month, but only after an exploit for it was seen in the wild. \n\n\u201cThe account that the attacker broke into was shut down shortly after Mozilla discovered that it had\nbeen compromised. \u00a0We believe that the attacker used information from Bugzilla to exploit the\nvulnerability we patched on August 6. \u00a0We have no indication that any other information obtained by\nthe attacker has been used against Firefox users. \u00a0The version of Firefox released on August 27\nfixed all of the vulnerabilities that the attacker learned about and could have used to harm Firefox\nusers,\u201d Richard Barnes of Mozilla said in a blog post\u00a0explaining the attack.\u00a0 \n\nThe bug that Mozilla officials believe the attacker stole information on was patched on Aug. 6. It\nwas related to the way the browser handled\u00a0the same origin policy in some cases. Mozilla found out\nabout the flaw after a user was compromised with it by visiting a Russian news site that was serving\nads with exploit code in them. \n\nMozilla officials said that the attacker who gained access to the Bugzilla system ultimately had\naccess to 185 separate bugs, including 53 severe security vulnerabilities. The good news is that 43\nof those 53 flaws already had been fixed by the time the attacker got to them. But, the remaining 10\nstill were available for exploit. \n\nFrom the Mozilla FAQ on the attack: \n\n\u201cFor the remaining 10 bugs, the attacker had some window of time between when the bug was accessed\nand when it was fixed in Firefox: \n\n2 bugs Less than 7 days 5 bugs Between 7 days and 36 days 3 bugs More than 36 days (131 days, 157\ndays, 335 days) \n\nThe company said that while the attacker could have used any of these vulnerabilities to attack\nusers, the only known attack was the one exploiting the bug patched last month. \n\n\u201cIt is technically possible that any of these bugs could have been used to attack Firefox users in\nthe vulnerability window. One of the bugs open less than 36 days was used for an attack using a\n\u200bvulnerability that was patched on August 6, 2015.\u200b Other than that attack, however, we do not have\nany data indicating that other bugs were exploited,\u201d the FAQ says. \n\n \n\n", "polarity": 0.08895502645502648, "subjectivity": 0.3894179894179894, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/google-mozilla-microsoft-to-sever-rc4-support-in-early-2016/114498/", "date": "2015-09-01T00:00:00.000Z", "author": "Michael Mimoso", "title": "Google, Mozilla, Microsoft to Sever RC4 Support in Early 2016", "body": "Google, Microsoft and Mozilla today announced they\u2019ve settled on a timeframe to permanently\ndeprecate the shaky RC4 encryption algorithm. \n\nAttacks against RC4 are growing increasingly practical, rendering the algorithm more untrustworthy\nby the day. The browser makers plan to sever support for RC4 in late January, early February 2016. \n\nMozilla\u2019s Richard Barnes said the shut-off date should coincide with the release of Firefox version\n44, slated for Jan. 26. Google\u2019s Adam Langley said the Chrome release will reach a stable channel in\neither January or February, but would not specify a date, only that HTTPS servers supporting only\nRC4 will stop working. \n\n\u201cDisabling RC4 will mean that Firefox will no longer connect to servers that require RC4,\u201d Barnes\nsaid in a post to the Mozilla developer platform forum. \u201cThe data we have indicate that while there\nare still a small number of such servers, Firefox users encounter them at very low rates.\u201d \n\nLangley wrote to the security@chromium.org mailing list: \u201cWhen Chrome makes an HTTPS connection it\nhas an implicit duty to do what it can to ensure that the connection is secure. At this point, the\nuse of RC4 in an HTTPS connection is falling below that bar and thus we plan to disable support for\nRC4 in a future Chrome release.\u201d \n\nCurrently, Firefox Beta and Release versions do not restrict RC4, but yet only 0.05 percent and 0.08\npercent of connections to the respective versions use RC4. Google\u2019s numbers are slightly higher for\nChrome, 0.13 percent. \n\n\u201cEven then, affected server operators can very likely simply tweak their configuration to enable a\nbetter cipher suite in order to ensure continued operation,\u201d Langley wrote. \n\nMicrosoft announced end of life for RC4 in Microsoft Edge and Internet Explorer 11, and that it will\nbe disabled by default. \n\n\u201cMicrosoft Edge and Internet Explorer 11 only utilize RC4 during a fallback from TLS 1.2 or 1.1 to\nTLS 1.0. A fallback to TLS 1.0 with RC4 is most often the result of an innocent error, but this is\nindistinguishable from a man-in-the-middle attack,\u201d said David Walp, Senior Program Manager,\nMicrosoft Edge. \u201cFor this reason, RC4 will be entirely disabled by default for all Microsoft Edge\nand Internet Explorer users on Windows 7, Windows 8.1 and Windows 10 starting in early 2016.\u201d \n\nFor more than a decade, researchers have been poking holes in RC4, finding biases in the stream\ncipher\u2019s not-so random bytes used to encrypt plaintext. An attacker with enough time and processing\npower and access to enough TLS requests could figure out plaintext. \n\nIn 2013, research done by the University of Illinois\u2019 Daniel J. Bernstein arrived at a practical\nattack against a known weakness in RC4 that leads to a TLS session compromise, one of the first\nfeasible attacks to be made public. \n\nIn July, Belgian researchers published attacks against RC4 that allows a hacker to capture and\ndecrypt a cookie much quicker than ever before. \n\nThe paper \u201cAll Your Biases Belong To Us: Breaking RC4 in WPA-TKIP and TLS,\u201d written by Mathy Vanhoef\nand Frank Piessens of the University of Leuven, explains the discovery of new biases in the\nalgorithm that led to attacks breaking encryption on websites running TLS with RC4, as well as the\nWPA-TKIP, the Wi-Fi Protected Access Temporal Key Integrity Protocol, in order to recover cookies. \n\nVanhoef and Piessens explain how an attacker can use these findings to decrypt a user\u2019s website\ncookie, for example, that should be secured over an encrypted channel. Their attacks, however, are\nnot limited to cookies. \n\n\u201cThis means the attacker can perform actions under the victim\u2019s name (e.g. post status updates and\nsend messages), gain access to personal information (e.g. to emails and chat history), and so on,\u201d\nthe academics said. \n\n", "polarity": 0.052596015096015095, "subjectivity": 0.47325757575757577, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/upnp-trouble-puts-devices-behind-firewall-at-risk/114493/", "date": "2015-09-01T00:00:00.000Z", "author": "Michael Mimoso", "title": "UPnP Trouble Puts Devices Behind Firewall at Risk", "body": "Security vulnerabilities in UPnP continue to crop up and continue to put millions of home networking\ndevices at risk for compromise. \n\nThe latest was revealed in early August, but prompted an advisory yesterday from the DHS-sponsored\nCERT at the Software Engineering Institute at Carnegie Mellon University. It\u2019s called Filet-o-\nFirewall and it combines a number vulnerabilities and weaknesses in routing protocols and browsers,\nconspiring to expose networked devices behind a firewall to the open Internet. \n\nThe primary target is the UPnP service running on commodity home routers, and according to the\nadvisory and research disclosed by researcher Grant Harrelson, attacks can happen in fewer than 20\nseconds and any router running UPnP is at risk. \n\nExploits against the vulnerability get an attacker on the network, but doesn\u2019t directly put users\u2019\npersonal data at risk. It\u2019s not a big leap, however, for a skilled hacker to find other existing\nvulnerabilities to target other devices or information stored on the network. \n\nThe attacks, Harrelson\u2019s research concludes, work using either Chrome or Firefox to visit a website\nhosting exploit code. If the browser is configured to run JavaScript, the attack will force the\nbrowser to make UPnP requests to their firewall, exposing the network to attack. \n\n\u201cAn attacker that exploits the Filet-O-Firewall vulnerability would be able to expose any/all\ndevices behind a user\u2019s firewall directly to the internet,\u201d says a summary on the Filet-o-Firewall\nsite. \u201cThe process can be made nearly transparent to the end-user without the user installing or\nrunning any application. \u00a0The user must simply browse to the attacker\u2019s website using an affected\nbrowser with JavaScript enabled.\u201d \n\nA list of affected routers is being compiled on the website, and the researcher is asking for help\nin adding vulnerable devices to the list. \n\n\u201cThis vulnerability is logic based and does not reside in a specific piece of code. \u00a0It is a result\nof many different attacks combined into one and designed to target the UPnP service on home\nrouters,\u201d the site says. \n\nAccording to the CERT advisory, routers that implement UPnP don\u2019t randomize UUIDs in the UPnP\ncontrol URL and don\u2019t implement UPnP security standards. Because UPnP was built for use on private\nnetworks, it lacks sufficient authentication; subsequent efforts to build and roll out security\nstandards for the protocol have not been fully implemented, leaving many devices wide open.\nResearcher HD Moore, CSO of security company Rapid7 in 2013 published research that showed that of\n80 million devices responding to UPnP requests on the Internet, up to 50 million were vulnerable to\na handful of attacks. \n\nFrom the CERT advisory: \n\n\u201cPoor adoption of the security standard may broadly open up opportunities for an attacker with\nprivate network access to guess the UPnP Control URLs for many devices currently on the market. If\nthe guess is correct, the attacker may utilize UPnP to make changes to the home router\u2019s\nconfiguration such as opening ports and enabling services that allow an attacker further access to\nthe network. A correct guess is likely, due to many manufacturers\u2019 use of standardized UPnP Control\nURL names.\u201d \n\nSuccessful exploits of the Filet-o-Firewall vulnerability could allow an attacker to open firewall\nports and issue administrative commands on a router. There are no vendor patches for the flaws, yet\nCERT advises a number of workarounds, ranging from disabling UPnP to randomizing UPnP UUID and URLs,\nwhich would mitigate brute-force attacks. \n\n \n\nThe Filet-o-Firewall site spells out an attack step-by-step that would take seconds to pull off on a\nmodern computer. \n\n\u201cIf the attacker has the port number and control URL, it is very feasible to setup a server to\nperform the attack,\u201d the site says. \u201cAgain, the user would have to visit the vulnerable website, but\nthat could be achieved through social engineering, XSS, etc.\u201d \n\n", "polarity": 0.05368217054263567, "subjectivity": 0.44997231450719827, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/google-patches-critical-vulnerabilities-in-chrome-45/114509/", "date": "2015-09-02T00:00:00.000Z", "author": "Michael Mimoso", "title": "Google Patches Critical Vulnerabilities in Chrome 45", "body": "Tuesday turned out to be a busy day for browser makers. \n\nThe three major vendors in the space\u2014Google; Mozilla; and Microsoft\u2014joined arms and announced their\nintent to stop support for the weakened RC4 encryption algorithm starting early next year. \n\nGoogle, having already announced it would pause Flash-based ads in Chrome yesterday, pushed through\nversion 45 of the browser, patching 29 security vulnerabilities in the process. \n\nGoogle also awarded a number of bounties to external researchers for vulnerabilities that were\npatched in Chrome 45. Three cross-origin bypass vulnerabilities in DOM and ServiceWorker were worth\n$7,500 each; two of those bounties were collected by researcher Mariusz Mlynski. Mlynski is a well-\nknown bug hunter in all the major browsers, having cashed in at the 2014 Pwn2Own contest with a\nMozilla bug worth $50,000. \n\nIn all there were 10 bounties paid. From the Chrome blog: \n\n[$7500][516377] High CVE-2015-1291: Cross-origin bypass in DOM. Credit to anonymous. \n\n[$7500][522791] High CVE-2015-1292: Cross-origin bypass in ServiceWorker. Credit to Mariusz Mlynski. \n\n[$7500][524074] High CVE-2015-1293: Cross-origin bypass in DOM. Credit to Mariusz Mlynski. \n\n[$5000][492263] High CVE-2015-1294: Use-after-free in Skia. Credit to cloudfuzzer. \n\n[$3000][502562] High CVE-2015-1295: Use-after-free in Printing. Credit to anonymous. \n\n[$1000][421332] High CVE-2015-1296: Character spoofing in omnibox. Credit to zcorpan. \n\n[$3000][510802] Medium CVE-2015-1297: Permission scoping error in WebRequest. Credit to Alexander\nKashev. \n\n[$3000][518827] Medium CVE-2015-1298: URL validation error in extensions. Credit to Rob Wu. \n\n[$2000][416362] Medium CVE-2015-1299: Use-after-free in Blink. Credit to taro.suzuki.dev. \n\n[$1000][511616] Medium CVE-2015-1300: Information leak in Blink. Credit to cgvwzq. \n\nGoogle last week announced that it would begin on Tuesday pausing Flash ads in Chrome, primarily in\nthe name of performance, but the move was applauded by security experts. Amazon echoed the move,\nalso pausing Flash-based ads on its webpages. \n\nAdobe\u2019s Flash Player is a popular target for hackers given its presence on a number of platforms and\nthe fact that those ads generally run automatically on websites, executing malicious code along with\nthe ad. Google hopes to convince advertisers to convert Flash content to HTML5; Google has begun\nautomatically converting some Flash ads to HTML5. \n\nGoogle said in June its decision to pause Flash ads is based primarily on the need to increase page-\nload speed and battery life on mobile devices. \n\nYesterday, the major browser makers announced that deprecation of RC4 encryption would begin in the\nJanuary-February 2016 timeframe. Mozilla expects the move to be official with the release of Firefox\n44 in late January, while Chrome, Internet Explorer 11 and Microsoft Edge should follow suit by the\nend of February, Google and Microsoft said. \n\nFor more than a decade, researchers have been poking holes in RC4, finding biases in the stream\ncipher\u2019s not-so random bytes used to encrypt plaintext. An attacker with enough time and processing\npower and access to enough TLS requests could figure out plaintext. \n\n", "polarity": 0.11913461538461537, "subjectivity": 0.4156410256410256, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/vulnerabilities-identified-in-dolphin-mercury-android-browsers/114392/", "date": "2015-08-24T00:00:00.000Z", "author": "Chris Brook", "title": "Vulnerabilities Identified in Dolphin, Mercury Android Browsers", "body": "Vulnerabilities exist in two fairly popular alternative browsers for Android \u2013 Dolphin and Mercury \u2014\nthat depending on the browser could result in either remote code execution or\u00a0arbitrary read/write\naccess. \n\nMobile security researcher Benjamin Watson, who blogs under the guise of\u00a0Rotlogix discovered the\nbrowser vulnerabilities and published descriptions, along with proof-of-concept code on both over\nthe weekend. \n\nAssuming the attacker and user are on the same shared network environment, an attacker can exploit\nthe Dolphin vulnerability when the user downloads and applies a new theme for the browser. \n\nThrough some reverse engineering, Rotlogix discovered that Dolphin has the functionality to unzip\nand apply a theme\u2019s file. But by proxying the download traffic, Rotlogix found he could inject a\nmodified theme and in turn, achieve an arbitrary write into the browser\u2019s data directory. Once in,\nhe also found he could create a crafted library that could overwrite the one already on the browser\nand result in what he calls \u201cfull blown code execution.\u201d \n\nRotlogix penned a blog entry on the vulnerability last Friday and claimed Dolphin developers were\naware of the issue. When asked Monday\u00a0when a fix for the vulnerability would arrive, a spokesperson\nwith the company claimed it was working on a fix for the issue. \n\nDolphin, run by San Francisco-based Mobotap, Inc., boasts between 50,000,000 \u2013 100,000,000 installs\nand after Chrome and Firefox is one of the more popular alternative browsers for Android. An update\nfor the browser actually came Monday, but it\u2019s unclear whether the latest version includes a fix for\nthe remote code execution issue at hand. \n\nThe issue with Mercury, an Android browser produced by iLegendSoft, Inc., stems from a combination\nof what Rotlogix describes as an insecure Intent URI scheme implementation and a path traversal\nvulnerability. Mercury\u2019s bugs are mostly rooted in its WiFi Transfer feature. Via a malicious HTML\npage an attacker could \u201cinvoke private Activities,\u201d according to Rotlogix. \n\nIt took a little digging around but through the path traversal vulnerability Rotlogix found he could\nexploit the feature to not only read data from Mercury\u2019s data directory, but also download, upload\nand replace certain files in the browser\u2019s directory. \n\niLegendSoft did not immediately respond to Threatpost\u2019s\u00a0request for comment but in the meantime,\nRotlogix is urging users to remove the browser and use another until the issue is addressed. \n\nThis article was updated on Aug. 24 to include Dolphin\u2019s response. \n\n", "polarity": 0.12815746753246754, "subjectivity": 0.5083820346320347, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/holes-patched-in-online-bookmarking-app-pocket/114353/", "date": "2015-08-19T00:00:00.000Z", "author": "Chris Brook", "title": "Holes Patched in Online Bookmarking App Pocket", "body": "Developers with Pocket recently fixed vulnerabilities that could have allowed users to exfiltrate\ndata from the company\u2019s servers, including sensitive information regarding web services, internal IP\naddresses and more. \n\nPocket, formerly known as Read it Later, is an online bookmarking app that allows users to save and\nmanage articles from the internet to read later, usually\u00a0offline. \n\nClint Ruoho, a security researcher, described the vulnerabilities in a blog post on Tuesday,\nclaiming he first looked into the security of Pocket after learning that developers at Mozilla had\nimplemented an opt-out, non-removable Pocket extension into Firefox back in June. \n\nOne of the first issues that Ruoho noticed was that Pocket in some respect functions as an internal\nnetwork proxy. By making a request via Apache, he discovered that Apache\u2019s mod_status could give him\nlimited information about Pocket users, including \u201cinternal source and destination IP addresses,\nparameters of URLs currently being requested, and query parameters.\u201d \n\nThis meant that if an attacker wanted to, assuming ExtendedStatus was enabled in Apache, they could\ndetermine via a GET request what articles or URLs certain users were saving or reading. \n\n\u201cThe server-status page, when ExtendedStatus was enabled on the backend Pocket server, would return\nthe first 60 characters or so of a GET request,\u201d Ruoho told Threatpost Wednesday, \u201cThis could\ninclude URLs being read or saved by Pocket users.\u201d \n\nAnother issue Ruoho discovered in the app was that he could parse through the metadata from Pocket\u2019s\nbackend servers, which were running on an Amazon Elastic Compute Cloud (EC2) system,\u00a0without\nauthentication. \n\nThis could give an attacker access to the following information that could be used\u00a0in\u00a0portscans for\nHTTP services on localhost to identify web apps, and potentially exploit further issues within\nPocket: \n\nThe last\u00a0and perhaps the most alarming vulnerability Ruoho found is that if someone placed a\u00a0link in\ntheir Pocket\u00a0queue that resulted in a redirect, it could allow an attacker to read any file on the\nfilesystem with root privileges on the back-end server.\u00a0In Ruoho\u2019s case, he stumbled upon the\ncontents of \u201cfile:///etc/passwd,\u201d something that if Pocket hadn\u2019t fixed, could have opened the\nservice up to a slew of other attack vectors. \n\nIt would require a little work but since Pocket uses EC2-Classic style servers, it could have made\nthe servers a prime target for an attacker to\u00a0access. \n\n\u201cThe back-end web servers ran in EC2-Classic networking which would allow any instance in the US-\nEAST-1 region to access them over ports 22 and 80,\u201d Ruoho told Threatpost Wednesday. \n\nRuoho makes it clear in his blog that while they may sound sophisticated, the bugs were relatively\neasy to dig up, acknowledging he only needed a browser, the Pocket mobile app, and access to a\nserver in Amazon EC2 to carry out his exploits. \n\n\u201cNo sophisticated tooling was required to exploit these issues, nor was even basic scripting,\u201d Ruoho\nwrites. \n\nDespite mild protest\u00a0on its\u00a0governance mailing list, Mozilla has opted\u00a0to keep the Pocket\nfunctionality in Firefox. Pocket meanwhile did fix the issues and was cooperative in doing so. \n\nRead It Later, Inc., which owns the app, follows a responsible disclosure policy and while it didn\u2019t\nreward Ruoho with compensation for the vulnerabilities, it was fairly quick to address the issues.\nIn fact, the company fixed some of them within three days. On two occasions during the 23 day review\nprocess Ruoho found bypasses for bugs the company thought it had fixed, but everything was\neventually sorted out and patched in a scant three weeks. \n\n", "polarity": 0.09693223443223445, "subjectivity": 0.37173382173382175, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/stagefright-patch-incomplete-leaving-android-devices-still-exposed/114267/", "date": "2015-08-13T00:00:00.000Z", "author": "Michael Mimoso", "title": "Stagefright Patch Incomplete Leaving Android Devices Still Exposed", "body": "Google today released to open source a new patch for the infamous Stagefright vulnerability found in\n950 million Android devices after researchers at Exodus Intelligence discovered the original patch\nwas incomplete and Android devices remain exposed to attack. \n\n\u201cWe\u2019ve already sent the fix to our partners to protect users, and Nexus 4/5/6/7/9/10 and Nexus\nPlayer will get the OTA update in the September monthly security update,\u201d a Google spokesperson told\nThreatpost. Last week at Black Hat, Google announced that it would begin monthly OTA security\nupdates for Nexus, and that Samsung and LG also committed to providing carriers with regular\nupdates. \n\nThe original four-line code fix for CVE-2015-3824, one of several patches submitted by researcher\nJoshua Drake of Zimperium Mobile Security\u2019s zLabs who discovered the flaw in Stagefright, still\nleads to a crash and device takeover. Jordan Gruskovnjak, a security researcher at Exodus, found the\nproblem with the patch, and Exodus founder Aaron Portnoy today hinted that there could be similar\nproblems in all the patches. \n\n\u201cAccording to public sources, many more issues have been discovered since I reported the bugs in the\nMPEG4 processing. I expect we will see continuing fixes to the Stagefright code base for the coming\nmonths,\u201d Drake said in an email to Threatpost. \u201cThe story is long from over.\u201d \n\nPortnoy said his company notified Google on Aug. 7, the first day of DEF CON in Las Vegas and two\ndays after Drake\u2019s Stagefright presentation at the Black Hat conference. Google has assigned\nCVE-2015-3864 to the issue. \n\nGoogle, in the meantime, patched internal Android code branches and as of yesterday continued to\npush the faulty patches in over-the-air updates to handset makers and carriers. Last Tuesday, Google\nupdated its Nexus mobile phones, versions 4-10, along with the Nexus Player. Silent Circle and\nMozilla were among the first vendors to patch their code as well, distributing it to the Blackphone\nand Firefox browser respectively; Mozilla uses Stagefright in its browser. \n\nIn addition to Nexus devices, Google said it sent the original patches to other mobile providers,\nincluding: Samsung for its Galaxy and Note devices; HTC for the HTC One; LG for the G2, G3 and G4;\nSony for its Xperia devices; and Android One. \n\nThe vulnerabilities affect Android devices going back to version 2.2; newer versions of Android have\nbuilt-in mitigations such as ASLR that lessen the effects of Stagefright exploits. Google said last\nweek that 90 percent of Android devices have ASLR enabled, and that the next release of its\nMessenger SMS app also contains a mitigation requiring users to click on videos in order to play\nthem, rendering one attack vector discovered by Zimperium\u2019s Drake moot. \n\nA report released today by Exodus Intelligence said that Gruskovnjak had doubts about the\ncompleteness of the patch on July 31, but was not able to verify the fix since one had not yet been\ndistributed. Once Gruskovnjak had the updated firmware on a Nexus 5 phone, he developed an MP4\nfile\u2014the simplest attack vector, Drake said, involved sending a vulnerable device a crafted MMS\nmessage that would exploit the vulnerability\u2014that bypassed the patch. \n\n\u201cThey failed to account for an integer discrepancy between 32- and 64 bit,\u201d Portnoy told Threatpost\nthis morning. \u201cThey\u2019re not accounting for specific integer types, and [Gruskovnjak] was able to\nbypass the patch with specific values that cause a heap buffer allocated to overflow.\u201d \n\nThe vulnerability was widely publicized\u00a0by Zimperium before and during Black Hat, not to mention\nthat Google has had the original bug report since April, yet neither party noticed the discrepancy\nin the patch. Portnoy said Exodus submitted a fix of its own. \n\n\u201cEveryone tried coordinated disclosure going back to April, and that did not work so well,\u201d Portnoy\nsaid, adding that he messaged Drake this morning about the issue. \u201cThe thing is, there have been so\nmany eyes on that code, and by hyping it the way they did, malicious people have likely been looking\nas well, and maybe using it for malicious purposes. \n\n\u201cThis is the same vulnerability, just with different values you can still corrupt memory the same\nway as the last time,\u201d Portnoy said. \u201cIt\u2019s just as severe as the first day it was dropped.\u201d \n\nDrake, vice president of platform research and exploitation at Zimperium zLabs, told Threatpost last\nmonth that exploits could be particularly insidious given the fact that an attacker need only use a\nmalicious MMS message\u2014or Google Hangouts message\u2014that could trigger the vulnerability without user\ninteraction, and delete the message before the victim is aware. All an attacker would need, Drake\nsaid, is the device\u2019s phone number. \n\nStagefright on Android devices is over-privileged, and granted system access on some devices; it\nprocesses most common media formats and because it\u2019s implemented in C++, it\u2019s much simpler to\nexploit. \n\n\u201cOn some devices, [Stagefright] has access to the system group, which is right next to root\u2014very\nclose to root\u2014so it should be easy to get root from system,\u201d Drake said. \u201cAnd system runs a lot of\nstuff. You\u2019d be able to monitor communication on the device and do nasty things. \n\n\u201cThat process, you would think, would be sandboxed and locked down as much as it could because it\u2019s\nprocessing dangerous, risky code, but it actually has access to the Internet. Android has a group\nenforcement where it allows [Stagefright] to connect to the Internet. This service is on all Android\ndevices. I\u2019d rather not have a service that\u2019s doing risky processing have Internet access.\u201d \n\n", "polarity": 0.02563880563880564, "subjectivity": 0.4041959749652057, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/firefox-40-begins-warning-users-about-unsigned-add-ons/114237/", "date": "2015-08-12T00:00:00.000Z", "author": "Dennis Fisher", "title": "Firefox 40 Begins Warning Users About Unsigned Add-Ons", "body": "With Tuesday\u2019s\u00a0release of Firefox 40, Mozilla has begun the process of requiring all add-ons for the\nbrowser to be signed. The company announced the forthcoming change in February, and Firefox 40 is\nthe first version to warn users about unsigned add-ons. \n\nThe goal for the change in policy is to protect users from malicious extensions and add-ons, a\nproblem that has arisen in various browsers over the years. Google has taken the approach of only\nallowing\u00a0developers to distribute extensions through its Chrome Web Store. \n\n\u201cHowever, we believe that forcing all installs through our distribution channel is an unnecessary\nconstraint. To keep this balance, we have come up with extension signing, which will give us better\noversight on the add-ons ecosystem while not forcing AMO to be the only add-on distribution\nchannel,\u201d Jorge Villalobos of Mozilla said in a blog post in announcing the change in February. \n\nIn the next version, Firefox will have an option that allows users to enforce signatures on add-ons,\nbut users will be able to set the preference themselves. But starting with Firefox 42, signatures\nwill be enforced on all add-ons in both the beta and release versions of the browser. Developers\nwill have to get the signatures through Addons.mozilla.org. \n\n\u201cFiles submitted for signing will go through an automated review process. If they pass this review,\nthey are automatically signed and sent back to the developer. This process should normally take\nseconds. If the file doesn\u2019t pass review, the developer will have the option to request a manual\nreview, which should take less than two days. This is not the same process that currently applies to\nAMO add-ons, which has been typically slower,\u201d the Mozilla wiki says. \n\nIn addition to the add-on signing, Mozilla also has expanded its warnings about malicious and\nunwanted software in Firefox 40. Users now will see a special warning dialog when they visit a page\nthat contains unwanted software. \n\n\u201cWhen downloading a file of a type that usually contains Windows or Mac executable code (for\nexample, .com, .exe, .msi, .app, .dmg) Firefox asks Google\u2019s Safe Browsing service if the file is\nsafe by sending it some of the download\u2019s metadata (file type, name, size, hash, URL, locale). If\nthe file is flagged as harmful by this service, the download manager will block access to the file\nuntil the user performs a right-click, and unblocks it manually,\u201d Francois Marier, a security and\nprivacy engineer at Mozilla, said in a blog post.\u00a0 \n\n", "polarity": 0.09335839598997495, "subjectivity": 0.4484962406015037, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/facebook-awards-100000-for-new-class-of-vulnerabilities-and-detection-tool/114252/", "date": "2015-08-12T00:00:00.000Z", "author": "Michael Mimoso", "title": "Facebook Awards $100,000 for New Class of Vulnerabilities and Detection Tool", "body": "Facebook tonight awarded a $100,000 prize to a team of Georgia Tech researchers who found a new\nclass of browser-based memory-corruption vulnerabilities and built a corresponding detection\ntechnique. The award brings the social media giant on par with Microsoft and its six-figure payouts\nfor mitigation bypasses and new defensive techniques for those bypasses. \n\nThe award, Facebook\u2019s Internet Defense Prize, was handed out at the USENIX Security Symposium in\nWashington, D.C., and doubles last year\u2019s inaugural payout of $50,000. The prize is an effort to\nrecognize and fund Internet security research in the areas of defense and protection, Facebook said. \n\n\u201cSecurity research in general celebrates offensive research and less attention is paid to people\ndoing the nitty-gritty work required to keep systems safe and whole classes of vulnerabilities less\nlikely to occur,\u201d said Facebook security engineering manager Ioannis Papagiannis. \u201cWe look at work\ntargeting meaningful bugs affecting a lot of people on the Internet.\u201d \n\nGeorgia Tech Ph.D. students Byoungyoung Lee and Chengyu Song, and professors Taesoo Kim and Wenke\nLee are this year\u2019s winners. Their paper,\u00a0\u201cType Casting Verification: Stopping an Emerging Attack\nVector,\u201d explains a newly discovered class of C++ vulnerabilities and introduces CaVeR, a runtime\nbad-casting detection tool. \n\n\u201cIt performs program instrumentation at compile time and uses a new runtime type tracing\nmechanism\u2014the type hierarchy table\u2014to overcome the limitation of existing approaches and efficiently\nverify type casting dynamically,\u201d the researchers wrote in describing CaVeR. \n\nPapagiannis said Facebook hopes the reward money incentivizes the researchers to continue working\nCaVeR and make it accessible and reusable on a greater scale. \n\n\u201cThey are targeting a real-world security problem that has been used to attack high-profile\nvulnerabilities,\u201d he said, pointing to a 2013 Chrome type confusion exploit. \u201cThis addresses an\nimportant problem.\u201d \n\nType casting, the researchers said, is important in enabling polymorphism in C++ programming in\nparticular. \n\n\u201cHowever, if not correctly used, it may return unsafe and incorrectly casted values, leading to so-\ncalled bad-casting or type-confusion vulnerabilities,\u201d the researchers wrote. \u201cSince a bad-casted\npointer violates a programmer\u2019s intended pointer semantics and enables an attacker to corrupt\nmemory, bad-casting has critical security implications similar to those of other memory corruption\nvulnerabilities. Despite the increasing number of bad-casting vulnerabilities, the bad-casting\ndetection problem has not been addressed by the security community.\u201d \n\nFacebook\u2019s Papagiannis said in a statement that C++ supports static and dynamic casts; static casts\nare preferred for performance reasons. \n\n\u201cPeople typically prefer to use static casts because they avoid that overhead, but if you cast to\nthe wrong type using a static cast, the program may end up creating a pointer that can point past\nthe memory allocated to a particular object,\u201d Papagiannis said. \u201cThat pointer can then be used to\ncorrupt the memory of the process.\u201d \n\nCaVeR has already paid dividends for the security community; with it, the researchers found two bad\ncasts in Firefox and another nine in libstdc++, the GNU standard C++ library used in the Chrome\nbrowser; the vulnerabilities have since been patched. \n\nLast year, Facebook paid $50,000 to Johannes Dahse and Thorsten Holz of Ruhr University in Bochum,\nGermany for their paper, \u201cStatic Detection of Second-Order Vulnerabilities in Web Applications.\u201d \n\nPapagiannis said Facebook will meet Dahse and Holz a month from now in London to assess the progress\nthey\u2019ve made on their defensive tool and whether Facebook would consider using it internally.\nPapagiannis points out that Facebook makes no claims on any of the research and encourages teams to\nshare their work with the greater community outside of academia. \n\nPayouts of that size have been rare from reward programs. Microsoft\u2019s defense prize, known as the\nBlue Hat Prize, paid out $200,000 in the summer of 2012 to a Columbia University PhD candidate for\nhis ROP mitigation technology. It has also paid out six-figure prizes to researchers for mitigation\nbypasses, the most recent being a $125,000 award to HP\u2019s Zero Day Initiative team for new\nvulnerabilities that enable ASLR bypass; Microsoft said it would not patch the bugs because they did\nnot affect enough users, prompting HP in June to disclose full details and proof of concept code. \n\nThe mitigation bypass bounty was launched in June 2013 and featured a $100,000 prize for exploit\ntechniques that bypass Windows mitigations such as DEP, ASLR, SEHOP and others. \n\n", "polarity": 0.10517676767676766, "subjectivity": 0.5095012626262626, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-patches-bug-used-in-active-attacks/114172/", "date": "2015-08-10T00:00:00.000Z", "author": "Dennis Fisher", "title": "Mozilla Patches Bug Used in Active Attacks", "body": "UPDATE\u2013Mozilla has released a patch for a vulnerability in Firefox that was discovered when a user\nfound it being\u00a0actively exploited in the wild. \n\nThe bug affects Firefox\u2019s PDF viewer and Mozilla officials said that the exploit being used by\nattackers right now looked for specific files on a targeted machine and uploads them to a remote\nserver. It does not allow for remote code execution, though. Mozilla said the exploit goes after\nWindows, Linux, and Mac machines. \n\n\u201cThe files it was looking for were surprisingly developer focused for an exploit launched on a\ngeneral audience news site, though of course we don\u2019t know where else the malicious ad might have\nbeen deployed. On Windows the exploit looked for subversion, s3browser, and Filezilla configurations\nfiles, .purple and Psi+ account information, and site configuration files from eight different\npopular FTP clients,\u201d Daniel Veditz of Mozilla said in a blog post.\u00a0 \n\n\u201cOn Linux the exploit goes after the usual global configuration files like /etc/passwd, and then in\nall the user directories it can access it looks for .bash_history, .mysql_history, .pgsql_history,\n.ssh configuration files and keys, configuration files for remina, Filezilla, and Psi+, text files\nwith \u201cpass\u201d and \u201caccess\u201d in the names, and any shell scripts.\u201d \n\nA Firefox user discovered the exploit being served by a malicious ad on The Moscow Times web site.\nThe exploit then looks for the sensitive files on the victim\u2019s machine and then uploads them to a\nserver that Mozilla officials say appears to be in Ukraine. \n\n\u201cHowever, this exploit may exist on other websites. We encourage all users to keep their software\nup-to-date by regularly applying security updates,\u201d Veditz said in an email statement. \n\nMozilla has patched the vulnerability in Firefox\u00a039.0.3. The bug doesn\u2019t affect Firefox on Android\nor other products that don\u2019t include the PDF viewer.\u00a0 \n\nThis story was updated on Aug. 11 to add information from Mozilla about the identity of the site\nserving the exploit. \n\n", "polarity": 0.05455182072829132, "subjectivity": 0.387508080155139, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/privacy-badger-1-0-released-with-support-for-eff-do-not-track-policy/114175/", "date": "2015-08-10T00:00:00.000Z", "author": "Dennis Fisher", "title": "Privacy Badger 1.0 Released With Support For EFF Do Not Track Policy", "body": "The EFF has released the 1.0 version of Privacy Badger, its browser extension that blocks the\nhidden\u00a0trackers used on many sites to follow users around the Web. \n\nThe extension has been out in beta form for several months and has drawn praise from privacy\nadvocates for its ability to block trackers automatically. The 1.0 version of the extension has some\nnew features and UI improvements over the beta release, and it also includes support for the new Do\nNot Track policy released by the EFF recently. \n\n\u201cAs you browse the Web, Privacy Badger looks at any third party domains that are loaded on a given\nsite and determines whether or not they appear to be tracking you (e.g. by setting cookies that\ncould be used for tracking, or fingerprinting your browser). If the same third party domain appears\nto be tracking you on three or more different websites, Privacy Badger will conclude that the third\nparty domain is a tracker and block future connections to it,\u201d Cooper Quintin and Noah Swartz of the\nEFF said in a blog post. \n\nThe extension, which is available for both Chrome and Firefox, does not block all embedded domains\nout of hand, as that would compromise some of a site\u2019s key functions. \n\n\u201cFor certain websites, if Privacy Badger were to block an embedded domain entirely it would break\nthe site\u2019s core functionality. For example, if Privacy Badger were to block \u2018licensebuttons.net,\u2019\nCreative Commons buttons would no longer load. In these cases Privacy Badger blocks the domain from\nsetting or receiving any cookies or \u2018referer\u2019 headers, but allows the embedded content to load,\u201d\nQuintin and Swartz said. \n\nPrivacy Badger is designed to give users more power over who tracks their movements around the Web\nand how. Right now, even with the DNT flag set in the browser, users don\u2019t have much control of that\nfunction because sites aren\u2019t obligated to respect the DNT declaration. \n\n\u201cTo be clear, EFF isn\u2019t against websites seeking to build businesses around advertising. More\nbusiness models means a more vibrant Web. But advertising cannot come at the expense of user privacy\nand the inviolable principle of consent. Until the online tracking industry changes its ways, the\nonly option for users is to protect themselves by installing tools such as Privacy Badger,\u201d Quintin\nand Swartz said. \n\n", "polarity": 0.1656565656565657, "subjectivity": 0.4218975468975469, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/eff-adblock-and-others-launch-new-do-not-track-standard/114121/", "date": "2015-08-03T00:00:00.000Z", "author": "Dennis Fisher", "title": "EFF, AdBlock and Others Launch New Do Not Track Standard", "body": "After years of discussions, disagreements, and digressions, the Do Not Track\u00a0header is supported by\nall of the major browsers. But because there\u2019s no real requirement for sites or advertisers to\nrespect it, DNT is not as effective as it could be. Now, the EFF, Disconnect, and several other\norganizations are publishing a new DNT standard they say is stronger and more realistic. \n\nDNT is designed to help protect Web users from unwanted tracking by online ad companies and site\noperators. In practice, the standard is implemented as a header that users\u2019 browsers send to sites\nexpressing their DNT preferences. Sites that adopt DNT essentially pledge not to track or record\nvisitors\u2019 interactions with the site. \n\nThe idea behind DNT is nearly a decade old and the header has been implemented in all of the big\nbrowsers, including Firefox, Chrome, and Internet Explorer. But critics see the standard as weak\nbecause there\u2019s no legal requirement for sites to adopt it or respect users\u2019 preferences. The new\nproposed standard put forth by the EFF and its allies is meant to improve on the existing policy,\nthought it\u2019s still a voluntary policy. Among the other companies involved in the new DNT policy are\nDuckDuckGo, Medium, Mixpanel, and AdBlock. \n\n\u201cWe are greatly pleased that so many important Web services are committed to this powerful new\nimplementation of Do Not Track, giving their users a clear opt-out from stealthy online tracking and\nthe exploitation of their reading history,\u201d said Peter Eckersley, chief computer scientist at the\nEFF. \u201cThese companies understand that clear and fair practices around analytics and advertising are\nessential not only for privacy but for the future of online commerce.\u201d \n\nOne of the main issues standing in the way of the adoption of the current DNT standard is resistance\nfrom the ad industry. Sites and online advertisers rely on the ability to collect information about\ntheir users in order to better target more relevant ads. But many users see ads as nuisances and use\nextensions such as AdBlock to avoid them altogether. That eliminates a major source of revenue for\nmany site operators, something that the members of the EFF\u2019s new coalition say they understand. \n\n\u201cThe failure of the ad industry and privacy groups to reach a compromise on DNT has led to a viral\nsurge in ad blocking, massive losses for Internet companies dependent on ad revenue, and\nincreasingly malicious methods of tracking users and surfacing advertisements online,\u201d said\nDisconnect CEO Casey Oppenheim. \u201cOur hope is that this new DNT approach will protect a consumer\u2019s\nright to privacy and incentivize advertisers to respect user choice, paving a path that allows\nprivacy and advertising to coexist.\u201d \n\nEFF has published information explaining the new standard and what it requires of site operators who\nchoose to adopt it. One key point is that while the standard is voluntary, sites that adopt it\nshould be prepared to live up to that decision. \n\n\u201cCompanies supporting DNT do so voluntarily, but existing law generally requires companies to honor\nsuch voluntary commitments.\u00a0 Under such laws, a company that doesn\u2019t do what it says it will do may\nbe engaging in an unfair, deceptive or misleading trade practice.\u00a0 Consumer protection entities like\nthe Federal Trade Commission and state attorneys general can take action against such deceptive\npractices,\u201d the document says. \n\n", "polarity": 0.11198854908532328, "subjectivity": 0.45162686775589994, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/android-stagefright-flaws-put-950-million-devices-at-risk/113960/", "date": "2015-07-27T00:00:00.000Z", "author": "Michael Mimoso", "title": "Android Stagefright Flaws Put 950 Million Devices at Risk", "body": "Vulnerabilities discovered in the Stagefright media playback engine that is native to Android\ndevices could be the mobile world\u2019s equivalent to Heartbleed. Almost all Android devices contain the\nsecurity and implementation issues in question; unpatched devices are at risk to straightforward\nattacks against specific users that put their privacy, data and safety at risk. \n\nGoogle has patched internal code branches, but devices require over-the-air updates and given the\nshaky history of handset manufacturers and carriers pushing out security fixes, it\u2019s unknown how\nlong it will take to update vulnerable devices, or whether some will ever get fixed. Silent Circle\nhas patched its Blackphone against the vulnerabilities, as has Mozilla, which uses Stagefright code\nin Firefox. \n\nThe flaws have been in Android since\u2014and including\u2014version 2.2; devices running Android versions\nolder than Jelly Bean (4.2) are at greater risk since they lack exploit mitigations that have been\nbuilt into newer versions of the OS. \n\nResearcher Joshua Drake, vice president of platform research and exploitation at Zimperium zLabs,\nsaid exploits could be particularly insidious given the fact that an attacker need only use a\nmalicious MMS message that could trigger the vulnerability without user interaction, and delete the\nmessage before the victim is aware. All an attacker would need, Drake said, is the device\u2019s phone\nnumber. \n\n\u201cIt\u2019s a nasty attack vector,\u201d he said. \n\nThe problem is that Stagefright is an over-privileged application with system access on some\ndevices, which enables privileges similar to apps with root access. Stagefright is used to process a\nnumber of common media formats, and it\u2019s implemented in native C++ code, making it simpler to\nexploit. \n\n\u201cOn some devices, [Stagefright] has access to the system group, which is right next to root\u2014very\nclose to root\u2014so it should be easy to get root from system,\u201d Drake said. \u201cAnd system runs a lot of\nstuff. You\u2019d be able to monitor communication on the device and do nasty things. \n\n\u201cThat process, you would think, would be sandboxed and locked down as much as it could because it\u2019s\nprocessing dangerous, risky code, but it actually has access to the Internet. Android has a group\nenforcement where it allows [Stagefright] to connect to the Internet. This service is on all Android\ndevices. I\u2019d rather not have a service that\u2019s doing risky processing have Internet access.\u201d \n\nDrake estimates that 950 million Android devices could be exposed by the half-dozen bugs and\nimplementation issues he\u2019s expected to detail in a presentation next week during the Black Hat\nconference in Las Vegas. \n\nDrake speculates that Stagefright has its excessive permissions and Internet access to satisfy some\ntypes of digital rights management processing or streaming playback. Drake characterized the\nmetadata processing happening around mpeg4 files as aggressive and promiscuous, behaviors that allow\nan attacker to silently trigger exploits in the background. \n\n\u201cWhen I see promiscuous behaviors, I get nervous,\u201d he said. \u201cIt\u2019s not a good idea to process that\nmuch from untrusted sources.\u201d \n\nAn attacker in possession of their target\u2019s phone number could send an MMS or even a Google Hangouts\nmessage to an affected device that triggers the vulnerability before the victim has a chance to open\nthe message. In some cases, the attack would delete the MMS in question, leaving behind only a\nnotification that a message was sent. Drake said the processing carried out by Stagefright is a bad\ndesign and implementation choice, and that once he dug in and did additional fuzzing and learned\nmore context from prior work, he said he uncovered close to a dozen issues, with half of those being\ncritical remote code execution vulnerabilities; the others were less serious and did not have RCE\nimplications. \n\n\u201cI think it\u2019s a bad idea to do this sort of processing,\u201d Drake said. There are some mitigations, for\nexample, in Google Hangout settings, a user is able to request that MMS messages are not\nautomatically downloaded. \n\n\u201cOlder devices don\u2019t have that option, older devices are more exposed and at risk,\u201d Drake said,\nadding that exploits against Ice Cream Sandwich and Gingerbread are much easier to develop and put\nthose versions at extreme risk. \u201cThey don\u2019t have the hardening measures Android has these days.\u201d \n\n", "polarity": -0.046972369194591405, "subjectivity": 0.432554379776602, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/google-to-expand-use-of-safe-browsing-to-stop-unwanted-software/113824/", "date": "2015-07-16T00:00:00.000Z", "author": "Dennis Fisher", "title": "Google to Expand Use of Safe Browsing to Stop Unwanted Software", "body": "Google is expanding the use of its Safe Browsing mechanism to warn users about a broader variety of\nunwanted software, in addition to the warnings they see regarding phishing pages, malware, and other\nthreats. \n\nSafe Browsing is the service that Google uses to help protect Chrome users from malicious software\nand sites. The service defends against phishing and other threats by checking URLs against a\ndatabase that Google maintains of malicious sites. The system also checks for sites that are\nsuspected of serving malware. Google provides and API for Safe Browsing and it\u2019s used in both\nFirefox and Safari. \n\nThe company said that it is planning to expand the kinds of software that Safe Browsing warns users\nabout. \n\n\u201cIn the coming weeks, these detection improvements will become more noticeable in Chrome: users will\nsee more warnings\u00a0about unwanted software than ever before,\u201d\u00a0Moheeb Abu Rajab and Stephan Somogyi of\nthe Google Safe Browsing team said in a blog post. \n\n\u201cUnwanted software is being distributed on web sites via a variety of sources, including ad\ninjectors as well as ad networks lacking strict quality guidelines. In many cases, Safe Browsing\nwithin your browser is your last line of defense.\u201d \n\nUnwanted software isn\u2019t necessarily malware but can include things such as adware or other apps that\ndon\u2019t perform the function they promised, gather user information without the user\u2019s knowledge, spy\non users\u2019 activities. or perform other unwanted actions. Google officials said that the Safe\nBrowsing service won\u2019t be used to warn users about anything other than dangerous sites. \n\n\u201cWe want to be really clear that Google Safe Browsing\u2019s mandate remains unchanged: we\u2019re exclusively\nfocused on protecting users from malware, phishing, unwanted software, and similar harm. You won\u2019t\nsee Safe Browsing warnings for any other reasons,\u201d Abu Rajab and Somogyi said. \n\n", "polarity": 0.19791666666666666, "subjectivity": 0.4791666666666667, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-disables-flash-in-firefox/113763/", "date": "2015-07-14T00:00:00.000Z", "author": "Dennis Fisher", "title": "Mozilla Disables Flash in Firefox", "body": "As the zero days in Adobe Flash continue to pile up, Mozilla has taken the unusual step of disabling\nby default all versions of Flash in Firefox. \n\nThe move is a temporary one as Adobe prepares to patch two vulnerabilities in Flash that were\ndiscovered as a result of the HackingTeam document dump last week. Both vulnerabilities are use-\nafter-free bugs that can be used to gain remote code execution. One of the flaws is in Action Script\n3 while the other is in the BitMapData component of Flash. \n\nExploits for these vulnerabilities were found in the data taken from HackingTeam in the attack\ndisclosed last week. An exploit for one of the Flash vulnerabilities, the one in ActionScript 3, has\nbeen integrated into the Angler exploit kit already and there\u2019s a module for it in the Metasploit\nFramework, as well. Those realities increase the danger to users, especially those who\u00a0are prone to\nclicking on liks from strangers. \n\nAdobe is expected to patch the Flash zero days this week, but in the interim Mozilla has\nautomatically disabled all versions of the plugin in Firefox as a way to protect users. \n\n\u201cAll versions of Adobe\u2019s Flash Player plugin are currently deactivated by default, until Adobe\nreleases an updated version to address known critical security issues,\u201d Mozilla said on its support\nsite.\u00a0 \n\nThese are the second and third Flash zero days discovered in the HackingTeam cache. On July 6\nresearchers discovered the first Flash bug being used by\u00a0HackingTeam\u2019s intrusion software, which\nAdobe patched quickly. That bug also was incorporated into exploit kits, including Angler, Neutrino,\nand Nuclear. \n\nSecurity experts for years have been encouraging users to disable or remove Flash from their\nmachines because of the constant stream of vulnerabilities. That parade of bugs has made Flash a\nhighly attractive target for attackers, who know that it is the most widely deployed software on the\nWeb, a fact that makes Flash bugs quite valuable. Recent events have renewed the security\ncommunity\u2019s calls for users to abandon Flash, and on Sunday, Facebook CSO Alex Stamos said Flash has\noutlived its usefulness. \n\n\u201cIt is time for Adobe to announce the end-of-life date for Flash and to ask the browsers to set\nkillbits on the same day,\u201d Stamos said on Twitter. \n\n\u201cEven if 18 months from now, one set date is the only way to disentangle the dependencies and\nupgrade the whole ecosystem at once,\u201d Stamos said. \n\n", "polarity": 0.06284722222222221, "subjectivity": 0.4076388888888889, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/flash-player-update-patches-two-hacking-team-zero-days/113776/", "date": "2015-07-14T00:00:00.000Z", "author": "Michael Mimoso", "title": "Flash Player Update Patches Two Hacking Team Zero Days", "body": "Adobe has put the two outstanding Hacking Team Flash Player zero-day vulnerabilities in check. \n\nToday, Adobe released an updated Flash Player that patches CVE-2015-5122 and CVE-2015-5123, two use-\nafter-free bugs uncovered and exploited by the controversial Italian surveillance software vendor.\nThe bugs were found as researchers combed through the 400 Gb of data stolen from Hacking Team and\nposted online July 5. \n\nSince the disclosures, three Flash zero days and an unpatched, publicly exploited Windows kernel\nprivilege escalation vulnerability have been emerged from the Hacking Team cache. Adobe has already\npatched the first Flash zero day, CVE-2015-5119, and it is unknown whether Microsoft will today\npatch the Windows 0day as part of its monthly Patch Tuesday security bulletins. \n\nThe Adobe patches come less than 24 hours after browser vendor Mozilla announced that it had\ndisabled Flash by default in Firefox. Prominent security figures, such as new Facebook CSO Alex\nStamos, have been vocal about Adobe killing off Flash entirely. Flash has long been a favorite\ntarget of criminal and nation-state hackers for its cross-platform ubiquity, and constant spate of\nsecurity vulnerabilities. \n\nCVE-2015-5122, disclosed to Adobe by FireEye, is an ActionScript 3 opaqueBackground use-after-free\nbug, while CVE-2015-5123 is a BitmapData use-after free bug. According to the DHS CERT, both bugs\ncan be exploited by an attacker tricking a visitor into landing on a website hosting an exploit, and\nallow for complete takeover of a compromised machine \n\nExploit kit expert and security researcher Kafeine said the zero day discovered by FireEye has\nalready been integrated into the Angler Exploit Kit, as well as the Metasploit Framework. The first\nzero-day uncovered in the hack was also quickly incorporated into popular exploit kits. \n\nToday\u2019s Flash update, 18.0.0.209, patches versions 18.0.0.203 and earlier for Windows and Macintosh\nsystems, and 18.0.0.204 and earlier for Linux machines. \n\nThe Hacking Team hack was disclosed on July 5 when seemingly all of the company\u2019s internal email,\nproduct specs and sales data was posted at numerous sites. Despite company policy stating the\ncontrary, invoices and sales receipts found in the post-breach data dump show that Hacking Team sold\nits Remote Control System (RCS) tool to sanctioned countries run by oppressive governments, such as\nSudan and Ethiopia. Hacking Team said it has ended its business relationships with these countries.\nRCS is sold to law enforcements and government agencies worldwide as a monitoring tool. \n\nYesterday, Hacking Team renewed its vow to press on as a company and rebuild not only its\ninfrastructure, but RCS from scratch. \n\n\u201cA totally new internal infrastructure is being [built] at this moment to keep our data safe. Of\ncourse, our top priority here has been to develop an update to allow our clients to quickly secure\ntheir current surveillance infrastructure,\u201d said Hacking Team chief operating officer David\nVincenzetti in a statement. \u201cWe expect to deliver this update immediately. This update will secure\nonce again the \u2018Galileo\u2019 version of Remote Control System.\u201d \n\nAdobe today also patched 46 vulnerabilities in Adobe Reader and Acrobat, and two in the Shockwave\nPlayer. \n\nThe Reader and Acrobat updates patch a number of code execution vulnerabilities, in addition to\ninformation disclosure, denial-of-service, and privilege escalation vulnerabilities in versions\n11.0.11 and 10.1.14 and earlier for Windows and Macintosh machines. \n\nThe Shockwave update addresses two memory corruption bugs that lead to code execution in versions\n12.1.8.158 and earlier, Adobe said. \n\n", "polarity": 0.12998405103668265, "subjectivity": 0.48532695374800644, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/firefox-39-out-with-patches-for-four-critical-vulnerabilities/113686/", "date": "2015-07-08T00:00:00.000Z", "author": "Dennis Fisher", "title": "Firefox 39 Out With Patches for Four Critical Vulnerabilities", "body": "Mozilla has rolled out a new version of its Firefox browser, an update that includes patches for\nfour critical security vulnerabilities and several less-severe bugs. \n\nIN all, Firefox 39 patches 13 vulnerabilities, including two high-risk bugs and six moderate-level\nones. The most dangerous vulnerabilities, however, include a pair of use-after-free bugs in one part\nof the browser and another in a separate component, as well as a number of memory corruption flaws. \n\n\u201cSecurity researcher Looben Yan used the Address Sanitizer tool to discover two related use-after-\nfree vulnerabilities that occur when using XMLHttpRequest in concert with either shared or dedicated\nworkers. These errors occur when the XMLHttpRequest object is attached to a worker but that object\nis incorrectly deleted while still in use. This results in exploitable crashes,\u201d the Mozilla\nadvisory says. \n\nThe other use-after-free flaw is in the Content Policy component of Firefox. \n\n\u201cSecurity researcher Herre reported a use-after-free vulnerability when a Content Policy modifies\nthe Document Object Model to remove a DOM object, which is then used afterwards due to an error in\nmicrotask implementation. This leads to an exploitable crash,\u201d the advisory says. \n\nIn addition, the critical bugs also include the memory corruption flaws, and a potpourri of bugs a\nresearcher discovered through code inspection. \n\n\u201cSecurity researcher Ronald Crane reported seven vulnerabilities affecting released code that he\nfound through code inspection. These included three uses of uninitialized memory, one poor\nvalidation leading to an exploitable crash, one read of unowned memory in zip files, and two buffer\noverflows. These do not all have clear mechanisms to be exploited through web content but are\nvulnerable if a mechanism can be found to trigger them,\u201d the advisory says. \n\n", "polarity": -0.0472027972027972, "subjectivity": 0.5298368298368298, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/https-available-as-opt-in-for-blogspot/114872/", "date": "2015-10-01T00:00:00.000Z", "author": "Michael Mimoso", "title": "HTTPS Available as Opt-In for Blogspot", "body": "Google said on Wednesday it has made HTTPS available as an opt-in for its Blogspot publishing\nservice. \n\nGoogle and other technology providers have been ramping up encryption rollouts in the two years\nsince the publication of the Snowden documents began. To date, Google has encrypted Gmail, search,\nGoogle Drive and its ad products as part of its HTTPS Everywhere campaign. \n\n\u201cWhile this initial rollout won\u2019t support all of our Blogger users, we wanted to take the first step\nto make HTTPS available for Blogspot; for those users who want to try it early,\u201d said Google\nsoftware engineer Jo-el van Bergen in a post published on Google\u2019s Online Security Blog. \u201cWe\u2019re\nrolling this out gradually and Blogspot authors interested in enabling HTTPS support can begin\nopting-in today.\u201d \n\nVan Bergen said enabling HTTPS on blog is as simple as selecting \u201cYes\u201d on the Blogger settings page. \n\n \n\n\u201cUnfortunately, blogs with custom domains are not supported in this first version,\u201d van Bergen said.\n\u201cOnce enabled, your blog will become accessible over both HTTP and HTTPS connections. Blogspot\nauthors should be aware that if they choose to encrypt at this time, some of the current\nfunctionality of their blog may not work over HTTPS.\u201d \n\nGoogle announced that its Official Google Blog and the Google Online Security Blog are also moving\nto HTTPS. \n\nEncryption continues to be the defining issue in computer security. Just this week, Apple repackaged\nits privacy policy, explaining the security and privacy controls available in its products in\nunprecedented clarity. And like Google, Apple reaffirmed that would never build backdoors into its\ndevices to facilitate government and law enforcement investigations. \n\nThe change to secure connections by default gives users a expectation of security and privacy. It\ncertainly doesn\u2019t guarantee that specific sessions can\u2019t be intercepted and decrypted by a man-in-\nthe-middle attack or other techniques, but using SSL makes life harder for most adversaries. \n\nOne of the Internet\u2019s largest properties, Reddit, earlier this year announced that it was moving\nHTTPS only for its sites after last year, it began offering users encrypted connections. \n\nThis year, there has been a steady stream of similar moves. In June, Apple began encouraging iOS app\ndevelopers to move to an HTTPS only model, and this was announced around the same time federal\ngovernment CIO Tony Scott announced that all government public sites and services would move to\nHTTPS. Browser makers have also been in on the HTTPS movement; in May, Mozilla announced that it\nwould begin phasing out HTTP connections in Firefox. \n\n", "polarity": 0.12779146141215109, "subjectivity": 0.41908866995073896, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/microsoft-brings-hsts-to-windows-7-and-8-1/113258/", "date": "2015-06-10T00:00:00.000Z", "author": "Michael Mimoso", "title": "Microsoft Brings HSTS to Windows 7 and 8.1", "body": "In the midst of a relatively light Patch Tuesday, Microsoft yesterday introduced an extra measure of\nsecurity for users running Internet Explorer 11 on Windows 7 and Windows 8.1 machines: HSTS. \n\nShort for HTTP Strict Transport Security, HSTS is a browser header that forces any sessions sent\nover HTTP to be sent instead over HTTPS based on a preloaded list of sites supporting the protocol.\nHSTS encrypts communication to and from a website, and puts a dent in attempts to man-in-the-middle\nweb sessions. According to OWASP, HSTS also stops attackers who use invalid digital certificates.\nThe protocol denies users the ability to override invalid certificate messages. HSTS also protects\nusers from HTTPS websites that also may include HTTP links or serve content unencrypted. \n\nHSTS is already on by default in Internet Explorer 11 available in the Windows 10 Insider Preview\nand the new Microsoft Edge expected to be available when Windows 10 releases later this year. \n\n\u201cSite developers can use HSTS policies to secure connections by opting in to an HSTS preload list,\nwhich registers websites to be hardcoded by Microsoft Edge, Internet Explorer, and other browsers to\nredirect HTTP traffic to HTTPS,\u201d said Kyle Pflug, program manager with the Microsoft Edge team.\n\u201cCommunications with these websites from the initial connection are automatically upgraded to be\nsecure.\u201d \n\nMicrosoft is the last of the major browser vendors to add HSTS support. Google Chrome and Mozilla\nFirefox have supported HSTS since 2011, while Apple added it to Safari upon the release of version\n10.9 of Mavericks. \n\nThe move comes on the heels of Microsoft in May bringing Perfect Forward Secrecy to Windows. Forward\nsecrecy has of late been considered an essential security measure, especially for new applications.\nIt ensures that new private keys are negotiated for every web session, meaning that if a key is ever\ncompromised in the future, only that particular session will be at risk. In order to attack each\nsession, each key would have to be attacked separately. \n\nThe addition of HSTS was included in a cumulative update for Internet Explorer released yesterday.\nThe security bulletin included patches for two dozen vulnerabilities in the browser, most of which\ngave hackers the ability to remotely execute code on a compromised computer. \n\nHSTS also resolves Mixed Content attacks where insecure HTTP script is loaded from a site secured\nvia a HTTPS connection. \n\n\u201cWhen we initially announced HSTS in Windows 10, we noted that mixed content is not supported on\nservers supporting HSTS. With today\u2019s updates, this is still the case in Microsoft Edge on Windows\n10 \u2013 mixed content is always blocked on these servers,\u201d Pflug said. \u201cFor Internet Explorer 11 on\nWindows 10, Windows 8.1, and Windows 7, the Information bar will prompt the user to proceed in mixed\ncontent scenarios.\u201d \n\n", "polarity": 0.09495290745290744, "subjectivity": 0.42199017199017197, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/phone-hack-uses-sensors-to-steal-pins/124945/", "date": "2017-04-12T00:00:00.000Z", "author": "Tom Spring", "title": "Phone Hack Uses Sensors To Steal PINs", "body": "University researchers have created a method to steal a smartphone user\u2019s PIN by leveraging sensor\ndata generated by the targeted phone. Researchers say the method has a 74 percent success rate when\nit comes to accurately determining four-digit PIN data inputted by a phone\u2019s owner. \n\nResearchers from U.K.-based Newcastle University created a JavaScript app called PINlogger.js that\nhas\u00a0the ability to access data generated by the phone\u2019s sensors, including GPS, camera, microphone,\naccelerometer, magnetometer, proximity, gyroscope, pedometer and NFC protocols. \n\n\u201cDespite the threat, the research shows that people are unaware of the risks and most of us have\nlittle idea what the majority of the twenty five different sensors available on current smart phones\ndo,\u201d wrote Maryam Mehrnezhad, research fellow in the School of Computing Science and\u00a0Newcastle\nUniversity and lead author of the report. \n\nIn a likely attack scenario, a user would be tricked or enticed to visit a malicious webpage via\ntheir smartphone\u2019s browser. The mobile site would run the PINlogger.js JavaScript and proceed to\ncapture phone sensor data via the web browser. According to the report, many sensors on mobile\ndevices do not require a user\u2019s permission for a website or a web browser application to collect\nsensor data. \n\n\u201cWe assume that the user has loaded the malicious web content in the form of an iframe, or another\ntab while working with the mobile browser,\u201d wrote researchers. \u201cAt this point, the attack code has\nalready started listening to the sensor sequences from the user\u2019s interaction with the phone.\u201d \n\nIn-browser JavaScript-based attacks can pose a\u00a0security threat to users. Unlike in-app attacks, they\ndo not require any app installation and user permission to work, researchers said in their report,\nreleased last week. Using a sample set of 50 PINs, researchers found that their script was able to\ncorrectly guess a user\u2019s PIN 74 percent of the time on the first try, which increases to 86 and 94\npercent success rates on the second and third attempts. \n\n\u201cDepending on how we type \u2013 whether you hold your phone in one hand and use your thumb, or perhaps\nhold with one hand and type with the other, whether you touch or swipe \u2013 the device will tilt in a\ncertain way and it\u2019s quite easy to start to recognize tilt patterns associated with \u2018Touch\nSignatures\u2019 that we use regularly,\u201d wrote Siamak Shahandashti, a senior research associate in the\nSchool of Computing Science and co-author of\u00a0the study. \n\nDifferent input methods used by the users for PIN entrance illustrated. \n\nThe researchers point out, most users are concerned about obvious sensors such as a camera or GPS\nand don\u2019t consider other less obvious sensors as a threat. \n\n\u201cOn some browsers, we found that if you open a page on your phone or tablet which hosts one of these\nmalicious codes and then open, for example, your online banking account without closing the previous\ntab, then they can spy on every personal detail you enter,\u201d Mehrnezhad said. \n\nThat also applied to phones in a locked position, allowing a malicious app or website to capture\npassword PIN data used to gain access to a phone. \n\nResearchers said they have contacted browser vendors alerting them to the possible attack scenario. \n\n\u201cAs the result of the research, some of the mobile browser vendors such as Mozilla, Firefox and\nApple Safari have partially fixed the problem,\u201d the researchers noted. \n\nAs for Firefox, starting from version 46 (released in April 2016), the browser restricts JavaScript\naccess to motion and orientation sensors. Apple\u2019s Security Updates for iOS 9.3 (released in March\n2016), suspended the availability of motion and orientation data when the web view is hidden,\naccording to researchers. \n\nAs for Google, it\u2019s unclear what measures have been taken. \u201cOur concern is confirmed by members in\nthe Google Chromium team, who also believe that the issue remains unresolved,\u201d the report stated.\nGoogle did not reply to a request to comment for this report. \n\nResearchers suggest users change their PINs and passwords regularly. They also recommend closing\nbackground apps and browsers when you are not using them. \n\n\u201cKeep your phone operating system and apps up to date. Only install applications from approved app\nstores. Audit the permissions that apps have on your phone,\u201d the report recommends. \n\n", "polarity": 0.10186011904761907, "subjectivity": 0.43191163003663, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/patched-libpng-vulnerabilities-have-limited-scope/115385/", "date": "2015-11-17T00:00:00.000Z", "author": "Michael Mimoso", "title": "Patched Libpng Vulnerabilities Have Limited Scope", "body": "Two memory corruption vulnerabilities in the PNG reference library, libpng, have been patched, but\nthe scope of software affected by the bug isn\u2019t as wide as initially reported. \n\nThe vulnerabilities, addressed in libpng 1.0.64, 1.2.54,\u00a01.4.17, 1.5.24, and\u00a01.6.19, allow for an\nattacker to write beyond the bounds of a palette, leading to an application crash or hijacking.\nHowever, libpng custodian\u00a0Glenn Randers-Pehrson told Threatpost that normal libpng applications that\nallow libpng to allocate their palette are not vulnerable. \n\n\u201cTo be vulnerable, an application would have to compute the memory required for the palette from the\nIHDR \u201cbit_depth\u201d not from the palette_length returned by png_get_PLTE(), and then use the\npalette_length from png_get_PLTE() to copy libpng\u2019s palette into their own palette,\u201d Randers-Pehrson\nsaid. \u201cI said as much in my request for CVE, but reporting on the CVE has interpreted that to mean\n\u2018all libpng applications are vulnerable.\u2019 I am not aware of any software that does that, although it\nwould be permitted by the PNG specification.\u201d \n\nRanders-Pehrson said exploits would be relatively easy to craft. \n\n\u201cJust write a PNG file with a bit depth of 1, 2, or 4, and a palette length of 256,\u201d he said.\u00a0\u201cBut\nyou have to find a vulnerable application to attack.\u201d \n\nAn attacker would need to trick a user to read a malicious PNG file with a vulnerable application,\nor find a vulnerable application online and send it a crafted PNG. \n\n\u201cThis would cause an out-of-bounds write to memory, with up to around 750 bytes of content\ncontrolled by the attacker,\u201d Randers-Pehrson said. \u201cAnd I\u2019m told that exploiters know how to use\nthat to cause mischief, denial of service, privilege escalation, or hostile takeover of the\nmachine.\u201d \n\nThe bug was found in Optipng, a PNG file optimizer which compresses files to a smaller size.\nRanders-Pehrson said Firefox and other applications such as pngcrush, imagemagick are not\nvulnerable. \n\n\u201cAny software that depends upon the length of the palette being less than or equal to 2^bit_depth\nfor allocating a block of memory for the palette, but then uses the length of the palette returned\nfrom libpng to determine how many bytes to copy from the libpng-allocated palette into their own\npalette [would be vulnerable],\u201d he said. \u201cI am not aware of any application that does this.\u201d \n\nThe Optipng issue was disclosed in July, but Randers-Pehrson said the libpng developers were not\naware of it. Cosmi Truta, an Optipng developer, disclosed to libpng on Oct. 29. Randers-Pehrson said\nhe revised Truta\u2019s patch and ran it through libpng\u2019s customary two-week release cycle. \n\n\u201cThe patched software safely and quietly reads input PNG files that have an oversized palette, and\ntruncates the palette and issues a warning if a user attempts to write an oversized one,\u201d he said. \n\n", "polarity": -0.022067901234567915, "subjectivity": 0.46466049382716046, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/microsoft-considers-earlier-sha-1-deprecation-deadline/115299/", "date": "2015-11-06T00:00:00.000Z", "author": "Michael Mimoso", "title": "Microsoft Considers Earlier SHA-1 Deprecation Deadline", "body": "Tech companies continue to back away from SHA-1 like it\u2019s an infectious disease. \n\nMicrosoft, which already had plans to deprecate the crusty cryptographic algorithm by the start of\n2017, decided this week to move up that deadline six months. The company said it\u2019s considering\nwhether it will start blocking SHA-1-signed TLS certs in June 2016 instead. \n\nThe move coincides with a similar announcement from Mozilla, which said on Oct. 20 that it too is\nconsidering a July 1, 2016 cutoff for accepting SHA-1 certs in Firefox. \n\n\u201cWe will continue to coordinate with other browser vendors to evaluate the impact of this timeline\nbased on telemetry and current projections for feasibility of SHA-1 collisions,\u201d wrote Kyle Pflug, a\nprogram manager for Microsoft Edge, the successor to Internet Explorer. \n\nThe rush to deprecate was given an extra nudge early last month when a team of cryptographers\npublished an academic paper that said it\u2019s quite possible for a well-resourced attacker, i.e., an\nintelligence agency such as the NSA or state-sponsored Russian or Chinese hackers, to create a\npractical SHA-1 collision attack by the end of this year. \n\nThis beats previous projects by almost three years, and set into motion this wave of activity in\nputting SHA-1 officially out to pasture. \n\nMicrosoft in 2013 was among the first providers to announce its intention to move away from SHA-1,\nas well as the RC4 stream cipher. Theoretical collisions against SHA-1 where two inputs of a hash\nfunction generate the same hash have been described for more than a decade. Mozilla, Google and\nothers were not far behind. \n\nMozilla\u2019s original plan was the add warnings to the Web console alerting developers that SHA-1\ncertificates were a bad idea. It also planned as of Jan. 1, 2016 to show an \u201cUntrusted Connection\u201d\nerror in Firefox for sites signed with SHA-1 after that date, and after Jan. 1, 2017 to show the\nsame error message whenever its browser ran into a SHA-1 cert. \n\nThat changed after the publication of the report \u201cFreestart collision for full SHA-1.\u201d \n\n\u201cWe are re-evaluating when we should start rejecting all SHA-1 SSL certificates (regardless of when\nthey were issued),\u201d Mozilla said in its Oct. 20 announcement. \n\nThe academic paper, written by researchers Marc Stevens, Pierre Karpman and Thomas Peyrin,\nrespectively of the Centrum Wiskunde & Informatica of the Netherlands, Inria of France, and the\nNanyang Technological University of Singapore, describes tweaks to existing attacks and advances in\nanalyzing of the algorithm that drastically reduce the cost and potential time to generate a\ncollision. Those factors in combination with the relative continued health of Moore\u2019s law, which\nstates the computer processing power doubles every two years, significantly reduce the time to\ncreate a collision attack. \n\nThe original estimates for practical SHA-1 collisions were published by cryptographer Bruce Schneier\nin 2012 when he projected that the cost to create a practical SHA-1 collision would be $700,000 by\n2015 and $143,000 by 2018, two figures that are within reach of well-funded hacking teams. \n\nThe new projections, given the relative inexpensive cost of procession power afforded by Amazon EC2,\nfor example, reduces the costs to between $75,000 and $125,000 and the time down to as few as three\nmonths. \n\n", "polarity": 0.02012549739822467, "subjectivity": 0.3553565962656872, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/google-safe-browsing-extends-to-deceptive-embedded-content/116135/", "date": "2016-02-04T00:00:00.000Z", "author": "Michael Mimoso", "title": "Google Safe Browsing Extends to Deceptive Embedded Content", "body": "Google\u2019s Safe Browsing API is almost a living organism, constantly evolving and adapting to online\nthreats. \n\nOn Wednesday, Google announced the latest enhancements to the service, with new features that\nprotect users on the web from deceptive embedded content. \n\n\u201cYou may have encountered social engineering in a deceptive download button, or an image ad that\nfalsely claims your system is out of date,\u201d said Google engineer Lucas Ballard. \u201cWe\u2019re expanding\nSafe Browsing protection to protect you from such deceptive embedded content, like social\nengineering ads.\u201d \n\nGoogle has taken steps to defeat social engineering lures that trick users into downloading unwanted\nsoftware such as adware, ad injectors or spyware that doesn\u2019t behave as advertised. Now Google is\nextending that protection to deceptive download buttons or embedded content in image ads that\npurport to require system or application updates. \n\nFrom Google\u2019s announcement: \n\nConsistent with the social engineering policy we announced in November, embedded content (like ads)\non a web page will be considered social engineering when they either:\u00a0Pretend to act, or look and\nfeel, like a trusted entity \u2014 like your own device or browser, or the website itself; or try to\ntrick you into doing something you\u2019d only do for a trusted entity \u2014 like sharing a password or\ncalling tech support. \n\nThe Safe Browsing service helps protect Chrome users from malicious software and sites. The service\ndefends against phishing and other threats by checking URLs against a database that Google maintains\nof malicious sites. The system also checks for sites that are suspected of serving malware. Google\nprovides an API for Safe Browsing and it\u2019s used in both Firefox and Safari. \n\nGoogle said some examples of deceptive embedded content includes phony media player update requests\nembedded in ads, or download or play buttons that purport to show users streaming content and have\nthe same look and feel as the rest of the page. \n\nLast February, Google made its first strides toward protecting against these types of social\nengineering attacks that trick users into thinking they\u2019re getting content from a trusted source.\nWhen users encountered a site hosting potentially unwanted software, the familiar red warning screen\nwas displayed. \n\n", "polarity": 0.14562937062937065, "subjectivity": 0.3976107226107226, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-patches-critical-vulnerabilities-in-firefox-44/116033/", "date": "2016-01-27T00:00:00.000Z", "author": "Michael Mimoso", "title": "Mozilla Patches Critical Vulnerabilities in Firefox 44", "body": "Mozilla has patched a number of critical vulnerabilities in Firefox 44 and Firefox Extended Release\n38.6, which were released this week. \n\nThe most serious flaws were memory vulnerabilities that lived in both the public and extended\nsupport versions of the browser. \n\nA buffer overflow (write) in WebGL, the browser\u2019s Web graphics library, was patched. WebGL is a\nJavaScript API that renders 3D and 2D graphics in the browser without the need for a plug-in.\nMozilla said the vulnerability was discovered in the buffersubdata method of the API. \n\nMozilla also addressed several \u201cmemory safety bugs\u201d in the engine used in Firefox and other Mozilla\nproducts. \n\n\u201cSome of these bugs showed evidence of memory corruption under certain circumstances, and we presume\nthat with enough effort at least some of these could be exploited to run arbitrary code,\u201d Mozilla\nsaid in its advisory. \n\nMozilla said the flaws cannot be exploited through Thunderbird where scripting is disabled, but\ncautioned against the risk in \u201cbrowser-like contexts.\u201d \n\nThree other memory-related bugs were patched in Firefox 44. The vulnerabilities were found in the\nANGLE graphics library, and in Firefox\u2019s handling of zip files and parsing of the libstagefright\nlibrary. \n\n\u201cThe first two issues do not all have clear mechanisms to be exploited through web content but are\nvulnerable if a mechanism can be found to trigger them,\u201d Mozilla said in its advisory. \u201cThe\nlibstagefright issue could potentially be triggered by a malicious MP4 format video file, allowing\nfor arbitrary code execution.\u201d \n\nMozilla also patched vulnerabilities it rated \u201chigh severity\u201d in Firefox 44, including two that\nfacilitate address bar spoofing, and another set of issues in the browser\u2019s Network Security\nServices that can introduce cryptographic weaknesses, the advisory said. \n\n", "polarity": -0.031058201058201056, "subjectivity": 0.4728571428571428, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/oracle-to-kill-java-browser-plugin/116065/", "date": "2016-01-28T00:00:00.000Z", "author": "Chris Brook", "title": "Oracle to Kill Java Browser Plugin", "body": "It\u2019s the end of an era. Oracle has announced its intent to nail the coffin shut on the\u00a0Java browser\nplugin. \n\nThe company confirmed Wednesday that it expects to deprecate the plugin in JDK 9, slated for release\nin September, and JRE, in a future Java SE release. \n\nDalibor Topic, a member of Oracle\u2019s Java Strategy Team, posted the news in an entry to the Java\nPlatform Group\u2019s Product Management blog, acknowledging the company\u2019s move toward a \u201cplugin free\nweb,\u201d and that the main reason behind the move is\u00a0a result of many browsers electing to move on from\nplugin based technologies. \n\nGoogle disabled NPAPI, turning off often meddlesome plugins like Java and Silverlight, by default\nlast April. Support for NPAPI was eventually completely removed in Chrome 45, which was pushed out\nin September 2015. While Mozilla won\u2019t completely remove support for NPAPI plugins in Firefox until\nthe end of 2016, it did take similar steps with Firefox, making Java plugins click-to-play by\ndefault back in 2013 to thwart attackers from using them as a vector for compromises. \n\nInternet Explorer and Safari are expected to be the only browsers left that will accept NPAPI\nplugins after this year. \n\nPartly because the plugin was cross-platform, and updates came infrequently, Java was a\nbeloved\u00a0target for attackers over the years. In 2012 and 2013 the plugin was virtually ubiquitous on\nPCs,\u00a0and it\u00a0was often difficult to go a few weeks without a new zero day surfacing against the\napplet. \n\nTopic warns that\u00a0any developers working on apps that still rely on the Java plugin will switch to\nsomething else, like Oracle\u2019s standalone Java framework Java Web Start.\u00a0For those who can\u2019t wait to\nget rid of the plugin, he\u00a0points out that early access releases of JDK 9 are available for download. \n\n", "polarity": 0.07633477633477634, "subjectivity": 0.460930735930736, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/attackers-dropping-kasidet-bot-via-office-macros/116090/", "date": "2016-02-01T00:00:00.000Z", "author": "Chris Brook", "title": "Attackers Dropping Kasidet Bot via Office Macros", "body": "It\u2019s well documented that attackers have reignited their love affair with the Office macro, using it\nas a vector for spreading\u00a0banking malware and even the BlackEnergy Trojan\u00a0as of late. \n\nAccording to researchers at the San Jose security company zScaler,\u00a0the bot\u00a0Kasidet, also known as\nNeutrino, has also adopted this technique. Attackers peddling the bot\u00a0have stepped it up over the\npast two weeks, according to a trio of researchers, Abhay Yadav, Avinash Kumar and Nirmal Singh,\nwith the company. \n\nThe researchers claim the same VBA (Visual Basic for Applications) macros in Microsoft Office files\nthat are being leveraged to drop Dridex \u2013 are dropping Kasidet as well. Both are using\u00a0attachments\nmasquerading as\u00a0scanned documents in spearphishing emails to do so. \n\nAfter downloading the malware, this particular strain of Kasidet steals information from users\nmachines in two ways: memory scraping and browser hooking. \n\nThe memory scraping technique lets attackers steal credit card data from\u00a0point of sale systems \u2014\naccording to zScaler it scans memory from running processes and forwards it back via a URI (Uniform\nResource Identifier) string of characters. \n\nThe Kasidet bot has been around since 2013 and has primarily been known for its DDoS capabilities.\nThe bot reportedly added a module for data scraping back in September. \n\nKasidet is able to intercept traffic from the victim\u2019s machine and browsers like Firefox, Chrome,\nand IE through browser hooking. According to researchers the malware uses the same hash function\nthat Carberp uses to encrypt browser names. \n\nKasidet can issue a handful of requests once it\u2019s up and running as well, including asking for the\nsystem name, system version, and whether there\u2019s antivirus on the system, to name a few. \n\nResearchers are cautioning that there may not be an outright connection between the two families of\nmalware. Just because the same campaign appears to be dropping both Dridex and Kasidet, doesn\u2019t mean\nthey\u2019re working together, they claim. It does \u201creaffirm the fact\u201d that some of the mechanisms are\nshared by the attackers, Yadav, Kumar, and Singh wrote. \n\n\u201cMalicious Office document file is a popular vector for malware authors to deliver their payloads,\u201d\nthey wrote on Friday. \u201cDridex authors have leveraged this technique for over a year and it was\ninteresting to see the same campaign and URLs being leveraged to deliver Kasidet payloads.\u201d \n\nAttackers began pushing Dridex via macros in XML files last March and it appears\u00a0the technique\nhasn\u2019t gotten old yet. Researchers at Invincea noticed attackers dropping the malware on French\nusers in October, while\u00a0IBM observed a spam campaign centered around victims in the U.K. last month.\nEach incident involved the use of macros, usually\u00a0disabled by default in Office, suggesting the\nvector remains popular, no matter what attackers are pushing. \n\n", "polarity": 0.08116666666666666, "subjectivity": 0.2921666666666667, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/sloth-attacks-up-ante-on-sha-1-md5-deprecation/115807/", "date": "2016-01-07T00:00:00.000Z", "author": "Michael Mimoso", "title": "SLOTH Attacks Up Ante on SHA-1, MD5 Deprecation", "body": "If you\u2019re hanging on to the theory that collision attacks against SHA-1 and MD5 aren\u2019t yet\npractical, two researchers from INRIA, the French Institute for Research in Computer Science and\nAutomation, have demonstrated new attacks that raise the urgency to move away from these broken\ncryptographic algorithms. \n\nKarthikeyan Bhargavan and Gaetan Leurent recently published an academic paper, \u201cTranscript Collision\nAttacks: Breaking Authentication in TLS, IKE, and SSH,\u201d in which they describe a series of new class\nof transcript collision attacks against SHA-1 and MD5 as they\u2019re implemented in protocols such as\nTLS, Internet Key Exchange and Secure Shell (SSH). \n\n\u201cWeak hash functions continue to be used in various cryptographic constructions within mainstream\nprotocols such as TLS, IKE, and SSH, because practitioners argue that their use in these protocols\nrelies only on second preimage resistance, and hence is unaffected by collisions,\u201d Bhargavan and\nLeurent wrote. \u201cWe systematically investigate and debunk this argument.\u201d \n\nTheir attacks, which they dubbed SLOTH (an acronym for Security Loss due to the use of Obsolete and\nTruncated Hash constructions), center on the SHA-1 and MD5 implementations in TLS 1.1, 1.3 and 1.3,\nalong with IKEv1 and v2, and SSH 2. The researchers\u2019 attacks against both algorithms in TLS client\nand server authentication open the door to impersonation attacks, as well as credential forwarding\nif the attack targets TLS channel binding. Against IKE initiator authentication, the researchers\nwere able to carry out impersonation attacks, and downgrade attacks against SHA-1 in SSH 2 and TLS\n1.1 handshakes. \n\n\u201cOur main conclusion is that the continued use of MD5 and SHA1 in mainstream cryptographic protocols\nsignificantly reduces their security and, in some cases, leads to practical attacks on key protocol\nmechanisms,\u201d Bhargavan and Leurent wrote. \u201cFurthermore, the use of truncated hashes and MACs for\nauthenticating key exchange protocol transcripts is dangerous and should be avoided where possible.\u201d \n\nThe researchers disclosed their findings to the TLS working group and other affected parties, which\nalready has taken steps to deprecate MD5 signatures where appropriate. \n\n\u201cThese changes impact the Firefox and Android browsers, about 31 percent of web servers, most Java\napplication servers and their clients, and many other custom applications that use less well-known\nTLS libraries,\u201d the researchers wrote, adding that they will maintain a site,\nhttp://www.mitls.org/pages/attacks/SLOTH, describing known attacks, software in the line of fire,\nand whether protocols and implementations have been fixed. \n\nThe researchers\u2019 paper describes a number of attacks that require some processing muscle, leaving\nthem in the arena of well-resourced nation-state attackers for now. One transcript collision attack\nagainst TLS server signatures using MD5 cut the effective security in half from 128 bits to 64 bits.\nThe security loss for other attacks against TLS authentication were worse, the researchers said,\nmaking such attacks much more practical. \n\n\u201cIn all cases, the complexity of our transcript collision attacks are significantly lower than the\nestimated work for a second preimage attack on the underlying hash function. This definitively\nsettles the debate on whether the security of mainstream cryptographic protocols depend on collision\nresistance,\u201d the researchers wrote. \u201cThe answer is yes, cryptographers were right. Except in rare\ncases, mainstream protocols do require collision resistance for protection against man-in-the-middle\ntranscript collision attacks. Consequently, we strongly recommend that weak hash functions like MD5\nand SHA-1 should not just be deprecated; they should be forcefully disabled in existing protocols.\u201d \n\n", "polarity": 0.05500240500240498, "subjectivity": 0.5004401154401155, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-warns-of-sha-1-deprecation-side-effects/115822/", "date": "2016-01-07T00:00:00.000Z", "author": "Michael Mimoso", "title": "Mozilla Warns of SHA-1 Deprecation Side Effects", "body": "As promised, Mozilla officially began rejecting new SHA-1 certificates as of the first of the year.\nAnd as promised, there have been some usability issues. \n\nMozilla yesterday said that some security scanners and antivirus products are keeping some from\nreaching HTTPS websites. \n\n\u201cWhen a user tries to connect to an HTTPS site, the man-in-the-middle device sends Firefox a new\nSHA-1 certificate instead of the server\u2019s real certificate,\u201d said Richard Barnes of Mozilla. \u201cSince\nFirefox rejects new SHA-1 certificates, it can\u2019t connect to the server.\u201d \n\nA number of experts voiced their concerns late last year as most of the major browsers inched toward\nself-imposed deadlines for rejecting SHA-1 certificates that significant portions of the Internet\nwould be cut off. \n\nFacebook chief security officer Alex Stamos put the number at tens of millions, while CloudFlare CEO\nMatthew Prince was more specific saying that as many as 37 million would be stranded. \n\n\u201cA disproportionate number of those people reside in developing countries, and the likely outcome in\nthose counties will be a serious backslide in the deployment of HTTPS by governments, companies and\nNGOs that wish to reach their target populations,\u201d Stamos said. \n\nPrince added that circumstances are different today regarding support for newer crypto algorithms.\nUnlike when MD5 was put out to pasture and SHA-1 support was widespread, the same cannot be said for\nSHA-2, which is also not supported on older mobile devices. \n\n\u201cIn a Silicon Valley tech company, where most employees get a new laptop every year and having a\n5-year-old phone is unheard of, this may not seem like a problem. But the Internet is used by\nbillions of people around the world and most of them don\u2019t have the latest technology,\u201d Prince said. \n\nSHA-1 is considered theoretically broken, and academics say that given the resources and computing\npower, practical collision attacks are well within reach of nation-state attackers, for example. \n\nBarnes said there are workarounds short of manually installing the latest version of Firefox, since\nupdates are provided over HTTPS. \n\n\u201cIf you want to avoid reinstalling, advanced users can fix their local copy of Firefox by going to\nabout:config and changing the value of \u201csecurity.pki.sha1_enforcement_level\u201d to 0 (which will accept\nall SHA-1 certificates),\u201d Barnes said. \n\n", "polarity": 0.1559388528138528, "subjectivity": 0.47654220779220796, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/dell-computers-ship-with-root-cert-private-key/115455/", "date": "2015-11-23T00:00:00.000Z", "author": "Michael Mimoso", "title": "Dell Computers Ship with Root Cert, Private Key", "body": "Update\u00a0Just in time for Black Friday, various models of new Dell computers are shipping with a\npreinstalled root certificate and private key that corresponds to the cert, which as of earlier\ntoday was being accepted by all major browsers except Firefox. \n\nGiven that a number of tools exist to aid in the extracting of the private key, it doesn\u2019t figure to\nbe long before attackers can carry out man-in-the-middle attacks, spoof popular\u00a0websites and unlock\nencrypted communication. \n\nA request made to Dell for comment was not returned in time for publication. Dell said it began\nloading the cert on consumer and commercial devices in August to speed up online support\nengagements; the cert provides a support technician necessary system information including the PC\nmodel, drivers, and operating system. \n\n\u201cThe recent situation raised is related to an on-the-box support certificate intended to provide a\nbetter, faster and easier customer support experience. Unfortunately, the certificate introduced an\nunintended security vulnerability,\u201d Dell said in a statement provided to Threatpost. \u201cTo address\nthis, we are providing our customers with instructions to permanently remove the certificate from\ntheir systems via direct email, on our support site and Technical Support. We are also removing the\ncertificate from all Dell systems moving forward.\u201d \n\nDell also said that commercial customers who image their own systems are not vulnerable. \n\n\u201cDell does not pre-install any adware or malware,\u201d Dell said. \u201cThe certificate will not reinstall\nitself once it is properly removed using the recommended Dell process.\u201d \n\nThe situation of course harkens back to the Superfish ordeal that plagued Lenovo computers starting\nlast Christmas season before it was finally made public in February. Superfish was bloatware on new\nLenovo machines used to install ads in users\u2019 browsers, that also opened the door to abuse leading\nto man-in-the-middle attacks similar to the Dell situation. \n\nSo far, the cert\u2014called eDellroot\u2014has been found on Dell XPS 15 laptops, M4800 workstations, and\nInspiron desktops and laptops. \n\n\u201cIt means attackers are de facto certificate authorities, free to generate man-in-the-middle certs,\nor just direct phishing sites that won\u2019t get flagged as illegitimate,\u201d said researcher Kenneth\nWhite, director of the Open Crypto Audit Project. \u201cFor these users, it\u2019s as if there\u2019s a bogus\nequivalent to Verisign, Comodo, or Symantec CA.\u201d \n\nWhite has built a website that checks whether machines are vulnerable to the cert. German security\nblogger Hanno Bock has also built a similar online check. \n\nIf you have a recent XPS 15 running Windows and can load my page: https://t.co/qExUHLQwH0 then\nyou're vulnerable to Dell's bogus root cert. \n\n\u2014 Kenn White (@kennwhite) November 23, 2015 \n\n \n\nThe situation became public over the weekend, in particular on a Reddit thread started by Dell XPS\n15 owner Kevin Hicks where it quickly became apparent that this wasn\u2019t an isolated case of one rogue\ncert. \n\nFrom the Reddit thread: \n\nSurely Dell had to have seen what kind of bad press Lenovo got when people discovered what Superfish\nwas up to. Yet, they decided to do the same thing but worse. This isn\u2019t even a third-party\napplication that placed it there; it\u2019s from Dell\u2019s very own bloatware. To add insult to injury, it\u2019s\nnot even apparent what purpose the certificate serves. At least with Superfish we knew that their\nrogue root CA was needed to inject ads into your web pages; the reason Dell\u2019s is there is unclear. \n\nJoe Nord, a Florida-based computer programmer, also posted a warning on his personal website about a\nnew Dell Inspiron 5000 notebook he purchased last month. \n\n\u201cSerial number starts with \u20186b c5 7b 95 18 93 aa 97 4b 62\u2019 and the keys are marked non-exportable.\u00a0\nNotice that this doesn\u2019t mean that the private key isn\u2019t accessible, it only means that it isn\u2019t\nexportable,\u201d Nord wrote.\u00a0\u201cAnyone possessing the private key which is on my computer is capable of\nminting certificates for any site, for any purpose and the computer will programmatically and\nfalsely conclude the issued certificate to be valid.\u201d \n\n \n\nBock said the cert is installed by Dell Foundation Services software, which is available on Dell\u2019s\nwebsite. \n\n\u201cEvery attacker can use this root certificate to create valid certificates for arbitrary web pages.\nEven HTTP Public Key Pinning (HPKP) does not protect against such attacks, because browser vendors\nallow locally installed certificates to override the key pinning protection,\u201d Bock wrote. \u201cThis is a\ncompromise in the implementation that allows the operation of so-called TLS interception proxies.\u201d \n\nThis article was updated on Nov. 23 with comments from Dell.\u00a0 \n\n", "polarity": 0.035298989898989906, "subjectivity": 0.47075589225589237, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/apple-patches-productivity-software-mozilla-updates-firefox-with-security-fix/115081/", "date": "2015-10-16T00:00:00.000Z", "author": "Michael Mimoso", "title": "Apple Patches Productivity Software; Mozilla Updates Firefox with Security Fix", "body": "Apple on Thursday patched a handful of vulnerabilities in several iterations of its Keynote, Pages,\nNumbers and iWork productivity software. \n\nThe most serious of the security flaws allow an attacker to execute code on a compromised OS X\ncomputer running Yosemite 10.10.4 or later, or iOS 8.4 or later on mobile devices. \n\nKeynote 6.6, Pages 5.6, Numbers 3.6, and iWork for iOS 2.6 were vulnerable to multiple input\nvalidation vulnerabilities that could be exploited when parsing a document hosting an exploit. Apple\nsaid opening a malicious document in either of the applications could lead to loss of user\ninformation; it addressed the problem by improving input validation, Apple said. \n\nA separate memory corruption vulnerability could also be exploited in Keynote, Pages and Numbers\nthat could crash the application and result in an attacker being able to run code on the affected\nmachine. \n\nAnother memory corruption flaw exists in Pages exclusively that could also lead to Pages crashing\nand the attacker running code of their choice. In both cases, Apple said it improved memory handling\nto address the vulnerability. \n\nMozilla Patches Flaw in Firefox\u00a0 \n\nAlso on Thursday, Mozilla announced it had made Firefox 41.0.2 available. \n\nThe updated version of the browser patched a cross-origin restriction bypass vulnerability Mozilla\nranked \u201chigh.\u201d \n\nMozilla said in its advisory that the fetch()API in Firefox did not correctly implement the corss-\norigin resource sharing specification. As a result, an attacker hosting a malicious webpage could\naccess private data from other origins. \n\n", "polarity": 0.05013888888888889, "subjectivity": 0.3318055555555555, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/microsoft-to-remove-superfish-like-programs-starting-in-march/115730/", "date": "2015-12-23T00:00:00.000Z", "author": "Michael Mimoso", "title": "Microsoft to Remove Superfish-Like Programs Starting in March", "body": "Microsoft has taken steps to impede the next Superfish from impacting users. \n\nSuperfish was pre-installed adware found on new Lenovo laptops earlier this year. The software\nexposes users to man-in-the-middle attacks because of the way it injects advertisements into the\nbrowser. It comes with a self-signed root cert that generates certs for HTTPS connections, replacing\nexisting certs with its own in the process. Attackers could take advantage of this\nscenario\u2014especially after the password for the cert that shipped with Superfish was found\u2014to listen\nin on encrypted communication. \n\nMicrosoft this week said it has updated its rules around adware, and now such programs that build\nads in the browser are required to only use the browser\u2019s \u201csupported extensibility model for\ninstallation, execution, disabling and removal.\u201d Microsoft said starting March 31, 2016 it will\ndetect and begin removing programs that are not in compliance. \n\n\u201cThe choice and control belong to the users, and we are determined to protect that,\u201d wrote Barak\nShein and Michael Johnson of Microsoft\u2019s Malware Protection Center. \n\nLenovo quickly patched the original Superfish issue and shortly thereafter, browser makers such as\nMozilla removed the root cert from Firefox\u2019s trusted root store. \n\nSuperfish\u2019s ability to perform SSL interception by proxy was certainly worrisome behavior from a\nsupposedly trusted product, one that was suddenly opening the door not only to man-in-the-middle\nattacks, but also the manipulation of DNS settings and other network-layer attacks. Worse yet was\nthat Superfish-like software would not trigger warnings about man-in-the-middle attacks. \n\n\u201cAll of these techniques intercept communications between the Internet and the PC to inject\nadvertisements and promotions into webpages from outside, without the control of the browser,\u201d\nMicrosoft said. \u201cOur intent is to keep the user in control of their browsing experience and these\nmethods reduce that control.\u201d \n\n", "polarity": 0.057443482443482435, "subjectivity": 0.48894300144300146, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/mozilla-embraces-private-browsing-with-tracking-protection-in-firefox-42/115275/", "date": "2015-11-05T00:00:00.000Z", "author": "Chris Brook", "title": "Mozilla Embraces Private Browsing with Tracking Protection in Firefox 42", "body": "Mozilla has pushed a feature in Firefox live that allows users\u00a0to block certain page elements while\nbrowsing privately. \n\nThe feature, Private Browsing with Tracking Protection, previously available to beta users, blocks\nthird party page elements, such as\u00a0ads, social network buttons, analytics, and other bits of\ninformation that could record a users\u2019 browsing activity and profile users across multiple sites\nwhen its loaded by pages. \n\n \n\nThe functionality was quietly launched in beta builds of the browser in September but made it into\nthe final build of Firefox 42, released on Tuesday. The latest iteration of the browser also\nfeatures a control center, which can be clicked via a shield icon in the address bar, that contains\nsecurity and privacy controls for whatever site a user is on. \n\nThe center is designed to act as an all-in-one shop for those browsing privately with tracking\nprotection. It tells users whether or not the page they\u2019re on is secure and gives them the option to\ndisable tracking protection on a session by session basis. Since the functionality can break\nwebsites by blocking certain behavior, users may want to experiment and use it from\u00a0site to\u00a0site. \n\n \n\nThe move brings to fruition a feature privacy advocates urged the company to deploy earlier this\nyear. \n\nMonica Chew, a former software engineer with Firefox, and Georgios Kontaxis, a student at Columbia\nUniversity, released a paper in April,\u00a0\u201cTracking Protection in Firefox For Privacy and Performance,\u201d\n(.PDF) that stressed the feature could radically speed up page load times. \n\nThe two actually experienced a 44 percent reduction in page load time, a 39 percent decrease in data\nusage, and 68 percent fewer cookies being set after enabling Tracking Protection. In an accompanying\nworkshop at the IEEE\u2019s Symposium on Security and Privacy the two encouraged the browser to implement\nthe feature on a broader basis. In earlier versions of Firefox, users had to dig deep through the\nbrowsers settings to enable it. \n\nThe Electronic Frontier Foundation endorsed Chew and Kontaxis\u2019 research at the time, and announced\nthis week that it was pleased Mozilla was able to incorporate Private Browsing with Tracking\nProtection into Firefox, but claims the company could still do more to protect user privacy. \n\n\u201cThis is a first step,\u201d Noah Swartz, a Staff Technologist with the watchdog wrote Tuesday. \n\n\u201cRight now, tracking protection is available only in private browsing mode. Ideally, Mozilla would\nalso commit to protecting people outside of private browsing mode by turning on Tracking Protection\nfor users that have enabled the Do Not Track setting in their browser.\u201d \n\nThe EFF also called on Mozilla to join the Do Not Track coalition it started with Adblock and\nDisconnect earlier this year, and expressed its desire for other browsers and mobile platforms to\nfollow in Mozilla\u2019s footsteps. \n\n", "polarity": 0.15091845091845094, "subjectivity": 0.4564028314028315, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/firefox-46-patches-critical-memory-vulnerabilities/117698/", "date": "2016-04-27T00:00:00.000Z", "author": "Michael Mimoso", "title": "Firefox 46 Patches Critical Memory Vulnerabilities", "body": "Mozilla yesterday updated Firefox and patched 10 vulnerabilities, one which was rated critical. \n\nFirefox 46 also included patches for four vulnerabilities that Mozilla rated as high severity.\nCritical bugs enabled remote code execution without user interaction, while bugs rated high can be\nexploited to steal browser data or inject code into websites via the browser. \n\nThe critical vulnerability was found internally and included four memory-related flaws in the\nbrowser engine used by Firefox and other Mozilla software. \n\n\u201cSome of these bugs showed evidence of memory corruption under certain circumstances, and we presume\nthat with enough effort at least some of these could be exploited to run arbitrary code,\u201d Mozilla\nsaid in its advisory. \n\nAll four bugs\u2014CVE-2016-2807, CVE-2016-2806, CVE-2016-2805, and CVE-2016-2804\u2014cause the browser to\ncrash; CVE-2016-2805 affects only Firefox ESR 38.8. \n\nAs for the high-severity vulnerabilities, one publicly disclosed by researchers at Newcastle\nUniversity in the U.K. affects only mobile versions of Firefox for Android. The researchers found\nthat they could use JavaScript with orientation data and motion sensors of the mobile browser to\ndisclose user actions on the device. \n\n\u201cThis allows an attacker to infer touch actions on the device through these sensors when orientation\nevents are triggered in the browser, compromising user privacy and including potentially revealing\nentered PIN code data along with other user activities,\u201d Mozilla said in its advisory. \n\nMozilla also patched a buffer overflow in libstagefright because of the way it handles CENC offsets\nand sizes table, and a use-after-free and buffer overflow flaws in Firefox\u2019s Service Workers. \n\nThe remaining high-severity bug was disclosed privately by the information security arm of the U.K.\nintelligence agency GCHQ. The flaw is that the .watch() JavaScript method could overflow the\nunderlying HashMap and allow an attacker to write to an invalid entry. \n\n\u201cUnder the right conditions this write could lead to arbitrary code execution,\u201d Mozilla said in its\nadvisory. \u201cThe overflow takes considerable time and a malicious page would require a user to keep it\nopen for the duration of the attack.\u201d \n\nMozilla also patched a handful of flaws it rated as moderate severity because they work only in non-\ndefault configurations, or require extra actions on the user\u2019s part to exploit. \n\n", "polarity": 0.002799999999999999, "subjectivity": 0.5531523809523808, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/decryption-tool-stifles-jigsaw-ransomware/117387/", "date": "2016-04-13T00:00:00.000Z", "author": "Tom Spring", "title": "Decryption Tool Stifles Jigsaw Ransomware", "body": "Menacing ransomware called Jigsaw threatened to delete thousands of files an hour if victims didn\u2019t\npay 0.4 Bitcoins or $150. Worse, restarting your PC, according to the attackers, would also cost\nvictims 1,000 deleted files. The icing on the cake was a menacing image of \u201cBilly the Puppet\u201d from\nthe horror movie franchise Saw and an ominous warning message. \n\n\u201cI want to play a game with you. Let me explain the rules: All your files are being deleted,\u201d the\nransomware note begins. \n\nBut, the Jigsaw horror show appears to be coming to an end\u2014for now. \n\nResearchers analyzing the malware, that include security researchers at MalwareHunterTeam and\nindividual computer forensics experts Michael Gillespie and Lawrence Abrams, have been able to\ndevelop a decryption tool that allows victims to recover their files for free. \n\nThe trio posted instructions for anyone hit with the Jigsaw ransomware on Abrams\u2019\nBleepingComputer.com security blog that include the tool needed to decrypt files. According to\nAbrams, Jigsaw ransomware used AES encryption which supports a block length of 128 bits and key\nlengths of 128, 192, and 256 bits. \n\n\u201cThe criminals behind this ransomware are taking just as much pleasure in toying with victims as\nthey are taking their money,\u201d Abrams told Threatpost in an interview. But, he said, attackers are\nliving up their promise and are actually destroying the files if people don\u2019t pay up. \n\nAccording to researchers,\u00a0 Jigsaw targets 240 different unique file extensions on infected systems\nand locks up documents with the .FUN, .KKK, .GWS, or, .BTC extensions. Once encrypted, criminals\nstart a countdown clock at 60 minutes. Fail to cough-up payment in an hour and Jigsaw deletes one\nfile. Wait another hour and two files get zapped. With each hour that passes the number of files\ndeleted grow exponentially. \n\nBut, just because researchers have figured out a way to outsmart the ransomware authors, doesn\u2019t\nmean that Jigsaw hasn\u2019t lost its bite. \u201cYour average Jigsaw victim is not going know where to buy a\nBitcoin. The process is cumbersome and could take someone days to figure out. And by that time tens\nof thousands of files are going to be deleted,\u201d Abrams said. \n\nJigsaw victims can avoid any files from being deleted by going into their Windows Task Manager and\nterminating the firefox.exe process along with the drpbx.exe processes. \n\nAccording to researchers, it\u2019s unknown how many systems have been impacted by this ransomware or the\nmeans of infection. One clue, according to Abrams, is the fact that some people have been lured into\ndownloading Jigsaw via a fake Firefox browser installation file. \n\nOutsmarting ransomware criminals is not common. But earlier this week, researchers said they were\nable to crack the Petya ransomeware\u00a0and develop\u00a0a decryption tool that allowed victims to generate\nkeys to unlock encrypted files in less than 10 seconds. \n\n\u201cRansomware is becoming extremely popular,\u201d Abrams said. And because of that, ransomware authors are\nrushing development of code and cutting corners,\u00a0making it easier for security professionals to\ncrack. \u201cI wouldn\u2019t be surprise if we didn\u2019t see variants of Petya or Jigsaw soon that simply\nreplaced the encryption engine with something harder to bypass,\u201d he said. \n\nStay tuned for a Jigsaw sequel, Abrams said. \n\n", "polarity": -0.07686781609195402, "subjectivity": 0.5710796387520525, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/firefox-add-on-flaw-leaves-apple-and-windows-computers-open-to-attack/117183/", "date": "2016-04-05T00:00:00.000Z", "author": "Tom Spring", "title": "Firefox Add-On Flaw Leaves Apple And Windows Computers Open To Attack", "body": "Researchers warn hundreds of popular Firefox browser extensions are vulnerable to attack that could\ngive hackers control of Mac OS X and Windows computers. \n\nResearchers from Northeastern University say the flaw is tied to Firefox\u2019s support for an older\nbrowser extension platform and the Mozilla Foundation\u2019s plug-in vetting process for its Firefox\nbrowser. Researchers presented their findings last week at Black Hat Asia. \n\n\u201cAttackers could write an extension that looks innocuous to anyone reviewing the plug-in. But once\nadded to the Firefox browser, the benign looking extension could easily exploit a second Firefox\nextension to plant malware on the user\u2019s computer,\u201d said William Robertson, assistant professor at\nNortheastern University and one of four researchers who discovered the vulnerability. \n\nIn a report \u201cCrossFire: An Analysis of Firefox Extension-Reuse Vulnerabilities\u201d researchers claim\n2,000 Firefox extensions \u2013 including nine\u00a0of the top 10 extensions \u2013 are exploitable via \u201cextension-\nreuse vulnerabilities.\u201d Researchers tested the desktop version of the Firefox browser running on Mac\nOS X and Windows platforms finding them both vulnerable. \n\n\u201cThe way add-ons are implemented in Firefox today allows for the scenario hypothesized and presented\nat Black Hat Asia,\u201d said Nick Nguyen, Mozilla\u00a0vice president\u00a0of product strategy,\u00a0in a statement to\nThreatpost. \u201cThe method described relies on a popular add-on that is vulnerable to be installed, and\nthen for the add-on that takes advantage of that vulnerability to also be installed.\u201d Nguyen said\nFirefox will start to sandbox Firefox extensions so that they cannot share code later this year. \n\nPrevalence of so-called reuse flaws outside the context of web browsers is not new, Robertson told\nThreatpost. \u201cWe have just never seen a reuse vulnerability exploited within a browser extension like\nthis,\u201d he said. \n\nNortheastern researchers said Firefox, unlike other browser extensions, does not isolate a browser\nadd-on\u2019s functions. That, researchers say, can allow an attacker to submit an extension through the\nMozilla Foundation\u2019s vetting processes that looks harmless. However, once installed the extension\ncan work independently and leverage a second Firefox browser extension to function in ways it was\nnever intended. That could allow an attacker to manipulate a second plug-in to allow the attacker to\ninstall malware on the Mac OS X or Windows computer. \n\n\u201cExtensions can often access private browsing information such as cookies, history and password\nstores, and also system-wide resources,\u201d researchers wrote. \u201cFor instance, Firefox exposes a rich\nAPI to its extensions through XPCOM (Cross Platform Component Object Model) that allows nearly\nunrestricted access to sensitive system resources such as the filesystem and network. Consequently,\nmalicious extensions, or attacks directed at legitimate extensions, pose a significant security risk\nto users.\u201d \n\nResearchers say the Firefox extension architecture allows JavaScript extensions installed on a Mac\nOS X or Windows system to share the same JavaScript namespace. That, it says, makes it possible for\nan extension to \u201cinvoke the functionality (or modify the state) of others.\u201d \n\nRobertson points to the reliance by Firefox on the older XPCOM framework, which does not isolate\nextensions, as the source of the problem. The Mozilla Foundation, he said, had planned to support\nthe more modern Jetpack framework-similar to Google Chrome and Microsoft Edge browsers\u2013that isolated\nextension modules from each other. \n\nInstead, Mozilla Foundation announced late last year\u00a0it would support the WebExtensions framework\nthat would allow for add-on compatibility between Chrome and the Opera browsers. That project is\nstill in progress. WebExtensions restricts browser add-ons modules interaction. Once the Mozilla\nFoundation announced plans to support WebExtensions, support for the Jetpack framework dwindled. \n\n\u201cBecause risks such as this one exist, we are evolving both our core product and our extensions\nplatform to build in greater security,\u201d Firefox\u2019s Nguyen told Threatpost. \u201cThe new set of browser\nextension APIs that make up\u00a0WebExtensions, which are available in Firefox today, are inherently more\nsecure than traditional add-ons, and are not vulnerable to the particular attack outlined in the\npresentation at Black Hat Asia. As part of our electrolysis initiative \u2013 our project to introduce\nmulti-process architecture to Firefox later this year \u2013 we will start to sandbox Firefox extensions\nso that they cannot share code.\u201d \n\nRobertson said that the Mozilla Foundation has been aware of Northeastern University\u2019s research for\n\u201csome time\u201d and since then has been more vigilant in its evaluation of Firefox add-ons submitted for\ninclusion for the browser. \n\n\u201cMalicious extensions that utilize this technique would be significantly more difficult to detect by\ncurrent static or dynamic analysis techniques, or extension vetting procedures,\u201d researchers wrote.\n\u201cThe malicious extension itself does not make any sensitive API calls or resource accesses, which\nallows the malicious behavior to stay hidden.\u201d \n\nResearchers say testing of extensions should require an analysis of how an extension candidate would\ninteract with all other Firefox extensions, making the vetting process arduous. Vetting, researchers\nwrote, \u201cwould require covering the code from the entire extension pool available to Firefox users\nsince the attack could utilize code from any and multiple extensions, which would considerably\nincrease the complexity of the analysis task.\u201d \n\nAs part of its analysis, researchers uploaded a proof-of-concept extension that passed a \u201cfully\nreviewed\u201d analysis. Robertson told Threatpost he is unaware of this exploit being used by malicious\nFirefox extensions. \n\n", "polarity": 0.08161045943304007, "subjectivity": 0.44557673509286405, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/typosquatters-target-apple-mac-users-with-new-om-domain-scam/116768/", "date": "2016-03-14T00:00:00.000Z", "author": "Tom Spring", "title": "Typosquatters Target Mac Users With New \u2018.om\u2019 Domain Scam", "body": "Typosquatters are targeting Apple computer users with malware in a recent campaign that\nsnares\u00a0clumsy web surfers\u00a0who mistakenly type .om\u00a0instead of .com when surfing the web. \n\nAccording to Endgame security researchers, the top level domain for Middle Eastern country Oman\n(.om) is being exploited by typosquatters who have registered more than\u00a0300 domain names with the\n.om suffix for U.S. companies and services such as Citibank, Dell, Macys and Gmail. Endgame made the\ndiscovery last week and reports that several groups are behind the typosquatter campaigns. \n\nMac OS X users are being singled out in this typosquatting campaign with malware. According to\nEndgame, when a Mac user stumbles on one of the typosquatters\u2019 webpages a fake Adobe Flash update\npops up and attempts to trick users to install the advertising component called Genieo. \n\nGenieo, according to Endgame, is a, \u201ccommon OS X malware / adware variant\u201d that \u201ctypically\ninfiltrates the user\u2019s system by posing as an Adobe Flash update.\u201d Once on the targeted computer,\nEndgame said, Genieo drops an OS X DMG container. \u201cGenieo then entrenches itself on the host by\ninstalling itself as an extension on various supported browsers (Chrome, Firefox, Safari),\u201d wrote\nMark Dufresne, director of malware research and threat intelligence for security software company\nEndgame, in a company blogpost. \n\nWindows PC users who visit one of the typosquatter sites are redirected an ad network where they are\npeppered with online ads. \u201cDestination web pages will almost assuredly be riddled with\nadvertisements, surveys to complete for free electronics, or scareware tactics to entice users to\ndownload and execute an antivirus suite that leads to further headaches and intrusive advertising,\u201d\nDufresne said. \n\n\u201cWe haven\u2019t seen this escalate beyond typosquatters pushing the well-known Genieo malware and ad\nnetworks,\u201d Dufresne said in an interview with Threatpost. \u201cBut given the volumes of misdirected\ntraffic to .om, this could be used as an effective tool to distribute much more serious threats,\u201d he\nsaid. \n\nPart of Endgame\u2019s examination of the typosquatting campaign included looking at the registration\npatterns for the domain names and where the sites serving up malware and ads were hosted. \u201cThe 334\n.om sites related to well-known Internet properties are hosted on 15 different hosting providers,\u201d\nDufresne wrote. A large chunk of those sites were hosted by providers located in New Jersey. \n\n\u201cVery unsurprisingly, the software stack on these servers was uniform,\u201d Dufresne said. He added,\nmany of the servers behind the domains have unpatched vulnerabilities allowing remote access. \u201cThese\nhosts could easily be exploited by other actors to serve up alternate (possibly worse) malicious\ncontent than what\u2019s currently being served,\u201d he said. \n\nThreatpost\u2019s emails to .om\u2019s domain registry agency, Telecom Regulatory Authority, seeking comment\nwere not returned. \n\nThe .om domain is classified as a country code top-level domain (ccTLD) used primarily for\ncountries. The ccTLDs are not contractually bound to Internet Corporation for Assigned Names and\nNumbers, the internet domain names governing body. That leaves domain name disputes for ccTLD to be\nresolved using local laws, according to ICANN in an email to Threatpost. ICANN\u2019s policies do extend\nto generic TLDs, such as com, net, edu and gov. \n\nDufresne suspects that typosquatters are exploiting a hole in Oman\u2019s domain name registration\nprocess. He told Threatpost when Endgame tried to register a domain it was asked to verify that it\nhad the authority to registrar a specific commercial domain. \u201cIt\u2019s unclear how typosquatters\u2019 were\nable to register so many domains in such a short period of time,\u201d Dufresne said. \n\nOne thing Dufresne said he could verify, \u201cThe vast majority of .om registered domains are malicious,\naccording to our research, and they are receiving a non-trivial amount of traffic\u2026 Furthermore,\ntyposquatting techniques could be used by more persistent and patient adversaries to gain remote\naccess to targeted victims.\u201d \n\n", "polarity": 0.06215179747788442, "subjectivity": 0.42662572934312065, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/selfrando-technique-mitigates-attacks-unmasking-tor-users/118909/", "date": "2016-06-24T00:00:00.000Z", "author": "Michael Mimoso", "title": "Selfrando Technique Mitigates Attacks Unmasking Tor Users", "body": "The FBI\u2019s apparent capability to unmask users of the Tor Network has caused hand-wringing among\nthose concerned with privacy and civil liberties, many of whom are busy trying to win legal battles\nto get law enforcement to confess as to how they\u2019re doing it. \n\nA team of academics and researchers, however, have come up with a technique\u00a0called selfrando they\nbelieve defends against such attacks. \n\nThe technique will be presented next month at the Privacy Enhancing Technologies Symposium (PETS) in\nDarmstadt, Germany, but according to the researchers, the Tor Project is already conducting field\ntests in hardened versions of the Tor Browser used for testing purposes. \n\nThe team of nine includes; Mauro Conti of the University of Padua, Stephen Crane and Andrei Homescu\nof Immunant, Tommaso Frassetto, Christopher Liebchen and Ahmad-Reza Sadeghi of the Technische\nUniversit\u00e4t Darmstadt, Mike Perry and Georg Koppen of The Tor Project, and Per Larsen of the\nUniversity of California, Irvine. They have already published a paper explaining their work titled\n\u201cSelfrando: Securing the Tor Browser against De-anonymization Exploits.\u201d \n\nSelfrando is intended to work alongside existing mitigations in the Tor Browser that protect against\nmemory-corruption attacks. Technologies such as Address Space Layout Randomization (ASLR), however,\nare getting long in the tooth. Numerous exploits exist that bypass ASLR, which the researchers said\nwas implemented more for its compatibility with compilers and operating systems than security. ASLR\nrandomizes where executables will loaded into memory, in theory making it difficult for attackers\ndetermine where to point attacks. \n\nSelfrando, the researchers wrote, is a load-time randomization technique that makes it impossible\nfor attackers to observe binaries during download or after they\u2019re on the disk. It improves security\nin comparison to ASLR while preserving the same features that make ASLR attractive as a mitigation,\nthe researchers wrote. \n\n\u201cWhile technically challenging, our use of load-time function layout permutation ensures that the\nattack surface changes from one run to another,\u201d the researchers describe. \u201cLoad-time randomization\nalso ensures compatibility with code signing and distribution mechanisms that use caching to\nefficiently serve millions of users.\u201d \n\nThe selfrando framework can be applied to software such as Tor without requiring changes to the Tor\nBrowser source code, for example. The researchers wrote that an implementation would not require a\nreworking of binaries or the need for a custom compiler. They also point out that it increases\nentropy relative to ASLR, making it resilient to guessing attacks. \n\n\u201cOur main objective is to substantially raise the costs for attackers to exploit memory-corruption\nvulnerabilities,\u201d the researchers wrote. \n\nIn a section of the paper describing the security afforded by selfrando, the researchers compare its\nresistance to brute-force attacks against ASLR. The introduction of more entropy into selfrando\nlessens the chances that existing bypass mitigations against ASLR would work against selfrando. \n\n\u201cSelfrando, on the other hand, applies more fine-grained function permutation,\u201d the researchers\nwrote. \u201cThis means the randomization entropy does not depend on the size of the address space, as it\nis the case for ASLR, but on the number of functions in the randomized binary.\u201d \n\nThe researchers also studied real-world attacks against the Tor Browser, most of which attempt\nexploits against vulnerable heaps or buffers, resulting in code execution, information leakage or\nmitigation bypasses. The paper goes into detail how selfrando denies attackers the ability to\ndisclose an entire heap. For example, this leads the team to conclude that selfrando can defend\nagainst the FBI\u2019s attack, unless an attacker can successfully disclose the complete heap and data\nsection. \n\nThe FBI\u2019s attack was at the center of a court case in Seattle where a Vancouver teacher was facing\nchild pornography possession charges. The FBI refused to share details about what it calls a network\ninvestigative technique used to de-anonymize Tor Browser users visiting a dark web child porn site.\nThe judge in the case was forced to exclude evidence gathered by the FBI\u2019s exploit from the trial. \n\nThe defense argued that without an understanding of how the FBI\u2019s exploit works, it would be\nimpossible to determine whether the illegal images found on the defendant\u2019s computer were put there\nby him. The exploit, court documents show, bypassed the Tor Browser\u2019s anonymity protections and\ngathered IP and MAC addresses and other system data from visitors to the site over a 13-day period. \n\nMozilla had previously filed a motion related to the case asking the FBI to share its exploit with\nthe company so that the vulnerability being exploited could be patched in the Firefox browser. The\nTor Browser is partially built on Firefox code. \n\n", "polarity": 0.05450450450450452, "subjectivity": 0.4594594594594595, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/judge-tosses-evidence-gathered-by-fbis-tor-exploit/118339/", "date": "2016-05-27T00:00:00.000Z", "author": "Michael Mimoso", "title": "Judge Tosses Evidence Gathered by FBI\u2019s Tor Exploit", "body": "The FBI\u2019s refusal to share details about a network investigative technique it used to gather\nevidence against a Vancouver teacher charged with possession of child pornography has forced a\nfederal judge\u2019s hand to exclude the evidence from trial. \n\nThe NIT used by the FBI to hack the Playpen website is believed to have de-anonymized users visiting\nthe site who were using the Tor browser. \n\nJudge Robert J. Bryan, a U.S. District Judge, on Wednesday granted defendant Jay Michaud\u2019s motion to\nexclude the evidence. \n\n\u201cFor the reasons stated orally on the record, evidence of the N.I.T., the search warrant issued\nbased on the N.I.T., and the fruits of that warrant should be excluded and should not be offered in\nevidence at trial,\u201d Bryan wrote. \n\nMichaud, a 62-year-old teacher, was arrested last July in Seattle and was charged with possession of\nchild pornography he allegedly downloaded from a dark web site called Playpen. The Washington Post\nreported that FBI seized the site\u2019s servers and in February 2015 launched the exploit on the site\nleading to charges against 137 people. On Feb. 17, 2016, Michaud\u2019s defense team was granted a motion\ncompelling the government to produce evidence related to the network investigative technique (NIT)\nit deployed. \n\nMichaud\u2019s defense team filed a new motion seeking the evidence be tossed after several requests in\ndiscovery to see the exploit and learn more about how it worked were rebuffed by the FBI. \n\nThe defense wrote in a motion filed May 9 that the FBI\u2019s use of its NIT against the site and Tor\nusers exposed Michaud\u2019s computer and storage devices seized under the warrant to third-party attacks\nassociated with the distribution of child pornography. The defense suggests\u2014and has computer science\nand experts corroborating\u2014that the NIT could have allowed third parties to use Michaud\u2019s computer to\nremotely transmit and store the illegal content. The motion quotes Dr. Matthew Miller, a University\nof Nebraska computer science professor: \n\n\u201c[w]ithout knowing what exploit was used by the FBI in this case,\u201d along with other discovery that\nthe Court has ordered, it is not possible to \u201cdetermine whether the files [i.e. child pornography]\nthat the government says were located on various storage devices were put on those devices by Mr.\nMichaud.\u201d \n\nThe FBI\u2019s exploit bypassed the anonymity protections afforded by the Tor browser and gathered IP\naddresses, MAC addresses and other system data from visitors to the site over a 13-day period.\nMozilla had also previously filed a motion asking the FBI to share its exploit so that the\nvulnerability being attacked could be patched in the Firefox browser. The Tor browser is partially\nbuilt on Firefox code. The FBI argued that exposing the exploit against Tor would not provide any\ninsight as to how the FBI gathered data on visitors to Playpen. \n\n\u201cKnowing how someone unlocked the front door provides no information about what that person did\nafter entering the house,\u201d special agent Daniel Alfin wrote, \u201cDetermining whether the government\nexceeded the scope of the warrant thus requires an analysis of the NIT instructions delivered to\nMichaud\u2019s computer, not the method by which they were delivered.\u201d \n\nThe defendant\u2019s most recent motion argued that the FBI\u2019s refusal to hand over details on its exploit\ninterferes with Michaud\u2019s ability to get a fair trial. \n\n\u201cThe problem for the Government is that, even if all of that were true, the situation in this case\nwould remain the same: a choice between deferring to the Government\u2019s position that it will not or\ncannot comply with the Court\u2019s discovery order and upholding Mr. Michaud\u2019s constitutional rights to\neffective representation and a fair trial,\u201d Michaud\u2019s attorneys wrote. \u201cAs detailed in the\naccompanying declarations, the discovery ordered by the Court goes to the heart of Mr. Michaud\u2019s\ndefense. The Supreme Court has already made plain that, in situations like this, a defendant\u2019s\nconstitutional rights must prevail.\u201d \n\n", "polarity": 0.09509121830550402, "subjectivity": 0.4264803648732221, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/outdated-unpatched-software-rampant-in-businesses/117976/", "date": "2016-05-10T00:00:00.000Z", "author": "Tom Spring", "title": "Outdated, Unpatched Software Rampant in Businesses", "body": "We all know outdated software, browsers, and plugins are unsafe, but how unsafe? \n\nDuo Labs has taken a hard look at the dangers of outdated software in a report released Tuesday\u00a0that\nsaid\u00a025 percent of business systems risk exposure to 700 possible vulnerabilities. The most insecure\nsoftware, Duo reported, is Microsoft\u2019s family of Internet Explorer browsers. The most secure\nplatform, Apple\u2019s Mac OS. \n\nDuo Labs culled its research from the analysis of 2 million devices used by a wide range of\nbusinesses ranging from small, medium to Fortune 500.\u00a0Up-to-date software is more important than\never, said Mike Hanley, director of Duo Labs, considering the changing security risk landscape and\nmassive adoption of cloud apps used inside and outside business. \n\nMicrosoft\u2019s Flawed Browsers Family \n\nWith its report, Duo Labs didn\u2019t pull any punches, slamming Microsoft\u2019s Internet Explorer browser\nand recommending that users ditch IE and Edge for Google\u2019s Chrome browser. Twenty-five percent of\nall Windows devices are running outdated and unsupported versions of Internet Explorer, according\nthe report. \n\nAt the same time, Duo was smitten with Google\u2019s Chrome browser. That\u2019s chiefly because of Google\u2019s\nautomatic updating policy. Eighty-two percent of Chrome users have up-to-date browsers compared with\n58 percent of Edge users and IE 11 users, 66 percent of Firefox users and 49 percent of Mac OS\nusers. \n\nThe problem, Duo\u2019s numbers reveal, is not slow migration\u00a0to the more secure Windows 10, but rather a\nslow adoption rate to newer versions of Windows Internet Explorer in older version of the OS. While,\n68 percent of all Windows devices are running the latest version of IE 11 or Edge 12/13, another 25\npercent are running an outdated version of IE 10 or prior. \n\n\u201cIf you\u2019re a business still running the 10-year-old version of Internet Explorer 8 you really have\nto start asking yourself why,\u201d Hanley said. \n\nFlash vs Java \n\nJava and Flash versions on browsers are most likely outdated. As a safety measure, many firms\nuninstall Java and Flash from browsers. \n\nDuo Labs\u2019 numbers paint a bleak picture when it comes to Adobe\u2019s Flash and Oracle\u2019s Java browser\nplugins. According to Duo, these two plugins are highly problematic and should be removed from\nbusiness systems by companies interested in reducing the number of attack vectors to devices. \n\nSixty percent of Flash users are running an out-of-date version, while 72 percent have an outdated\nversion of Java \u2013 exposes systems to hundreds of vulnerabilities. Flash and Java are notorious\ntargets, used by attackers in exploit kits to gain access to their machines, Duo Lab\u2019s reports. \n\nMac vs PC \n\nKey findings by researchers confirm many of the assumptions we have when it comes to the age-old\nquestion: Which is more secure Apple or Windows? \n\nMac OS trumps Windows by a whopping 53 percent margin when it comes to users running either the\nfully patched latest version of OS X (or the previous version) compared to 35 percent of Windows\nusers running Windows 10 and 8.1. \n\nHowever, the Mac OS is no bastion of security. Eight percent of Apple users are running unsupported\nversions of OS X (10.8 and earlier) that cannot receive security updates. Compare that to 2 percent\nof Windows users running unsupported OS versions (including Windows 8 and XP). \n\nTo Update Or Not, That is the Question \n\nThe eternal question many business face when it comes to updating software is, if I run an update am\nI going to break a critical line of business application? \u201cThat\u2019s fair question,\u201d Hanley said. \u201cAs\nsoftware developers, if we introduce bugs that cause bad experiences we are counter-incenting users\nto run updates. We have to be conscious of\u00a0that.\u201d \n\nCompanies need to think hard about the exposure they have put themselves at risk to, Hanley said.\n\u201cFor a lot of companies, the monetary damage and damage to reputation will be much greater than the\ncost of updating an app.\u201d \n\n", "polarity": 0.058888888888888886, "subjectivity": 0.5779166666666667, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/motion-filed-asking-fbi-to-disclose-tor-browser-zero-day/118043/", "date": "2016-05-12T00:00:00.000Z", "author": "Michael Mimoso", "title": "Motion Filed Asking FBI To Disclose Tor Browser Zero Day", "body": "Mozilla on Wednesday filed a motion with the U.S. District Court in Tacoma, Wa., asking the\ngovernment to disclose a vulnerability it exploited in the Tor Browser and Firefox. The FBI used the\nzero-day to hack a child pornography site and de-anonymize users visiting the site using the Tor\nBrowser. \n\nMozilla\u2019s motion asks that the government disclose the vulnerability at least 14 days before it\nfulfills a previous motion granted to the defendant Jay Michaud requiring the FBI to hand over\ndetails on the exploit to the defense team under a protective order. \n\n\u201cCourt ordered disclosure of vulnerabilities should follow the best practice of advance disclosure\nthat is standard in the security research community,\u201d wrote Mozilla chief legal and business officer\nDenelle Dixon-Thayer. \u201cIn this instance, the judge should require the government to disclose the\nvulnerability to the affected technology companies first, so it can be patched quickly.\u201d \n\nThe Tor Browser is partially built on open source Firefox code, but also includes proxy code that\nencrypts and anonymizes users\u2019 sessions as they move about the Internet. Mozilla argues that the FBI\nhad previously exploited the Tor Browser and that it did so in this case, despite a refusal from the\ngovernment to acknowledge that it targeted Tor/Firefox code. \n\n\u201cAbsent great care, the security of millions of individuals using Mozilla\u2019s Firefox Internet browser\ncould be put at risk by a premature disclosure of this vulnerability,\u201d Mozilla said in its motion.\n\u201cThis risk could impact other products as well. Firefox is released under an open source license.\nThis means that as Firefox source code is continuously developed, it is publicly available for\ndevelopers to view, modify, share, and reuse to make other products like the Tor Browser.\u201d \n\nMichaud, a 62-year-old teacher, was arrested last July in Seattle and was charged with possession of\nchild pornography he allegedly downloaded from a dark web site called Playpen. The Washington Post\nreported that FBI seized the site\u2019s servers and in February 2015 launched the exploit on the site\nleading to charges against 137 people. On Feb. 17, 2016, Michaud\u2019s defense team was granted a motion\ncompelling the government to produce evidence related to the Network Investigative Technique (NIT)\nit deployed. \n\n\u201cAt this point, no one (including us) outside the government knows what vulnerability was exploited\nand whether it resides in any of our code base,\u201d Dixon-Thayer said. \u201cThe judge in this case ordered\nthe government to disclose the vulnerability to the defense team but not to any of the entities that\ncould actually fix the vulnerability. We don\u2019t believe that this makes sense because it doesn\u2019t\nallow the vulnerability to be fixed before it is more widely disclosed.\u201d \n\nThis case thrusts the government stockpiling and use of zero day exploits back into the spotlight,\nscant weeks after it is thought to have purchased an exploit from a third party to hack into an\niPhone belonging to one of the San Bernardino terrorists. The FBI has not shared details of how it\ncracked the phone with Apple, and if it did indeed purchase an exploit for a previously unpatched\nvulnerability, that flaw remains exposed to others. \n\nLast September, the government did hand over a redacted version of its Vulnerabilities Equities\nProcess, a document describing its policy on vulnerability use and disclosure. The version of the\ndocument has many large sections that are redacted, including the specific steps that agencies go\nthrough when evaluating whether to release information about a newly discovered vulnerability. \n\n\u201cVulnerabilities can weaken security and ultimately harm users. We want people who identify security\nvulnerabilities in our products to disclose them to us so we can fix them as soon as possible,\u201d\nDixon-Thayer said.\u00a0\u201cWe aren\u2019t taking sides in the case, but we are on the side of the hundreds of\nmillions of users who could benefit from timely disclosure.\u201d \n\n", "polarity": 0.06848601848601849, "subjectivity": 0.3547238797238797, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/angler-exploit-kit-learns-new-tricks-finds-home-on-popular-website/116509/", "date": "2016-02-26T00:00:00.000Z", "author": "Tom Spring", "title": "Angler Exploit Kit Learns New Tricks, Finds Home On Popular Website", "body": "Researchers report Angler Exploit Kit attacks have become more brazen and are now targeting top\nwebsites with new tricks that can evade browser-based antimalware protection. \n\nKarl Sigler, a SpiderLabs researcher at Trustwave, told Threatpost his lab found the Angler Exploit\nKit on a popular website for the second time in a week, exposing just under million visitors monthly\nto possible TeslaCrypt ransomware infections. Sigler said Trustwave researchers spotted the exploit\non Extendoffice[.]com, a site that sells software for customizing Microsoft Office software\napplications. \n\nA number of things stuck out as unique about this iteration of Angler Exploit Kit, according to\nTrustwave. One was the fact that attackers were targeting a destination site as opposed to a random\nwebpage that had traffic driven to it via phishing attacks, Sigler said. According to site analysis\ntool Compete.com, Extendoffice attracted 963,000 unique visitors in January. \n\n\u201cThat many not seem like a lot of traffic for a website, but for a watering-hole attack, they hit\nthe jackpot,\u201d Sigler said. \n\nThe site Extendoffice appears to be owned by China-based Addin Technology and did not reply to\nThreatpost\u2019s requests for comment. Sigler said, Trustwave also notified the site\u2019s owner and its\nhosting company, alerting both to the vulnerability last week. He said the site was still attempting\nto distribute the Angler Exploit Kit as of Thursday. He said Trustwave received an email Friday\nfrom\u00a0the site\u2019s domain hosting firm claiming the vulnerability has been patched. Trustwave said it\nhasn\u2019t verified that claim yet. \n\nAn outdated version of the content management system Joomla (version 3.4.3) was likely to blame for\nthe vulnerability. Sigler said\u00a0that in December\u00a0Joomla released version 3.4.6 of its software that\nplugged a known object injection remote command execution vulnerability in the version 3.4.3. \n\nThreatpost reported last week the SANS Institute\u2019s Internet Storm Center has noticed that exploit\nkits are now targeting Joomla sites. \n\n\u201cIt\u2019s an unfortunate case where a fairly popular website was redirecting its visitors to the Angler\nExploit Kit,\u201d Sigler said. If successful, attackers dropped the TeslaCrypt ransomware on the victim\nmachine, he said. \n\nAnother interesting aspect of this version of Angler was the way the kit\u00a0was being distributed and\nits ability to avoid detection by browsers such as Firefox that use the JavaScript engine\nSpiderMonkey. SpiderMonkey has the capability to detect and report instances of malware. \n\nSigler explains that because Angler exclusively targets Microsoft\u2019s Internet Explorer web browsers,\nthe attackers didn\u2019t want to risk being discovered or lose any \u201cvaluable\u201d traffic to Firefox or\nGoogle\u2019s Chrome browser traffic. \n\n\u201cWe found some interesting tricks in the (JavaScript) deobfuscated code which were likely used in\norder to deceive and bypass security scanning engines,\u201d wrote Rami Kogan in Trustwave blog outlining\nthe discovery. \n\nAccording Trustwave research, the attackers were able to inject JavaScript code onto the\nExtendoffice site that would be executed differently based on what browser a visitor was using. \n\n\u201cRunning this line of code on IE returns the number 0 (zero) which is later used as a counter in a\ndeobfuscation loop. Running the same line of code on Firerfox, however, returns NaN (Not a Number)-\nwhich basically breaks the flow of the code,\u201d Kogan wrote. Using this method attackers managed to\nexecute a string of code and bypass the JavaScript evaluation (eval) step, according to Kogan. \n\nThis method of obfuscation is so effective, Sigler said, that it is able to sneak past most of the\n67 private scanning engines behind Google\u2019s VirusTotal, a free service that analyzes URLs red flags\nmalicious content detected by antivirus engines and website scanners. \n\nFebruary has been a busy month for the Angler Exploit Kit. Along with targeting small sites such as\nExtendoffice this month, the exploit also targeted Skype users via malicious ads and is now\ntargeting vulnerabilities in Microsoft\u2019s Silverlight. \n\n", "polarity": 0.12903409090909088, "subjectivity": 0.520530303030303, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/lastpass-patches-ormandy-remote-compromise-flaw/119533/", "date": "2016-07-28T00:00:00.000Z", "author": "Michael Mimoso", "title": "LastPass Patches Ormandy Remote Compromise Flaw", "body": "LastPass has patched a vulnerability in its Firefox add-on found by\u00a0Google Project Zero researcher\nTavis Ormandy that allows attackers complete remote compromise of the password manager, . \n\nThe divisive Ormandy submitted a bug report on Tuesday to LastPass after a series of tweets hinting\nat serious problems in the password manager. Ormandy has been behind a number of high-profile\nprivate bug disclosures to major security vendors in the past, including Kaspersky Lab, Symantec,\nTrend Micro, Sophos and others. \n\nAre people really using this lastpass thing? I took a quick look and can see a bunch of obvious\ncritical problems. I'll send a report asap. \n\n\u2014 Tavis Ormandy (@taviso) July 26, 2016 \n\n \n\nFull report sent to LastPass, they're working on it now. Yes, it's a complete remote compromise.\nYes, I promise I'll look at 1Password. \n\n\u2014 Tavis Ormandy (@taviso) July 27, 2016 \n\n \n\nOrmandy published a report on the Project Zero bug repository that explains how LastPass 4.1.20a for\nWindows add-on injects elements and event handlers into a webpage; a click event handler, he said,\ninstructs the add-on to create a privileged iframe. \n\nOrmandy wrote: \n\n\u201cA page can click the LastPass icon programatically with javascript by creating a MouseEvent() with\nthe right x:y coordinates. Normally a page would not be permitted to navigate to a resource:// url,\nbut this just asks the add-on to do it. \n\nThe frame communicates with the add-on by posting messages to the window, and an eventhandler on the\nwindow determines if it\u2019s trusted or not by checking the origin. But that does not make sense,\nbecause the window belongs to the attacker so they can just insert their own eventhandler before\nyours and modify legitimate messages!\u201d \n\nOrmandy provided sample code that he said should trick LastPass into processing an openURL command. \n\n\u201cThis allows access to any of the privileged LastPass RPCs, so this is a complete compromise of the\nlastpass addon,\u201d he wrote. \u201cFrom here an attacker can create and delete files, execute script, steal\nall passwords, log victims into their own lastpass account so that they can steal anything new saved\nthere, etc, etc.\u201d \n\nLastPass said this attack requires a hacker to trick a user into visiting a website hosting an\nexploit, either via a phishing message or other means. \n\n\u201cFirst, an attacker would need to successfully lure a LastPass user to a malicious website,\u201d\nLastPass said in a statement. \u201cOnce there, Ormandy demonstrated that the website could then execute\nLastPass actions in the background without the user\u2019s knowledge, such as deleting items.\u201d \n\nLastPass said Ormandy\u2019s bug affects only Firefox users and an update will be pushed to the browser\nwith the patched version, 4.1.21a; a download of the patch is also available. LastPass said LastPass\n3.0 is not affected by this vulnerability, and neither are other browsers. Ormandy was given an\nunnamed cash reward by LastPass, which he donated to Amnesty International. \n\nAlso on Wednesday, researcher Mathias Karlsson of Detectify Labs disclosed details of a separate\nLastPass flaw that was patched more than a year ago, LastPass said. \n\nThe vulnerability, Karlsson said, is in the LastPass browser extension and allowed him to steal user\npasswords just by forcing them to visit a website. He earned a $1,000 bounty from the company. \n\nKarlsson said the extension added HTML code to every page he visited, prompting him to investigate\nfurther. Karlsson wrote: \n\n\u201cThe bug that allowed me to extract passwords was found in the autofill functionality. First, the\ncode parsed the URL to figure out which domain the browser was currently at, then it filled any\nlogin forms with the stored credentials. However, the URL parsing code was flawed (bug in URL\nparsing? shocker!). \n\nBy browsing this URL:\u00a0http://avlidienbrunn[.]se/@twitter[.]com/@hehe[.]php\u00a0the browser would treat\nthe current domain as\u00a0avlidienbrunn.se\u00a0while the extension would treat it as\u00a0twitter.com. Since the\ncode only URL encodes the last occurence of\u00a0@, the actual domain is treated as the username portion\nof the URL.\u201d \n\nFrom this example, Karlsson showed how the LastPass extension would fill in his form with his stored\nTwitter credentials; he could then extract credentials for any site in this manner. \n\n\u201cAll browser clients were updated and Karlsson confirmed our fix at that time, requiring no action\nfrom our users,\u201d LastPass confirmed. \n\n", "polarity": 0.1075506810262908, "subjectivity": 0.5125673107380425, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/new-collision-attacks-against-3des-blowfish-allow-for-cookie-decryption/120087/", "date": "2016-08-24T00:00:00.000Z", "author": "Michael Mimoso", "title": "New Collision Attacks Against 3DES, Blowfish Allow for Cookie Decryption", "body": "RC4 apparently is no longer the lone pariah among smaller cryptographic ciphers. Already broken and\nset for deprecation by the major browser and technology makers, RC4 could shortly have company in\nTriple-DES (3DES) and Blowfish. \n\nResearchers are set to present new attacks against 64-bit ciphers that allow for the recovery of\nauthentication cookies from 3DES-protected traffic in HTTPS and the recovery of usernames and\npasswords from OpenVPN traffic, which is secured by default by Blowfish. \n\nOpenSSL, meanwhile, was already scheduled\u00a0to release 1.1.0 this week and coinciding with that\nrelease is the decision to\u00a0remove 3DES from the 1.1.0 default build. It\u00a0will also update the source\ncode in its Git repository to reflect a\u00a0drop\u00a0of 3DES\u2019\u00a0designation as a cipher from high to medium in\n1.0.2 and 1.0.1; users will see this in a future release. Users will have configure 3DES at build-\ntime in 1.1.0 to enable it. OpenVPN is also expected to release version 2.3.12 this week with a\nwarning about Blowfish weaknesses and secure configuration advice. \n\nResearchers Gaetan Leurent and Karthikeyan Bhargavan of Inria, France, will formally present their\npaper, \u201cOn the Practical (In-)Security of 64-Bit Ciphers\u201d in October at the ACM Conference on\nComputer and Communications Security in Austria. \n\nThe attack, called SWEET32, is a collision attack against these ciphers in CBC mode, or cipher block\nchaining; 64-bit ciphers such as Blowfish and 3DES are still supported in TLS, IPsec, SSH and other\nprotocols. The researchers said that 3DES support for HTTPS servers that show in Alexa\u2019s top website\nlist hovers between 1 percent and 2 percent of traffic on Firefox, Internet Explorer, Chrome and\nAndroid 5.0 integrated browser. \n\n\u201cThe browsers are not killing 3DES; they\u2019re waiting until there\u2019s less use. Right now, 1 percent to\n2 percent is a lot of traffic and they\u2019re not comfortable with it,\u201d Leurent told Threatpost. \n\nWhile this is not a massive Internet-wide attack, Leurent said that developers and enterprises\nshould treat it as they would the deprecation of RC4. \n\n\u201cIt\u2019s something to get rid of because it\u2019s a security problem,\u201d he said. \u201cWe don\u2019t have very good\nsecurity when we use 3DES.\u201d \n\nIn July 2015, Belgian researchers published work that described a new attack against RC4 that\nhastened its deprecation. New biases in the cipher were discovered that allowed for the rapid\nrecovery and decryption of cookies (inside of 72 hours) on sites running TLS with RC4 as well as\nWPA-TKIP. RC4 was much more widely deployed at the time and merited more immediate attention because\nof the Belgian attack. Their work was preceded by a 2013 attack developed by Daniel Bernstein of the\nUniversity of Illinois, Chicago that was also a feasible attack against RC4 on a site protected by\nTLS. \n\nLeurent\u2019s attack uses a well-known means of targeting traffic protected by these smaller ciphers in\norder to retrieve the cookies and credentials, he said. \n\n\u201cWhen you encrypt lots of message blocks with the same key, at some point, you expect to have a\ncollision with the inputs of the cipher and you can see a collision in the outputs of the cipher.\nWhen we detect this collision in the output, we know there had to be a collision in the input,\u201d\nLeurent explained. \u201cBecause of way CBC mode works, when we have a collision on the input, this gives\nus the XOR of two message blocks. It\u2019s a well-known attack on the CBC mode that if you encrypt too\nmany blocks, at some point you have a collision. This gives you the XOR of two different message\nblocks.\u201d \n\nBuilding on this, an attacker can target a victim\u2019s authentication cookie by luring them to a site\nthey control where they can inject JavaScript into the user\u2019s browser that will repeatedly send HTTP\nqueries to whatever site the victim is logged into. Each request will include the authentication\ncookie for that site, and if the attacker is able to send at least 232 queries and capture all those\nrequests, they\u2019re bound to see a collision and eventually recover the session cookie. \n\n\u201cWhat makes it practical is 232 is a small number,\u201d Leurent said, pointing out that AES and newer\nciphers provide 128-bit security, double that of 3DES and Blowfish. \u201cThe first collision is expected\nafter about 32 GB of data (an attacker needs several collisions to get the cookie.) Problems start\nto appear after 32 GB, and that\u2019s not a lot of traffic. That\u2019s well known to cryptographers, but\nseems to be less known on the more practical side of security.\u201d \n\nThe simplest mitigation, Leurent said, is to stop using small block ciphers such as these and move\nto AES, for example. The implementation of shorter sessions before rekeying is also a good\nmitigation, he said, because that makes the attack more expensive. But it\u2019s also more expensive to\nchange keys more frequently, meaning there has to be a tradeoff at some point. \n\n\u201cThe message is to try to get rid of legacy crypto that\u2019s not that good,\u201d Leurent said. \u201cEven if\nattacks are not that practical, it\u2019s good to get rid of them.\u201d \n\n", "polarity": 0.11215041248060116, "subjectivity": 0.42992485501919475, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/google-domain-enables-hsts-protection/119597/", "date": "2016-08-01T00:00:00.000Z", "author": "Tom Spring", "title": "Google Domain Enables HSTS Protection", "body": "Google is adding HTTP Strict Transport Security (or HSTS) to the\u00a0Google.com domain, an extra layer\nof protection that prevents visitors from using a less secure HTTP connection. \n\nBy using HSTS, visitors following HTTP links to Google.com will be automatically redirected to the\nmore secure HTTPS version of the Google domain. The effort, announced Friday, is meant to protect\nagainst protocol downgrade attacks, session hijacking and man-in-the-middle attacks that exploit\ninsecure web connections. \n\n\u201cHSTS prevents people from accidentally navigating to HTTP URLs by automatically converting insecure\nHTTP URLs into secure HTTPS URLs. Users might navigate to these HTTP URLs by manually typing a\nprotocol-less or HTTP URL in the address bar, or by following HTTP links from other\nwebsites,\u201d\u00a0wrote\u00a0Jay Brown, a senior technical program manager for security at Google in blog post\non Friday. \n\nThe HSTS mechanism ensures that if their is an HTTPS connection the browser will use it. If no HTTPS\nversion of the site is available the less secure HTTP version of the site is still available. \n\nThe introduction of HSTS impacts traffic not only to the Google search engine, but it will also\nsecure traffic to other Google services that use the Google.com domain such as Google Alerts,\nAnalytics and Maps. Google has already added HSTS to its YouTube service. \n\nGoogle has been a staunch supporter of HTTPS and has rolled out support for HTTPS encrypted\ncommunications across a large swath of its internet properties under the banner of its HTTPS\neverywhere initiative, announced at Google I/O in 2014. Much like the HTTPS initiative,\u00a0many within\nthe security industry have been advocating for more websites to implement HSTS such as the\nElectronic Frontier Foundation. \n\n\u201cWithout HSTS, browsers have no way of knowing that a website should be delivered securely, and so\ncannot alert you when a website that ought to be loaded securely (e.g. your bank\u2019s website) is\ninstead loaded via a normal connection (i.e. the unencrypted version the attacker sends to you\ninstead),\u201d wrote Jeremy Gillula, senior staff technologist at the EFF. HSTS solves the problem and\ninstructs the servers to send a message to the browser to request the encrypted version of the web\npage. \n\nWhile the HSTS security policy was proposed in 2012 within the Internet Engineering Task Force it\nhas taken years to get the support of major websites and browser companies and to work the kinks out\nof its implementation. Today, baked into Chrome, Safari, Firefox, Edge and IE 11 is support for\nHSTS. However, some Google-owned domains and many other non-Google sites concede flipping the switch\non HSTS support isn\u2019t as simple as they would like because of issues surrounding sites that contain\nmixed content, bad HREFs, and redirects to HTTP. \n\nGoogle blamed a less than perfect implementation of HSTS for breaking its widely popular Santa\nTracker website just before Christmas in 2015. \n\n\u201cWe\u2019ve turned on HSTS for www.google.com, but some work remains on our deployment checklist,\u201d Brown\nwrote. \u201cIn the immediate term, we\u2019re focused on increasing the duration that the header is active\n(\u2018max-age\u2019). We\u2019ve initially set the header\u2019s max-age to one day; the short duration helps mitigate\nthe risk of any potential problems with this roll-out.\u201d \n\nIn other implementations of HSTS, the duration can be much longer (up to a year). As security expert\nTroy Hunt, creator of the cyber-breach service Have I Been Pwned? and author at Pluralsight points\nout in a blog post regarding HSTS: \n\n\u201cOnce this header is returned by the site, the browser will not make an HTTP request to the site no\nmatter how hard you try and instead it\u2019ll do (return a) 307 (redirect error). It\u2019ll do that for the\nnumber of seconds described in the \u201cmax-age\u201d attribute (that 315\u2026 value is one year in seconds)\nafter which the browser could make an insecure request\u2026 until the response header is set again the\nnext time the above process is repeated.\u201d \n\n", "polarity": 0.09365501519756837, "subjectivity": 0.4557244174265451, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/putting-apple-bug-bounty-rewards-in-perspective/119794/", "date": "2016-08-10T00:00:00.000Z", "author": "Michael Mimoso", "title": "Putting Apple Bug Bounty Rewards in Perspective", "body": "Admittedly, the payouts for Apple\u2019s bug bounty announced last week at Black Hat drew mixed reactions\nranging from reasonable to raucously funny. \n\nApple made a big splash at the annual hacker conference, first via a last-minute announcement that\nwell-regarded Ivan Krstic would be giving a talk on some of the inner workings of iOS 10 security\nfeatures, and then during Krstic\u2019s talk, the curtain was pulled back on the bounty program. \n\nApple is offering researchers a maximum payout of $200,000 for SecureBoot firmware compromises. Five\nareas of iOS are in scope for payouts ranging at the low end of $25,000 for sandbox escapes, upwards\nto $50,000 for bugs allowing access to iCloud accounts on Apple\u2019s servers and code execution bugs at\nthe kernel level, to $100,000 for exploits against the Secure Enclave Processor. \n\n \n\nGiven that it\u2019s well known the black market has paid seven figures in the past for iOS bugs and last\nyear, zero-day buyers Zerodium offered a $1 million iOS bounty, Apple\u2019s payouts do pale a tad\ndespite being among the highest corporate bug bounty payouts on record. \n\nThen yesterday, Exodus Intelligence announced its Research Sponsorship Program, an acquisition\nprogram focusing on zero-day and N-day vulnerabilities and exploits that further dampened the hype\naround Apple\u2019s new program. Exodus\u2019 so-called zero-day Hitlist, or payment structure, severely\nundercuts Apple\u2019s bounty program by offering a $500,000 maximum for iOS 9.3+ bugs. \n\nExodus is also offering six figures for Google Chrome and Microsoft Edge zero days ($150,000 and\n$125,000 respectively), $80,000 for Firefox, $75,000 for Windows 10 local privilege escalation zero-\ndays, and $60,000 each for 0day in Adobe Flash and Reader. \n\nExodus also described a unique payment system that includes bonuses paid out until the zero day is\npatched. \n\n\u201cFor each new Zero-Day acquired,\u00a0Exodus\u00a0will offer the researcher an initial payment, received after\nthe request is reviewed and accepted. Once accepted, the researcher could receive payments every\nquarter the Zero-Day exploit is still alive. The specific values of the initial payment and\nquarterly bonus will be included in an offer presented to the researcher, following the review of\ntheir work. Additionally,\u00a0Exodus\u00a0also offers payment in the form of Bitcoin for Zero-Day research.\u201d \n\nApple\u2019s bug bounty was received with applause at Black Hat and Apple was generally considered the\nlast holdout among major technology vendors to reward researchers for disclosing security flaws. \n\n\u201cThis is somewhat of a no-brainer for Apple\u2014in terms of increasing the security of their devices and\nOSes,\u201d said Synack director of research Patrick Wardle, a longtime Mac OS X bug hunter who has\ndisclosed numerous issue to Apple. \u201cApple has a solid security team comprised of intelligent\nindividuals. However, it\u2019s unlikely that any company\u2019s security team can provide the same coverage\nas a well-managed bug-bounty program. Generally speaking, having more \u2018eyes\u2019 looking for bugs is a\ngood thing.\u201d \n\nApple has limited its bounty program to a couple dozen researchers, Krstic said at Black Hat.\nDespite the program being invitation-only at first, Krstic said that researchers who submit bugs in\nany of the classes in scope could also be considered. \n\n\u201cThe scope is pretty tight, only extending to iOS and iCloud vulnerabilities. It would make sense\nfor Apple to extend it to other properties \u2014 they likely will eventually, assuming the current\nprogram is successful,\u201d said researcher Randy Westergren Jr., who has privately disclosed security\nissues to Adobe, Verizon, United Airlines and Marriott hotels among others. \u201cI think Apple joining\nthe bug bounty club was inevitable, especially since most of its serious competitors have been\noperating theirs for some time. It continues to send the right message to other top tier\norganizations that are holding out: bug bounties are a step in the right direction.\u201d \n\nApple would not say what the tipping point was for it to move forward with a bug bounty. But iOS in\nparticular has been in the headlines for months starting with the FBI\u2019s very public fight against\nApple for help in unlocking the San Bernardino terrorist\u2019s iPhone earlier this year. Needless to\nsay, iOS bugs are at the top of most hitlists beyond Exodus Intelligence\u2019s. \n\n\u201cAs Apple often does, it approaches things in a calculated, somewhat cautious manner. Due to recent\nevents (FBI vs. Apple), iOS is somewhat on the forefront of security \u2013 both in the press and on\npeople\u2019s minds,\u201d Wardle said. \u201cAlso, there are companies who are willing to pay a ton of money for\niOS bugs. Both these things, make it quite reasonable for Apple to begin their bug bounty program\nwith iOS and iCloud.\u201d \n\nThe priorities of the rewards show that Apple doesn't care too much about the bugs real attackers\ncare about most. https://t.co/KpdVZN7aOJ \n\n\u2014 the grugq (@thegrugq) August 5, 2016 \n\n \n\n99.9% of \"researchers\" after reading the headlines about Apple's bug bounty: \n\n\"Yesssssssssssss\" \n\nAfter reading the details: \n\n\"Oh\u2026\" \n\n\u2014 Andreas Lindh (@addelindh) August 5, 2016 \n\n \n\nWhy is it that Apple can drop billions on marginally useful companies, but can\u2019t throw a few million\nat a bug bounty to secure iOS / OS X? \n\n\u2014 Jonathan Zdziarski (@JZdziarski) June 30, 2016 \n\n \n\nWhile some were dismayed by the payouts announced, others such as Westergren and Wardle said the\npayouts were fair and reasonable. \n\n\u201cThere will always be researchers that complain about payouts, but we\u2019ve come a long way from the\ndays of threats of legal action,\u201d Westergren said. \n\nWardle added: \u201cI think some are reasonable. Paying $25,000 for a sandbox escape is decent. However,\nif the FBI is supposedly paying over $1M for certain iOS bugs\u2014that may be (more) appealing to some.\nOf course if somebody is reporting bugs to Apple currently, for free\u2014the payouts Apple are providing\nare quite generous!\u201d \n\n", "polarity": 0.10902585104289648, "subjectivity": 0.42250590318772135, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/digital-rights-advocates-call-for-investigation-around-w3cs-drm-extension/119294/", "date": "2016-07-14T00:00:00.000Z", "author": "Chris Brook", "title": "Digital Rights Advocates Call for Investigation Around W3C\u2019s DRM Extension", "body": "Digital rights\u00a0advocates are again pleading with the World Wide Web Consortium (W3C) to reconsider\nstandardizing DRM in Encrypted Media Extensions, a draft specification that would ultimately feed\ninto HTML 5. \n\nAdvocacy groups like the Electronic Frontier Foundation (EFF) and security researchers alike have\ngone on record decrying the move, stressing\u00a0it could have implications for competition, or anyone\nwho discloses browser vulnerabilities. \n\n\u201cBrowsers are among the most common technologies in the world, with literally billions of daily\nusers. Any impediment to reporting vulnerabilities in these technologies has grave implications,\u201d\nCory Doctorow, an activist and special advisor with the EFF, wrote in a post to the group\u2019s\nDeeplinks blog Wednesday. \n\n\u201cNow more than ever, we can\u2019t afford any structural impediments to identification and disclosure of\nbrowser defects.\u201d \n\nDoctorow, who also co-edits the blog Boing Boing, previously served as the EFF\u2019s European Affairs\nCoordinator in the mid-2000s. He rejoined the EFF in 2015 with a focus on eradicating digital rights\nmanagement. \n\nA \u201cCandidate Recommendation\u201d for EME, published on the W3C mailing lists last month by the HTML\nMedia Extensions Working Group chairman, Microsoft\u2019s Paul Cotton, prompted the blog post.\u00a0As far as\nspecification timelines go, a candidate recommendation is the second\u00a0of a four level maturity\nsystem. It basically means that the group responsible for the standard, in this case EME, are\nsatisfied and believe the standard meets its technical requirements. \n\nThe EFF has been vocal in its opposition to the standard. Doctorow has penned several blogs over the\nlast year describing how EME would essentially\u00a0bake DRM into the HTML5 standard and\u00a0registered a\nFormal Objection\u00a0to W3C\u2019s recommendation just a few days after it was published. Wednesday\u2019s blog\nentry marks the group\u2019s latest public plea to the security community. \n\nDRM is subject to legal protection through laws already on the books worldwide like the United\nStates\u2019 DMCA, Canada\u2019s Bill C-11, and additional EU laws. Those laws, the EFF believes, could allow\na company to threaten researchers who identify vulnerabilities in browsers that have HTML5\nimplemented. \n\nA slew of security luminaries, including Bruce Schneier, Ron Rivest, J. Alex Halderman, Ron Deibert,\nto name a few, signed off on\u00a0a proposal in March that insists the W3C ensures researchers are\nprotected before the consortium moves forward with its DRM work. The \u201ccovenant,\u201d as Doctorow refers\nto it, would require members to sign and agree not to use the DMCA or similar laws to attack\nsecurity researchers. \n\nCotton rejected the proposal outright in June, claiming that discussion around \u201csuch a proposed\ncovenant is NOT in the scope of the current HTML Media Extensions WG charter.\u201d \u00a0While the\u00a0W3C has\npreviously rationalized the importance of security research in blog entries, it claims its failed to\nfind common ground among its membership over the covenant. \n\nDoctorow points out that the security of browsers has become even more paramount of late as they\nincreasingly become integrated into pacemakers, cars, home security systems, and other IoT devices. \n\nBrowsers continue to be a target for both researchers and attackers alike. \n\nLast month Israeli and German researchers found a vulnerability that allows pirates to copy video\nfrom sites like Netflix and Amazon Video. The vulnerability, for which the researchers produced a\nproof of concept, allows criminals to sidestep Widevine, DRM technology, used by Chrome. The\nresearchers were unsure whether or not Firefox and Opera, which use the same technology, are\naffected, but are reportedly looking into it. \n\nDoctorow and the EFF claim they\u2019re going to continue fighting what\u2019s turning into an uphill battle\nagainst the W3C. But in the meantime, both are urging researchers to \u201csubject all EME\nimplementations to the closest possible scrutiny.\u201d \n\n\u201cThe black hats who are already doing this are not bound by fear of the DMCA, and they are delighted\nto have an attack surface that white hats are not allowed to investigate in detail,\u201d he wrote. \n\nCar hackers and phone jailbreakers were granted exemptions to the DMCA\u2019s anti-circumvention rules\nlast fall by the Library of Congress.\u00a0Those exemptions were a big win for security researchers and\ncame a few months after researchers Charlie Miller and Chris Valasek demonstrated a vulnerability in\nUconnect, a computer featured in some Jeep vehicles. \n\n", "polarity": 0.03527077497665733, "subjectivity": 0.303688141923436, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2017/04/critical-security-updates-from-adobe-microsoft/", "date": "2017-04-12T00:00:00.000Z", "author": "Brian Krebs", "title": "Critical Security Updates from Adobe, Microsoft", "body": "Adobe and Microsoft separately issued updates on Tuesday to fix a slew of security flaws in their\nproducts. Adobe patched dozens of holes in its Flash Player, Acrobat and Reader products. Microsoft\npushed fixes to address dozens of vulnerabilities in Windows and related software.\n\nThe biggest change this month for Windows users and specifically for people responsible for\nmaintaining lots of Windows machines is that Microsoft has replaced individual security bulletins\nfor patches\u00a0with a single \u201cSecurity Update Guide.\u201d\n\nThis change follows closely on the heels of a move by Microsoft to bar home users from selectively\ndownloading specific updates and instead issuing all monthly updates as one big patch blob.\n\nMicrosoft\u2019s\u00a0claims that customers have been clamoring for this consolidated guide notwithstanding,\nmany users are likely to be put off by the new format, which seems to require a great deal more\nclicking and searching than under the previous rubric. In any case, Microsoft has released a FAQ\nexplaining what\u2019s changed and what folks can expect under the new arrangement.\n\nBy my count, Microsoft\u2019s patches this week address some\u00a046 security vulnerabilities, including flaws\nin Internet Explorer, Microsoft Edge, Windows, Office, Visual Studio for Mac, .NET Framework,\nSilverlight and Adobe Flash Player.\n\nAt least two of the critical bugs fixed by Microsoft this month are already being exploited in\nactive attacks, including a weakness in Microsoft Word that is showing up in attacks designed to\nspread the Dridex banking trojan.\n\nFinally, a heads up for any Microsoft users still running Windows Vista: This month is slated to be\nthe last that Vista will receive security updates. Vista was first released to consumers more than\nten years ago \u2014 in January 2007 \u2014 so if you\u2019re still using Vista it might be time to give a more\nmodern OS a try (doesn\u2019t have to be Windows\u2026just saying).\n\nAs it is wont to do on Microsoft\u2019s Patch Tuesday, Adobe pushed its own batch of security patches.\nThe usual \u201ccritical\u201d update for Flash Player fixes at least seven flaws. The newest version is v.\n25.0.0.148\u00a0for Windows, Mac and Linux systems.\n\nAs loyal readers here no doubt already know, I dislike Flash because it\u2019s full of security holes, is\na favorite target of drive-by malware exploits, and isn\u2019t really necessary to be left installed or\nturned on all the time anymore.\n\nHence, if you have Flash installed,\u00a0you should update, hobble or remove Flash as soon as possible.\nTo see which version of Flash your browser may have installed, check out this page.\n\nThe smartest option is probably to ditch the program once and for all and significantly increase the\nsecurity of your system in the process. An extremely powerful and buggy program that binds itself to\nthe browser, Flash is a favorite target of attackers and malware. For some ideas about how to hobble\nor do without Flash\u00a0(as well as slightly less radical\u00a0solutions) check out\u00a0A Month Without Adobe\nFlash Player.\n\nIf you choose to keep Flash, please update it today.\u00a0The most recent versions of Flash should be\navailable from\u00a0the Flash home page. Windows users who browse the Web with anything other than\nInternet Explorer may need to apply this patch twice, once with IE and again using the alternative\nbrowser (Firefox, Opera, e.g.).\n\nChrome\u00a0and IE should auto-install the latest Flash version on browser restart (users may need to\nmanually check for updates in and/or restart the browser to get the latest Flash version). Chrome\nusers may need to restart the browser to install or automatically download the latest version. When\nin doubt, click the vertical three dot icon to the right of the URL bar, select \u201cHelp,\u201d then \u201cAbout\nChrome\u201d: If there is an update available, Chrome should install it then.\n\nAdobe also issued security fixes for its Photoshop, Adobe Reader and Acrobat software packages. The\nReader/Acrobat updates address a whopping 47 security holes in these products, so if you\u2019ve got\neither program installed please take a moment to update.\n\nAs ever, please leave a note in the comment section if you run into any difficulties downloading or\ninstalling any of these patches.\n\n", "polarity": 0.1740349927849928, "subjectivity": 0.5260574494949494, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2017/03/adobe-microsoft-push-critical-security-fixes-10/", "date": "2017-03-14T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Microsoft Push Critical Security Fixes", "body": "Adobe and Microsoft each pushed out security updates for their products today. Adobe\u00a0plugged at\nleast seven security holes\u00a0in its Flash Player software. Microsoft, which delayed last month\u2019s Patch\nTuesday until today, issued an unusually large number of update bundles (18) to fix dozens of flaws\nin Windows and associated software.\n\nMicrosoft\u2019s patch to fix at least five critical bugs in the Windows file-sharing service is bound to\nmake a great deal of companies nervous before they get around to deploying this week\u2019s patches. Most\norganizations block internal file-sharing networks from talking directly to their Internet-facing\nnetworks, but these flaws could be exploited by a malicious computer worm to spread very quickly\nonce inside\u00a0an organization with a great many unpatched Windows systems.\n\nAnother critical patch (MS17-013) covers a slew of dangerous vulnerabilities in the way Windows\nhandles certain image files. Malware or miscreants could exploit the flaws to foist malicious\nsoftware without any action on the part the user, aside from perhaps just browsing to a hacked or\nbooby-trapped Web site.\n\nAccording to a blog post at the SANS Internet Storm Center, the image-handling flaw is one of six\nbulletins Microsoft released today which include vulnerabilities that have either already been made\npublic or that are already being exploited. Several of these\u00a0are in Internet Explorer (CVE\n2017-0008/MS17-006)\u00a0and/or Microsoft Edge (CVE-2017-0037/MS17-007).\n\nFor a more in-depth look at today\u2019s updates from Microsoft, check out this post from security vendor\nQualys.\n\nAnd as per usual, Adobe used Patch Tuesday as an occasion to release updates for its Flash Player\nsoftware. The latest\u00a0update brings Flash to v. 25.0.0.127\u00a0for Windows, Mac and Linux users alike. If\nyou have Flash installed,\u00a0you should update, hobble or remove Flash as soon as possible. To see\nwhich version of Flash your browser may have installed, check out this page.\n\nThe smartest option is probably to ditch the program once and for all and significantly increase the\nsecurity of your system in the process. An extremely powerful and buggy program that binds itself to\nthe browser, Flash is a favorite target of attackers and malware. For some ideas about how to hobble\nor do without Flash\u00a0(as well as slightly less radical\u00a0solutions) check out\u00a0A Month Without Adobe\nFlash Player.\n\nIf you choose to keep Flash, please update it today.\u00a0The most recent versions of Flash should be\navailable from\u00a0the Flash home page. Windows users who browse the Web with anything other than\nInternet Explorer may need to apply this patch twice, once with IE and again using the alternative\nbrowser (Firefox, Opera, e.g.).\n\nChrome\u00a0and IE should auto-install the latest Flash version on browser restart (users may need to\nmanually check for updates in and/or restart the browser to get the latest Flash version). Chrome\nusers may need to restart the browser to install or automatically download the latest version. When\nin doubt, click the vertical three dot icon to the right of the URL bar, select \u201cHelp,\u201d then \u201cAbout\nChrome\u201d: If there is an update available, Chrome should install it then.\n\nFinally, Adobe also issued a patch for its Shockwave Player, which is another program you should\nprobably ditch if you don\u2019t have a specific need for it. The long and short of it is that Shockwave\noften contains the same exploitable Flash bugs but doesn\u2019t get patched anywhere near as often as\nFlash. Please read Why You Should Ditch Adobe Shockwave if you have any doubts on this front.\n\nAs always, if you experience any issues downloading or installing any of these updates, please leave\na note about it in the comments below.\n\n", "polarity": 0.1697845804988662, "subjectivity": 0.5068027210884352, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2017/02/february-updates-from-adobe-microsoft/", "date": "2017-02-19T00:00:00.000Z", "author": "Brian Krebs", "title": "February Updates from Adobe, Microsoft", "body": "A handful of readers have inquired as to the whereabouts of Microsoft\u2018s usual monthly patches for\nWindows and related software. Microsoft opted to delay releasing any updates until next month, even\nthough there is a zero-day vulnerability in Windows going around. However, Adobe did push out\nupdates this week as per usual to fix critical issues in its Flash Player software.\n\nIn a brief statement\u00a0this week, Microsoft said it \u201cdiscovered a last minute issue that could impact\nsome customers\u201d that was\u00a0not resolved in time for Patch Tuesday, which normally falls on the second\nTuesday of each month. In an update to that advisory posted on Wednesday, Microsoft said it would\ndeliver February\u2019s batch of patches as part of the next regularly-scheduled Patch Tuesday, which\nfalls on March 14, 2017.\n\nOn Feb. 2, the CERT Coordination Center at Carnegie Mellon University warned that an unpatched bug\nin a core file-sharing component of Windows (SMB) could let attackers crash Windows 8.1, and Windows\n10 systems, as well as server equivalents of those platforms. CERT warned that exploit code for the\nflaw was already available online.\n\nThe updates from Adobe fix at least 13 vulnerabilities in versions of Flash Player for Windows, Mac,\nChromeOS and Linux systems. Adobe said it is not aware of any exploits in the wild for any of the 13\nflaws fixed in this update.\n\nThe latest update brings Flash to v. 24.0.0.221. The update is rated \u201ccritical\u201d for all OSes except\nLinux; critical flaws can be exploited to compromise a vulnerable system through no action on the\npart of the user, aside from perhaps browsing to a malicious or hacked Web site.\n\nFlash has long been a risky program to leave plugged into the browser. If you have Flash installed,\nyou should update, hobble or remove Flash as soon as possible. To see which version of Flash your\nbrowser may have installed, check out this page.\n\nThe smartest option is probably to ditch the program once and for all and significantly increase the\nsecurity of your system in the process. An extremely powerful and buggy program that binds itself to\nthe browser, Flash is a favorite target of attackers and malware.\u00a0For some ideas about how to hobble\nor do without Flash\u00a0(as well as slightly less radical\u00a0solutions) check out\u00a0A Month Without Adobe\nFlash Player.\n\nIf you choose to keep and update Flash, please do it today.\u00a0The most recent versions of Flash should\nbe available from\u00a0the Flash home page. Windows users who browse the Web with anything other than\nInternet Explorer may need to apply this patch twice, once with IE and again using the alternative\nbrowser (Firefox, Opera, e.g.).\n\nChrome\u00a0and IE should auto-install the latest Flash version on browser restart (users may need to\nmanually check for updates and/or restart the browser to get the latest Flash version). Chrome users\nmay need to restart the browser to install or automatically download the latest version. When in\ndoubt, click the vertical three dot icon to the right of the URL bar, select \u201cHelp,\u201d then \u201cAbout\nChrome\u201d: If there is an update available, Chrome should install it then.\n\n", "polarity": 0.09983465608465608, "subjectivity": 0.4750661375661375, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2017/01/adobe-microsoft-push-critical-security-fixes-9/", "date": "2017-01-11T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Microsoft Push Critical Security Fixes", "body": "Adobe and Microsoft on Tuesday each released security updates for software installed on hundreds of\nmillions of devices. Adobe issued an update for Flash Player and for Acrobat/Reader. Microsoft\nreleased just\u00a0four updates to\u00a0plug some\u00a015 security holes in Windows and related software.\n\nMicrosoft\u2019s batch includes updates for Windows, Office and Microsoft Edge (Redmond\u2019s replacement for\nInternet Explorer). Also interesting is that January 2017 is the last month Microsoft plans to\npublish individual bulletins for each patch. From now on, some\u00a0of the data points currently in the\nindividual updates will be lumped into a \u201cSecurity Updates Guide\u201d published with each Patch Tuesday.\n\nThis change mirrors a shift in the way Microsoft is deploying updates. Last year Microsoft stopped\nmaking individual security updates available for home users, giving those users instead a single\nmonthly security rollup that includes all available security updates.\n\nWindows users and anyone else with Flash installed will need to make sure that Adobe Flash Player is\nupdated (or suitably bludgeoned, more on that in a bit). Adobe\u2019s Flash update addresses 13 flaws in\nthe widely-installed browser plugin.\u00a0The patch\u00a0brings Flash to v. 24.0.0.194\u00a0for Windows, Mac and\nLinux users alike.\n\nIf you have Flash installed,\u00a0you should update, hobble or remove Flash as soon as possible. To see\nwhich version of Flash your browser may have installed, check out this page. But the smartest option\nis probably to ditch the program once and for all and significantly increase the security of your\nsystem in the process. An extremely powerful and buggy program that binds itself to the browser,\nFlash is a favorite target of attackers and malware. For some ideas about how to hobble or do\nwithout Flash\u00a0(as well as slightly less radical\u00a0solutions) check out\u00a0A Month Without Adobe Flash\nPlayer.\n\nIf you choose to keep and update Flash, please do it today.\u00a0The most recent versions of Flash should\nbe available from\u00a0the Flash home page. Windows users who browse the Web with anything other than\nInternet Explorer may need to apply this patch twice, once with IE and again using the alternative\nbrowser (Firefox, Opera, e.g.).\n\nChrome\u00a0and IE should auto-install the latest Flash version on browser restart (users may need to\nmanually check for updates in and/or restart the browser to get the latest Flash version). My\nversion of Chrome says it\u2019s the latest one (55.0.2883.87) but the Chrome Releases blog says the\nlatest stable version \u2014 55.0.2883.105 includes the Flash fixes (among other security fixes for\nChrome), which isn\u2019t yet being offered. Adobe\u2019s Web site tells me my Flash version is 24.0.0.186\n(not the latest).\n\nWhen in doubt with Chrome, click the vertical three dot icon to the right of the URL bar, select\n\u201cHelp,\u201d then \u201cAbout Chrome\u201d: If there is an update available, Chrome should install it then. In\neither case, be sure to restart the browser after installing an update (if it doesn\u2019t do that for\nyou).\n\nAs ever, if you experience any issues applying these updates, please don\u2019t hesitate to leave a note\nabout the issue in the comments below. You might help someone else who\u2019s having the same problem!\n\n", "polarity": 0.2461399711399711, "subjectivity": 0.5478114478114477, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2016/12/new-critical-fixes-for-flash-ms-windows/", "date": "2016-12-14T00:00:00.000Z", "author": "Brian Krebs", "title": "New Critical Fixes for Flash, MS Windows", "body": "Both Adobe and Microsoft on Tuesday issued patches to plug critical security holes in their\nproducts. Adobe\u2019s Flash Player patch addresses 17 security flaws, including one \u201czero-day\u201d bug that\nis already actively being exploited by attackers. Microsoft\u2019s bundle of updates tackles at least 42\nsecurity weaknesses in Windows and associated software.\n\nHalf of the dozen patches Microsoft released yesterday earned its \u201ccritical\u201d rating, meaning the\nflaws fixed in the updates could be exploited by malware or miscreants to seize remote control over\nvulnerable Windows computers without any help from users.\n\nAs per usual, the largest share of flaws\u00a0fixed are in Microsoft\u2019s browsers \u2014\u00a0Internet Explorer and\nEdge. Also included in the mix are updates for Microsoft Office and .NET.\n\nAccording to security firm Shavlik, several of the vulnerabilities fixed with this Microsoft patches\nwere publicly disclosed prior to this week, meaning would-be attackers have had a head start trying\nto figure out how to exploit them.\n\nAs part of a\u00a0new Microsoft policy that took effect\u00a0in October, home and business Windows users will\nno longer be able to pick and choose which updates to install and which to leave for another time.\nConsumers on Windows 7 Service Pack 1 and Windows 8.1 will henceforth receive what Redmond is\ncalling a \u201cMonthly Rollup,\u201d which addresses both security issues and reliability issues in a single\nupdate. The \u201cSecurity-only updates\u201d option \u2014 intended for enterprises and not available via Windows\nUpdate \u2014 \u00a0will only include new security patches that are released for that month.\u00a0What this means\nis that if any part of the patch bundle breaks, the only option is to remove the entire bundle\n(instead of the offending patch, as was previously possible).\n\nIt\u2019s important to note that several update types won\u2019t be included in a rollup, including those\nreleased for Adobe Flash Player on Tuesday.\u00a0The latest update brings Flash to v. 24.0.0.186\u00a0for\nWindows and Mac users alike. If you have Flash installed,\u00a0you should update, hobble or remove Flash\nas soon as possible. To see which version of Flash your browser may have installed, check out this\npage.\n\nThe smartest option is probably to ditch the program once and for all and significantly increase the\nsecurity of your system in the process. An extremely powerful and buggy program that binds itself to\nthe browser, Flash is a favorite target of attackers and malware. According to analysis released\nthis month by Recorded Future, Adobe Flash vulnerabilities provided six of the top 10\nvulnerabilities used by exploit kits in 2016. Exploit kits are automated tools that criminals stitch\ninto the fabric of hacked or malicious Web sites, so that visitors who visit one of these sites with\nan outdated version of Flash in their browser\u00a0can have malware silently installed. For some ideas\nabout how to hobble or do without Flash\u00a0(as well as slightly less radical\u00a0solutions) check out\u00a0A\nMonth Without Adobe Flash Player.\n\nIf you choose to keep and update Flash, please do it today.\u00a0The most recent versions of Flash should\nbe available from\u00a0the Flash home page. Windows users who browse the Web with anything other than\nInternet Explorer may need to apply this patch twice, once with IE and again using the alternative\nbrowser (Firefox, Opera, e.g.).\n\nChrome\u00a0and IE should auto-install the latest Flash version on browser restart (users may need to\nmanually check for updates in and/or restart the browser to get the latest Flash version). Chrome\nusers may need to restart the browser to install or automatically download the latest version. When\nin doubt, click the vertical three dot icon to the right of the URL bar, select \u201cHelp,\u201d then \u201cAbout\nChrome\u201d: If there is an update available, Chrome should install it then.\n\nAs always, if you experience any issues downloading or installing any of these updates, please leave\na note about it in the comments below.\n\n", "polarity": 0.09156325156325157, "subjectivity": 0.5092760942760941, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2016/11/patch-tuesday-2016-u-s-election-edition/", "date": "2016-11-09T00:00:00.000Z", "author": "Brian Krebs", "title": "Patch Tuesday, 2016 U.S. Election Edition", "body": "Let\u2019s get this out of the way up front: Having \u201c2016 election\u201d in the headline above is probably the\nonly reason anyone might read this story today. It remains unclear whether Republicans and Democrats\ncan patch things up after a bruising and divisive election, but thanks to a special Election Day\nPatch Tuesday hundreds of millions of Adobe and Microsoft users have some more immediate patching to\ndo.\n\nAs the eyes of the world stayed\u00a0glued to screens following the U.S. presidential election through\nthe night, Microsoft and Adobe were busy churning out a large number of new security updates for\nWindows, MS Office, Flash Player and other\u00a0software. If you use Flash Player or Microsoft products,\nplease take a deep breath and read on.\n\nRegularly scheduled on the second Tuesday of each month, this month\u2019s \u201cPatch Tuesday\u201d fell squarely\non Election Day in the United States and included 14 patch bundles. Those patches fixed a total of\n68 unique security flaws in Windows and related software.\n\nSix of the 14 patches carry Microsoft\u2019s most\u2019s-dire \u201ccritical\u201d label, meaning they fix bugs that\nmalware or miscreants could use to remotely compromise vulnerable PCs without any help from users\napart from maybe visiting a hacked or malicious Web site.\n\nMicrosoft says two of the software flaws addressed this week are already being exploited in active\nattacks. It also warned that three of the software vulnerabilities were\u00a0publicly detailed prior to\nthe release of these fixes \u2013 potentially giving attackers a head start in figuring out how to\nexploit the bugs.\n\n\u201cMS16-129 is our usual dogs breakfast of remote code execution vulnerabilities in the Microsoft Edge\nbrowser, impacting both HTML rendering and scripting,\u201d said Bobby Kuzma, systems engineer at Core\nSecurity. \u201cMS16-130 contains \u00a0a privilege escalation in the onscreen keyboard function from Vista\nforward. That\u2019s great news for anyone running touchscreen kiosks that are supposedly locked down.\u201d\n\nAs part of a\u00a0new Microsoft policy that took effect last month, home and business Windows users will\nno longer be able to pick and choose which updates to install and which to leave for another time.\nConsumers on Windows 7 Service Pack 1 and Windows 8.1 will henceforth receive what Redmond is\ncalling a \u201cMonthly Rollup,\u201d which addresses both security issues and reliability issues in a single\nupdate. The \u201cSecurity-only updates\u201d option \u2014 intended for enterprises and not available via Windows\nUpdate \u2014 \u00a0will only include new security patches that are released for that month.\u00a0What this means\nis that if any part of the patch bundle breaks, the only option is to remove the entire bundle\n(instead of the offending patch, as was previously possible).\n\nIt\u2019s important to note that several update types won\u2019t be included in a rollup, including those\nreleased for Adobe Flash Player on Tuesday. For the second time this month, Adobe issued a critical\nupdate for its ubiquitous Flash Player browser plugin. The newest Flash version \u2014 v. \u00a023.0.0.207 and\navailable here for both Windows and Mac computers \u2014 plugs at least nine more flaws in Flash. To see\nif you have Flash installed and if so what version is running, check this link.\n\nGoogle users may need to restart the browser to install or automatically download the latest\nversion. When in doubt, click the vertical three dot icon to the right of the URL bar, select\n\u201cHelp,\u201d then \u201cAbout Chrome\u201d: If there is an update available, Chrome should install it then.\n\nSomehow KrebsonSecurity neglected to mention the other critical update Adobe pushed for Flash on\nOct. 26, 2016 (my bad folks, sorry). It\u2019s really hard to keep up with Flash updates sometimes.\nThat\u2019s part of the reason I\u2019ll continue to encourage readers to disable or remove Adobe Flash unless\nuntil it is needed for something specific. Fewer sites now require it, and leaving this buggy,\npowerful program enabled all the time is just asking for security trouble. Check out the advice at A\nMonth Without Adobe Flash Player for tips on how to hobble or do without Flash entirely.\n\nIndeed, Google reportedly is planning to phase out full support for Flash on its Chrome browser by\nthe end of 2016. And\u00a0Mozilla is now blocking certain Flash content deemed \u201cnot essential to the the\nuser experience.\u201d Specifically, as stated by Mozilla\u2019s Benjamin Smedberg, Mozilla\u00a0Firefox\u00a0is\nblocking specific Flash content that is invisible to users.\n\n\u201cThis is expected to reduce Flash crashes and hangs by up to 10%. To minimize website compatibility\nproblems, the changes are initially limited to a short, curated list of Flash content that can be\nreplaced with HTML,\u201d Smedberg wrote back in June. \u201cWe intend to add to this list over time.\u201d\n\nFor more on this week\u2019s patches, check out coverage from security firms Qualys and Shavlik. And, as\nalways, if you experience any issues downloading or installing any of these updates, please leave a\nnote about it in the comments below.\n\n", "polarity": 0.05708980561921738, "subjectivity": 0.4793196182902064, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2016/10/microsoft-no-more-pick-and-choose-patching/", "date": "2016-10-11T00:00:00.000Z", "author": "Brian Krebs", "title": "Microsoft: No More Pick-and-Choose Patching", "body": "Adobe and Microsoft today each issued updates to fix critical security flaws in their products.\nAdobe\u2019s got fixes for Acrobat and Flash Player ready. Microsoft\u2019s patch bundle for October includes\nfixes for at least five separate \u201czero-day\u201d vulnerabilities \u2014 dangerous flaws that attackers were\nalready exploiting\u00a0prior to today\u2019s patch release. Also notable this month is that Microsoft is\nchanging how it deploys security updates, removing the ability for Windows users to pick and choose\nwhich individual patches to install.\n\nZero-day vulnerabilities describe flaws that even the makers of the targeted software don\u2019t know\nabout before they start seeing the flaws exploited in the wild, meaning the vendor has \u201czero days\u201d\nto fix the bugs.\n\nAccording to security vendor Qualys, Patch Tuesday updates fix zero-day bugs in Internet Explorer\nand Edge\u00a0\u2014 the default browsers on different versions of Windows. MS16-121 addresses a\u00a0zero-day in\nMicrosoft Office. Another zero-day flaw affects\u00a0GDI+ \u2014 a graphics component built into Windows that\ncan be exploitable through the browser. The final zero-day is present in the Internet Messaging\ncomponent of Windows.\n\nStarting this month, home and business Windows users will no longer be able to pick and choose which\nupdates to install and which to leave for another time. For example, I\u2019ve often advised home users\nto hold off on installing .NET updates until all other patches for the month are applied \u2014 reasoning\nthat .NET updates are very large and in my experience have frequently been found to be the source of\nproblems when applying huge numbers of patches simultaneously.\n\nBut that cafeteria-style patching goes out the\u2026err\u2026Windows with this month\u2019s release. Microsoft made\nthe announcement in May of this year and revisited the subject again in August to add more detail\nbehind its decision:\n\nMicrosoft\u2019s patch policy changes are slightly different for home versus business customers.\nConsumers on Windows 7 Service Pack 1 and Windows 8.1 will henceforth receive what Redmond is\ncalling a \u201cMonthly Rollup,\u201d which addresses both security issues and reliability issues in a single\nupdate. The \u201cSecurity-only updates\u201d option \u2014 intended for enterprises and not available via Windows\nUpdate \u2014 \u00a0will only include new security patches that are released for that month.\n\nWhat this means is that if any part of the patch bundle breaks, the only option is to remove the\nentire bundle (instead of the offending patch, as was previously possible). I have no doubt this\nsimplifies things for Microsoft and likely saves them a ton of money, but my concern is this will\nleave end-users unable to apply critical patches simply due to a single patch breaking something.\n\nIt\u2019s important to note that several update types won\u2019t be included in a rollup, including those for\nAdobe Flash Player. As it happens,\u00a0Adobe today issued an update for its Flash Player browser plugin\nthat fixes a dozen security vulnerabilities in the program. The company said it is currently not\naware of any attempts to exploit these flaws in the wild (i.e., no zero-days in this month\u2019s Flash\npatch).\n\nThe latest update brings Flash to v. 23.0.0.185\u00a0for Windows and Mac users alike. If you have Flash\ninstalled,\u00a0you should update, hobble or remove Flash as soon as possible. To see which version of\nFlash your browser may have installed, check out this page.\n\nThe smartest option is probably to ditch the program once and for all and significantly increase the\nsecurity of your system in the process. I\u2019ve got more on that approach (as well as slightly less\nradical\u00a0solutions ) in A Month Without Adobe Flash Player.\n\nIf you choose to update, please do it today.\u00a0The most recent versions of Flash should be available\nfrom this Flash distribution page or the Flash home page. Windows users who browse the Web with\nanything other than Internet Explorer may need to apply this patch twice, once with IE and again\nusing the alternative browser (Firefox, Opera, e.g.).\u00a0Chrome\u00a0and IE should auto-install the latest\nFlash version on browser restart (users may need to manually check for updates in and/or restart the\nbrowser to get the latest Flash version).\n\nFinally, Adobe released security updates that correct a whopping 71 flaws in its PDF Reader and\nAcrobat products. If you use either of these software packages, please take a moment to update them.\n\n", "polarity": 0.07170907323968548, "subjectivity": 0.5589848926583619, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2016/09/adobe-microsoft-push-critical-updates-3/", "date": "2016-09-14T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Microsoft Push Critical Updates", "body": "Adobe and Microsoft on Tuesday each issued updates to fix multiple critical security vulnerabilities\nin their software. Adobe pushed a patch that addresses 29 security holes in its widely-used\u00a0Flash\nPlayer\u00a0browser plug-in. Microsoft released some 14 patch bundles to correct at least 50 flaws in\nWindows and associated software, including a zero-day bug in Internet Explorer.\n\nHalf of the updates Microsoft released Tuesday earned the company\u2019s most dire \u201ccritical\u201d rating,\nmeaning they could be exploited by malware or miscreants to install malicious software with no help\nfrom the user, save for maybe just visiting a hacked or booby-trapped Web site. Security firms\nQualys and Shavlik have more granular writeups on\u00a0the Microsoft patches.\n\nAdobe\u2019s advisory for this Flash Update is here. It brings Flash to v.\u00a023.0.0.162 for Windows and Mac\nusers.\u00a0If you have Flash installed,\u00a0you should update, hobble or remove Flash as soon as possible.\n\nThe smartest option is probably to ditch the program once and for all and significantly increase the\nsecurity of your system in the process. I\u2019ve got more on that approach (as well as slightly less\nradical\u00a0solutions ) in A Month Without Adobe Flash Player.\n\nIf you choose to update, please do it today.\u00a0The most recent versions of Flash should be available\nfrom this Flash distribution page or the Flash home page. Windows users who browse the Web with\nanything other than Internet Explorer may need to apply this patch twice, once with IE and again\nusing the alternative browser (Firefox, Opera, e.g.).\n\nChrome\u00a0and IE should auto-install the latest Flash version on browser restart (I had to manually\ncheck for updates in Chrome an restart the browser to get the latest Flash version).\n\nAs always, if you run into any issues installing any of these updates, please feel free to leave a\ncomment about your experience below.\n\n", "polarity": 0.1898148148148148, "subjectivity": 0.5407407407407407, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2016/07/adobe-microsoft-patch-critical-security-bugs/", "date": "2016-07-13T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Microsoft Patch Critical Security Bugs", "body": "Adobe has\u00a0pushed out a critical update to plug at least 52 security holes in its widely-used Flash\nPlayer browser plugin, and another update to patch holes in Adobe Reader. Separately, Microsoft\nreleased 11 security updates to fix vulnerabilities more than 40 flaws in Windows and related\nsoftware.\n\nFirst off, if you have Adobe Flash Player installed and haven\u2019t yet hobbled this insecure program so\nthat it runs only when you want it to, you are playing with fire. It\u2019s bad enough that hackers are\nconstantly finding and exploiting zero-day flaws in Flash Player before Adobe even knows about the\nbugs.\n\nThe bigger issue is that Flash is an extremely powerful program that\u00a0runs inside the browser, which\nmeans users can compromise their computer just by browsing to a hacked or malicious site that\ntargets unpatched Flash flaws.\n\nThe smartest option is probably to ditch this insecure program once and for all and significantly\nincrease the security of your system in the process. I\u2019ve got more on that approach \u2014 as well as\nslightly less radical solutions \u2014 in A Month Without Adobe Flash Player.\n\nIf you choose to update, please do it today. The most recent versions of Flash should be available\nfrom this Flash distribution page or the Flash home page. Windows users who browse the Web with\nanything other than Internet Explorer may need to apply this patch twice, once with IE and again\nusing the alternative browser (Firefox, Opera, e.g.). Chrome and IE should auto-install the latest\nFlash version on browser restart.\n\nHappily, Adobe has delayed plans to stop distributing direct download links to its Flash Player\nprogram. The company had said it would decommission the direct download page on June 30, 2016, but\nthe latest, patched Flash version 22.0.0.209 for Windows and Mac systems is still available there.\nThe wording on the site has been changed to indicate the download links will be decommissioned\n\u201csoon.\u201d\n\nAdobe\u2019s advisory on the Flash flaws is here. The company also released a security update that\naddresses at least 30 security holes in Adobe Reader. The latest version of Reader for most Windows\nand Mac users is v.\u00a015.017.20050.\n\nSix of the 11 patches Microsoft issued this month earned its most dire \u201ccritical\u201d rating, which\nMicrosoft assigns to software bugs that can be exploited to remotely commandeer vulnerable machines\nwith little to no help from users, save from perhaps browsing to a hacked or malicious site.\n\nIn fact, most of the vulnerabilities Microsoft fixed this Patch Tuesday\u00a0are in the company\u2019s Web\nbrowsers \u2014 i.e., Internet Explorer (15 vulnerabilities) and its newer Edge browser (13 flaws).\u00a0Both\npatches address numerous browse-and-get-owned issues.\n\nAnother critical patch from Redmond tackles problems in Microsoft Office that could be exploited\nthrough poisoned Office documents.\n\nFor\u00a0further breakdown on the patches this month from Adobe and Microsoft, check out these blog posts\nfrom security vendors Qualys and Shavlik. And as ever, if you encounter any problems downloading or\ninstalling any of the updates mentioned above please leave a note about your experience in the\ncomments below.\n\n", "polarity": 0.09864583333333335, "subjectivity": 0.5512500000000001, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2016/06/adobe-update-plugs-flash-player-zero-day/", "date": "2016-06-17T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe Update Plugs Flash Player Zero-Day", "body": "Adobe on Thursday issued a critical update for its ubiquitous Flash Player software that fixes three\ndozen security holes in the widely-used browser plugin, including at least one vulnerability that is\nalready being exploited for use in targeted attacks.\n\nThe latest update brings Flash to v. 22.0.0.192 for Windows and Mac users alike. If you have Flash\ninstalled,\u00a0you should update, hobble or remove Flash as soon as possible.\n\nThe smartest option is probably to ditch the program once and for all and significantly increase the\nsecurity of your system in the process. I\u2019ve got more on that approach (as well as slightly less\nradical\u00a0solutions ) in A Month Without Adobe Flash Player.\n\nIf you choose to update, please do it today.\u00a0The most recent versions of Flash should be available\nfrom this Flash distribution page or the Flash home page. Windows users who browse the Web with\nanything other than Internet Explorer may need to apply this patch twice, once with IE and again\nusing the alternative browser (Firefox, Opera, e.g.).\u00a0Chrome and IE should auto-install the latest\nFlash version on browser restart (I had to manually check for updates in Chrome an restart the\nbrowser to get the latest Flash version).\n\nFor some reason that probably has nothing to do with security, Adobe has decided to\u00a0stop\ndistributing direct links to its Flash Player software. According to the company\u2019s Flash\ndistribution page, on June 30, 2016 Adobe will decommission direct links to various Flash Player\ndownloads. This will essentially force Flash users to update the program using its built-in\nautomatic updates feature (which sometimes takes days to notice a new security update is available),\nor to install the program from the company\u2019s Flash Home page \u2014 a download that currently bundles\nMcAfee Security Scan Plus and a product called True Key by Intel Security.\n\nAnything that makes it less likely users\u00a0will update Flash\u00a0seems like a bad idea, especially when\nwe\u2019re talking about a\u00a0program that often needs security fixes more than once a month.\n\n", "polarity": 0.1260381593714927, "subjectivity": 0.5779461279461281, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2016/04/adobe-patches-flash-player-zero-day-threat/", "date": "2016-04-08T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe Patches Flash Player Zero-Day Threat", "body": "Adobe Systems this week rushed out an emergency patch to plug a security hole in its widely-\ninstalled\u00a0Flash Player software, warning that the vulnerability is already being exploited in active\nattacks.\n\nAdobe said\u00a0a \u201ccritical\u201d\u00a0bug exists in all versions of Flash including Flash versions 21.0.0.197 and\nlower (older) across a broad range of systems, including Windows, Mac, Linux and Chrome OS. Find out\nif you have Flash and if so what version by visiting this link.\n\nIn a security advisory, the software maker said it is aware of reports that the vulnerability is\nbeing actively exploited on systems running Windows 7 and Windows XP with Flash Player version\n20.0.0.306 and earlier.\n\nAdobe said additional security protections built into all versions of Flash including 21.0.0.182 and\nnewer should block\u00a0this flaw from being exploited. But even if you\u2019re running one of the newer\nversions of Flash with the additional protections, you should update, hobble or remove Flash as soon\nas possible.\n\nThe smartest option is probably to ditch the program once and for all and significantly increase the\nsecurity of your system in the process. I\u2019ve got more on that approach (as well as slightly less\nradical\u00a0solutions ) in A Month Without Adobe Flash Player.\n\nIf you choose to update, please do it today.\u00a0The most recent versions of Flash should be available\nfrom the Flash home page. Windows users who browse the Web with anything other than Internet\nExplorer may need to apply this patch twice, once with IE and again using the alternative browser\n(Firefox, Opera, e.g.).\u00a0Chrome and IE should auto-install the latest Flash version on browser\nrestart (I had to manually restart Chrome to get the latest Flash version).\n\nBy the way, I\u2019m not the only one trying to make it easier for people to put a lasso on Flash: In a\nblog post today, Microsoft said Microsoft Edge users on Windows 10 will auto-pause Flash content\nthat is not central to the Web page. The new feature will be available in Windows 10 build 14316.\n\n\u201cPeripheral content like animations or advertisements built with Flash will be displayed in a paused\nstate unless the user explicitly clicks to play that content,\u201d wrote the Microsoft Edge team. \u201cThis\nsignificantly reduces power consumption and improves performance while preserving the full fidelity\nof the page. Flash content that is central to the page, like video and games, will not be paused. We\nare planning for and look forward to a future where Flash is no longer necessary as a default\nexperience in\u00a0Microsoft Edge.\u201d\n\nAdditional reading on this vulnerability:\n\nKafeine\u2018s Malware Don\u2019t Need Coffee Blog on active exploitation of the bug.\n\nTrend Micro\u2019s take\u00a0on evidence that thieves have been using this flaw in automated attacks since at\nleast March 31, 2016.\n\n", "polarity": 0.11806426332288401, "subjectivity": 0.5333463949843261, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2016/04/badlock-bug-tops-microsoft-patch-batch/", "date": "2016-04-13T00:00:00.000Z", "author": "Brian Krebs", "title": "\u2018Badlock\u2019 Bug Tops Microsoft Patch Batch", "body": "Microsoft released fixes on Tuesday to plug critical security holes in Windows and other software.\nThe company\u00a0issued 13 patches to tackle dozens of vulnerabilities, including a much-hyped \u201cBadlock\u201d\nfile-sharing bug that appears ripe for exploitation. Also, Adobe updated its Flash Player release to\naddress at least two-dozen flaws \u2014 in addition to the zero-day vulnerability Adobe patched last\nweek.\n\nThe Windows patch that seems to be getting the most attention this month remedies seven\nvulnerabilities in Samba, a service used to manage file and print services across networks and\nmultiple operating systems. This may sound innocuous enough, but attackers who gain access to\nprivate or\u00a0corporate network could use these flaws to intercept traffic, view or modify user\npasswords, or shut down critical services.\n\nAccording to badlock.org, a Web site set up to disseminate information about the widespread nature\nof the threat that this vulnerability poses, we are likely to see active exploitation of the Samba\nvulnerabilities soon.\n\nTwo of the Microsoft patches address flaws that were disclosed prior to Patch Tuesday. One of them\nis included in a bundle of fixes for Internet Explorer. A critical update for the Microsoft Graphics\nComponent targets four vulnerabilities, two of which have been detected already in exploits in the\nwild, according to Chris Goettl at security vendor Shavlik.\n\nJust a reminder: If you use Windows and haven\u2019t yet taken advantage of the Enhanced Mitigation\nExperience Toolkit, a.k.a. \u201cEMET,\u201d you should definitely consider it. I describe the basic features\nand benefits of running EMET in this blog post from 2014 (yes, it\u2019s time to revisit EMET in a future\npost), but the gist of it is that EMET helps block or blunt exploits against known and unknown\nWindows vulnerabilities and flaws in third-party applications that run on top of Windows. The latest\nversion, v. 5.5, is available here.\n\nOn Friday, Adobe released an emergency update for Flash Player to fix a vulnerability that is being\nactively exploited in the wild and used to foist malware (such as ransomware). Adobe updated its\nadvisory for that release to include fixes for 23 additional flaws.\n\nAs I noted in last week\u2019s piece on the emergency Flash Patch, most users are better off hobbling or\nremoving Flash altogether.\u00a0I\u2019ve got more on that approach (as well as slightly less radical\nsolutions ) in A Month Without Adobe Flash Player.\n\nIf you choose to update, please do it today. The most recent version for Mac and Windows users is\n21.0.0.213, and should be available from the Flash home page. Windows users who browse the Web with\nanything other than Internet Explorer may need to apply this patch twice, once with IE and again\nusing the alternative browser (Firefox, Opera, e.g.).\u00a0Chrome and IE should auto-install the latest\nFlash version on browser restart (I had to manually restart Chrome to get the latest Flash version).\n\n", "polarity": 0.1226608187134503, "subjectivity": 0.4451023391812865, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2016/02/criticial-fixes-issued-for-windows-java-flash/", "date": "2016-02-10T00:00:00.000Z", "author": "Brian Krebs", "title": "Critical Fixes Issued for Windows, Java, Flash", "body": "Microsoft Windows users and those with Adobe\u00a0Flash Player or Java installed, it\u2019s time to update\nagain! Microsoft released 13\u00a0updates to address some three dozen unique security vulnerabilities.\nAdobe issued security fixes\u00a0for its Flash Player software that plugs at least 22 security holes in\nthe widely-used browser component. Meanwhile, Oracle issued an unscheduled security fix for Java,\nits second security update for Java in as many weeks.\n\nOne big critical update\u00a0from Redmond mends more than a dozen security problems with Internet\nExplorer. Another critical patch addresses\u00a0flaws Microsoft Edge \u2014 including four that appear to\nshare the same vulnerability identifiers (meaning Microsoft re-used the same vulnerable IE code in\nits newest Edge browser).\u00a0Security vendor Qualys as usual has a good roundup of the rest of the\ncritical Microsoft updates.\n\nAdobe issued an update for Flash Player that fixes a slew of security problems with Flash, a very\npowerful yet vulnerable piece of software that is also unfortunately ubiquitous. After all, as Chris\nGoettl\u00a0at Shavlik reminds us, fixing Flash on a modern computer can be a complicated affair: \u201cYou\nneed to update Adobe Flash for IE, Flash for Google Chrome, and Flash for Firefox to completely plug\nall of these 22 vulnerabilities.\u201d\u00a0Thankfully, Chrome and IE should auto-install the latest Flash\nversion on browser restart (I had to manually restart Chrome to get the latest Flash version).\n\nIf you decide to update (more on\u00a0hobbling or uninstalling Flash in a moment), make sure you watch\nfor unwanted add-ons that come pre-checked with Adobe\u2019s Flash updater. The latest version of Flash\nfor most Windows and Mac users will be\u00a0v. 20.0.0.306. This page will tell you which version of Flash\nyou have installed (if Flash isn\u2019t installed, the page will offer a downloader to install it).\n\nPatch away, please, but I\u2019d also advise Flash users to figure out how to put the program in a box so\nthat it can\u2019t run unless you want it to. Doing without Flash (or at least without Flash turned on\nall the time) just makes good security sense, and it isn\u2019t as difficult as you might think: See my\npost, A Month Without Adobe Flash Player, for tips on how to minimize the risks of having Flash\ninstalled.\n\nFinally, Oracle pushed out the second security update (Java SE 8, Update 73) this week for Java JRE.\nas well as an emergency security update from Oracle for Java \u2014 the second patch for Java in a week.\nThis piece explores the back story behind the latest Java update, but the short version is that\nOracle is fixing a so-called \u201cDLL side loading bug\u201d that allows malicious applications to hijack\nJava\u2019s legitimate system processes and avoid having to rely on convincing users double-clicking and\nexecuting the malicious file.\n\nThis DLL hijacking problem is not unique to Java or Oracle, but I still advise readers to treat Java\njust like I do Flash: Uninstall the program unless you have an affirmative use for it. If you can\u2019t\ndo that, take steps to unplug it from your browser (or at least from your primary browser).\n\nIf you have an specific\u00a0use or need for Java, there is a way to have this program installed while\nminimizing the chance that crooks will exploit unknown or unpatched flaws in the program: unplug it\nfrom the browser unless and until you\u2019re at a site that requires it (or at least take advantage of\nclick-to-play, which can block Web sites from displaying both Java and Flash content by default).\nThe latest versions of Java let users disable Java content in web browsers\u00a0through the Java Control\nPanel.\n\nAlternatively, consider a dual-browser approach, unplugging Java from the browser you use for\neveryday surfing, and leaving it plugged in to a second browser that you only use for sites that\nrequire Java.\n\nMany people confuse Java with\u00a0\u00a0JavaScript, a powerful scripting language that helps make sites\ninteractive. Unfortunately, a huge percentage of Web-based attacks use JavaScript tricks to foist\nmalicious software and exploits onto site visitors.\u00a0For more about ways to manage JavaScript in the\nbrowser, check out my tutorial Tools for a Safer PC.\n\n", "polarity": 0.11206730769230772, "subjectivity": 0.5868055555555555, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2015/12/flash-player-patch-fixes-0-day-18-other-flaws/", "date": "2015-12-28T00:00:00.000Z", "author": "Brian Krebs", "title": "Flash Player Patch Fixes 0-Day, 18 Other Flaws", "body": "Adobe has shipped a new version of its Flash Player browser plugin to close at least 19 security\nholes in the program, including one that is already being exploited in active attacks.\n\nThe new Flash version, v. 20.0.0.267 for most Mac and Windows users, includes a fix for a\nvulnerability (CVE-2015-8651) that Adobe says is being used in \u201climited, targeted attacks.\u201d If you\nhave Flash installed, please update it.\n\nBetter yet, get rid of Flash altogether, or at least disable it until and unless you need it. Doing\nwithout Flash just makes good security sense, and it isn\u2019t as difficult as you might think: See my\npost, A Month Without Adobe Flash Player, for tips on how to minimize the risks of having Flash\ninstalled.\n\nThe most recent versions of Flash should be available from the Flash home page. Windows users who\nbrowse the Web with anything other than Internet Explorer may need to apply this patch twice, once\nwith IE and again using the alternative browser (Firefox, Opera, e.g.).\u00a0This link\u00a0should tell you\nwhether your system has Flash and if so which version of Flash\u00a0is installed in your browser.\n\n", "polarity": 0.10306895485466915, "subjectivity": 0.4697820037105752, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2015/12/adobe-microsoft-each-plug-70-security-holes/", "date": "2015-12-08T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Microsoft Each Plug 70+ Security Holes", "body": "Adobe and Microsoft today independently issued software updates to plug critical security holes in\ntheir software. Adobe released a patch that fixes a whopping 78 security vulnerabilities in its\nFlash Player software. Microsoft pushed a dozen patch bundles to address at least 71 flaws in\nvarious versions of the Windows operating system and associated software.\n\nThree-quarters of the patches Microsoft issued earned the company\u2019s most dire \u201ccritical\u201d rating,\nmeaning malware or attackers could use the flaws fixed in these patches to fully compromise\nvulnerable systems with zero help from users. What\u2019s more, two of the vulnerabilities are actively\nbeing exploited, including a bug in Windows and Microsoft Office.\n\nAs per usual,\u00a0a patch for Internet Explorer addresses a huge chunk (30) of the individual security\nflaws tackled in this month\u2019s update cycle. Microsoft also released a critical patch to correct 15\nweaknesses in Microsoft Edge, the browser meant to supplant IE.\n\nAccording to security firm Shavlik, supported versions of IE\u00a0will be changing quite a bit in\nJanuary. After\u00a0January 12, 2016, only the latest IE version available on each\u00a0operating system will\nbe supported. This means if you are not running\u00a0the latest version of IE available for the version\nof Windows you are\u00a0on, you will no longer be getting security updates. More information about this\nchange is available here.\n\nThe SANS Internet Storm Center is reporting that some Windows users who have Outlook installed are\nexperiencing some difficulties using the program after applying this month\u2019s updates. If you use\nOutlook, it may be wise to put off installing this patch for a few days until Microsoft addresses\nthe issue.\n\nAnother vulnerability \u2014 fixed by a patch for domain name system (DNS) servers that run on Windows\nServers \u2014 could prove extremely dangerous for organizations that rely on Windows Server for DNS\nservices. According to SANS,\u00a0Microsoft rates the exploitability as \u201c2\u201d, but doesn\u2019t provide much\ndetails as to the nature of the vulnerability other than the fact that it can be triggered by remote\nDNS requests, which is bad news if you are using a Microsoft DNS server exposed to the public\ninternet.\n\nAdobe\u2019s Flash update brings Flash to version 20.0.0.228 for Internet Explorer and Chrome on Windows\nand Mac systems, and 20.0.0.235 for Windows and Mac versions of Firefox and Safari.\n\nAs I noted in a previous post, most users can jump off the incessant Flash-patching merry-go-round\nby simply removing the program \u2014 or hobbling it until and unless it is needed for some purpose or\nsite.\n\nDisabling Flash in Chrome is simple enough, and can be easily reversed: On a Windows, Mac, Linux or\nChrome OS installation of Chrome, type \u201cchrome:plugins\u201d into the address bar, and on the Plug-ins\npage look for the \u201cFlash\u201d listing: To disable Flash, click the disable link (to re-enable it, click\n\u201cenable\u201d). Windows users can remove Flash from the Add/Remove Programs panel, or use Adobe\u2019s\nuninstaller for Flash Player.\n\nIf you\u2019re concerned about removing Flash altogether, consider a dual-browser approach. That is,\nunplugging Flash from the browser you use for everyday surfing, and leaving it plugged in to a\nsecond browser that you only use for sites that require Flash. Another alternative to removing Flash\nis Click-To-Play, which lets you control what Flash (and Java) content gets to load when you visit a\nWeb page.\n\nIf you decide to proceed with Flash and update, the most recent versions of Flash should be\navailable from the Flash home page. Windows users who browse the Web with anything other than\nInternet Explorer may need to apply this patch twice, once with IE and again using the alternative\nbrowser (Firefox, Opera, e.g.).\n\n", "polarity": 0.08143939393939392, "subjectivity": 0.4880140692640692, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2015/11/critical-fixes-for-windows-adobe-flash-player/", "date": "2015-11-11T00:00:00.000Z", "author": "Brian Krebs", "title": "Critical Fixes for Windows, Adobe Flash Player", "body": "For the third time in a month, Adobe has issued an update to plug security holes in its Flash Player\nsoftware. The update came on Patch Tuesday, when Microsoft released a dozen patches to fix dozens of\nvulnerabilities in Windows, Internet Explorer, Skype and other software.\n\nOne-quarter of the patches from Microsoft address flaws that the company labels \u201ccritical,\u201d meaning\nthey can be exploited by malware or malcontents to break into vulnerable systems with no help from\nusers. Four of the bulletins address\u00a0vulnerabilities that were\u00a0publicly disclosed prior to Patch\nTuesday, meaning malicious hackers\u00a0had a head start in figuring out how to exploit those weaknesses.\n\nTop of the priority list among these 12 patches should probably be the one for Internet Explorer,\nwhich fixes more than two dozen flaws in IE, nearly all of them critical, browse-to-a-hacked-site-\nand-get-owned flaws. Another patch, MS15-113, fixes critical bugs in Microsoft\u2019s Edge Browser, its\nintended replacement for IE. Also of note is a Microsoft Office patch that addresses seven flaws.\n\nThis month also includes a patch for .NET, a program that past experience has taught me to patch\nseparately. If you use Windows and Windows Update says you have patches available for .NET, consider\nunchecking those updates until you\u2019ve applied the rest released on Tuesday. Reboot and install any\navailable .NET updates.\n\nSeparately, Adobe issued a patch for its Flash Player software that fixes at least 17\nvulnerabilities in the program and in Adobe AIR. Adobe says it is not aware of any exploits in the\nwild for issues addressed in this update, but readers should seriously consider whether having Flash\ninstalled and/or enabled in the browser is worth the risk.\n\nNew analysis from Recorded Future shows that Adobe Flash Player provided eight of the top 10\nvulnerabilities used by exploit kits in 2015. Exploit kits are crimeware packages meant to be\nstitched into the fabric of hacked Web sites; when a visitor arrives with outdated browser plugins,\nthat visitor\u2019s computer is silently seeded with malware. Eighty percent of the time, these kits are\nchecking for browsers that aren\u2019t up to date with Flash patches.\n\nAs I noted in a previous post, most users can jump off the incessant Flash-patching merry-go-round\nby simply removing the program \u2014 or hobbling it until and unless it is needed for some purpose or\nsite.\n\nDisabling Flash in Chrome is simple enough, and can be easily reversed: On a Windows, Mac, Linux or\nChrome OS installation of Chrome, type \u201cchrome:plugins\u201d into the address bar, and on the Plug-ins\npage look for the \u201cFlash\u201d listing: To disable Flash, click the disable link (to re-enable it, click\n\u201cenable\u201d). Windows users can remove Flash from the Add/Remove Programs panel, or use Adobe\u2019s\nuninstaller for Flash Player.\n\nIf you\u2019re concerned about removing Flash altogether, consider a dual-browser approach. That is,\nunplugging Flash from the browser you use for everyday surfing, and leaving it plugged in to a\nsecond browser that you only use for sites that require Flash. Another alternative to removing Flash\nis Click-To-Play, which lets you control what Flash (and Java) content gets to load when you visit a\nWeb page.\n\nIf you decide to proceed with Flash and update (version 19.0.0.245 is the latest for Mac and Windows\nsystems), the most recent versions of Flash should be available from the Flash home page. Windows\nusers who browse the Web with anything other than Internet Explorer may need to apply this patch\ntwice, once with IE and again using the alternative browser (Firefox, Opera, e.g.).\n\n", "polarity": 0.07222886762360445, "subjectivity": 0.4252762588288904, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2015/10/flash-java-patches-fix-critical-holes/", "date": "2015-10-20T00:00:00.000Z", "author": "Brian Krebs", "title": "Flash, Java Patches Fix Critical Holes", "body": "Adobe has issued a patch to fix a zero-day vulnerability in its Flash Player software. Separately,\nOracle today released an update to plug more than two-dozen flaws in its Java software. Both\nprograms plug directly into the browser and are highly targeted by malicious software and\nmalefactors. Although Flash and Java are both widely installed, most users could probably ditch each\nprogram with little to no inconvenience or regret.\n\nThe latest Flash version, Flash 19.0.0.226 on Windows and Mac, fixes a flaw that Adobe warned last\nweek was already being exploited in active attacks. As I noted in a previous post, most users can\njump off the incessant Flash-patching merry-go-round by simply removing the program \u2014 or hobbling it\nuntil and unless it is needed for some purpose or site.\n\nDisabling Flash in Chrome is simple enough, and can be easily reversed: On a Windows, Mac, Linux or\nChrome OS installation of Chrome, type \u201cchrome:plugins\u201d into the address bar, and on the Plug-ins\npage look for the \u201cFlash\u201d listing: To disable Flash, click the disable link (to re-enable it, click\n\u201cenable\u201d). Windows users can remove Flash from the Add/Remove Programs panel, or use Adobe\u2019s\nuninstaller for Flash Player.\n\nIf you\u2019re concerned about removing Flash altogether, consider a dual-browser approach. That is,\nunplugging Flash from the browser you use for everyday surfing, and leaving it plugged in to a\nsecond browser that you only use for sites that require Flash. Another alternative to removing Flash\nis Click-To-Play, which lets you control what Flash (and Java) content gets to load when you visit a\nWeb page.\n\nIf you decide to proceed with Flash and update, the most recent versions of Flash should be\navailable from the Flash home page, but beware potentially unwanted add-ons, like McAfee Security\nScan. To avoid this, uncheck the pre-checked box before downloading, or grab your OS-specific Flash\ndownload from here. Windows users who browse the Web with anything other than Internet Explorer may\nneed to apply this patch twice, once with IE and again using the alternative browser (Firefox,\nOpera, e.g.).\n\nJAVA\n\nSeparately, Oracle has released its quarterly patch update for Java, another powerful browser plugin\nthat also is heavily targeted by malware and ne\u2019er-do-wells. This update for Java \u2014 which brings the\nprogram to Java 8 Update 65 \u2014 fixes at least 25 security vulnerabilities. According to Oracle, all\nbut one of those flaws may be remotely exploitable without authentication, meaning they can be\nexploited over a network without the need for a username and password.\n\nIf you have Java installed, please update it as soon as possible.\u00a0Windows users can check for the\nprogram in the Add/Remove Programs listing in Windows, or\u00a0visit Java.com and click the \u201cDo I have\nJava?\u201d link on the homepage. Updates also should be available via the Java Control Panel or from\nJava.com.\n\nIf you really need and use Java for specific Web sites or applications, take a few minutes to update\nthis software.\u00a0Otherwise, seriously consider removing Java altogether. I have long urged end users\nto junk Java unless they have a specific use for it (this advice does not scale for businesses,\nwhich often have legacy and custom applications that rely on Java). This widely installed and\npowerful program is riddled with security holes, and is a top target of malware writers and\nmiscreants.\n\nIf you have an affirmative use or need for Java, there is a way to have this program installed while\nminimizing the chance that crooks will exploit unknown or unpatched flaws in the program: unplug it\nfrom the browser unless and until you\u2019re at a site that requires it (or at least take advantage of\nclick-to-play, which can block Web sites from displaying both Java and Flash content by default).\nThe latest versions of Java let users disable Java content in web browsers through the Java Control\nPanel. Alternatively, consider a dual-browser approach, unplugging Java from the browser you use for\neveryday surfing, and leaving it plugged in to a second browser that you only use for sites that\nrequire Java.\n\nMany people confuse Java with\u00a0\u00a0JavaScript, a powerful scripting language that helps make sites\ninteractive. Unfortunately, a huge percentage of Web-based attacks use JavaScript tricks to foist\nmalicious software and exploits onto site visitors.\u00a0For more about ways to manage JavaScript in the\nbrowser, check out my tutorial Tools for a Safer PC.\n\n", "polarity": 0.11036458333333334, "subjectivity": 0.5117212301587301, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2015/10/adobe-microsoft-push-critical-security-fixes-8/", "date": "2015-10-14T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Microsoft Push Critical Security Fixes", "body": "Adobe and Microsoft on Tuesday each released security updates to remedy critical vulnerabilities in\ntheir software. Adobe pushed patches to plug at least 56 security holes present in Adobe Reader and\nAcrobat, as well as a fix for Flash Player that corrects 13 flaws. Separately, Microsoft issued six\nupdate bundles to address at least 33 security problems in various versions of Windows, Microsoft\nOffice and other software.\n\nThree of the patches Microsoft issued earned the company\u2019s most dire \u201ccritical\u201d rating, meaning they\ncould be exploited by hackers or malware to take complete control over vulnerable systems without\nany help from users. According to security firm Shavlik, four of the flaws involve vulnerabilities\nthat were publicly disclosed by someone other than Microsoft prior to this week. The implication\nhere is that malware writers may have had a head start figuring out ways to exploit several of these\nflaws, so it\u2019s probably best not to let too much grass grow under your feet before applying this\nmonth\u2019s updates.\n\nAs per usual, the largest number of flaws addressed in a single patch from Microsoft target multiple\nversions of Internet Explorer, the default browser on Windows \u2014 as well as Microsoft Edge, Redmond\u2019s\nreplacement browser for IE. Other critical fixes concern the Windows operating system and Office.\n\nAs it usually does on Patch Tuesday, Adobe pushed a critical update for its ubiquitous Flash Player\nsoftware that plugs multiple flaws.\u00a0Find out if you have Flash installed and its\u00a0current version\nnumber by visiting this page.\n\nIf you use and need Flash Player, it\u2019s time to update the program (the latest version is19.0.0.207\nfor Windows and Mac users). Google Chrome and Internet Explorer bundle their own versions of Flash\n(also now at v. 19.0.0.185); each should auto-update to the latest.\n\nAdobe said it was unaware of any exploits in the wild for the vulnerabilities fixed in this Flash\nrelease. Nevertheless,\u00a0I would recommend that if you use Flash that you strongly\u00a0consider removing\nit, or at least hobbling it until and unless you need it.\n\nUpdate, 4:31 p.m. ET: In case you needed another reason to remove or hobble Flash, Adobe just\nreleased an advisory warning that attackers are exploiting an unpatched vulnerability in this latest\nversion of Flash player. Adobe said it expects to issue another fix for Flash to fix the flaw during\nthe week of Oct. 19.\n\nOriginal story:\n\nDisabling Flash in Chrome is simple enough, and can be easily reversed: On a Windows, Mac, Linux or\nChrome OS installation of Chrome, type \u201cchrome:plugins\u201d into the address bar, and on the Plug-ins\npage look for the \u201cFlash\u201d listing: To disable Flash, click the disable link (to re-enable it, click\n\u201cenable\u201d). Windows users can remove Flash from the Add/Remove Programs panel, or use Adobe\u2019s\nuninstaller for Flash Player.\n\nIf you\u2019re concerned about removing Flash altogether, consider a dual-browser approach. That is,\nunplugging Flash from the browser you use for everyday surfing, and leaving it plugged in to a\nsecond browser that you only use for sites that require Flash. Another alternative to removing Flash\nis Click-To-Play, which lets you control what Flash content gets to load when you visit a Web page.\n\nIf you decide to proceed with Flash and update, the\u00a0most recent versions of Flash should be\navailable from the Flash home page, but beware potentially unwanted add-ons, like McAfee Security\nScan. To avoid this, uncheck the pre-checked box before downloading, or grab your OS-specific Flash\ndownload from\u00a0here.\u00a0Windows users who browse the Web with anything other than Internet Explorer may\nneed to apply this patch twice, once with IE and again using the alternative browser (Firefox,\nOpera, e.g.).\n\nThere is also a security update available for Adobe AIR. If you use this program, please take a\nmoment today to patch it. AIR should prompt you to update to the latest version if you launch an\napplication the requires AIR, such as Pandora.\n\nFinally, Adobe issued a fairly substantial fix for Adobe Reader and Acrobat that fixes more than\nfour dozen vulnerabilities in these programs. For more on the latest versions and download link,\ncheck out Adobe\u2019s security advisory.\n\n", "polarity": 0.11764069264069263, "subjectivity": 0.49463203463203453, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2015/09/adobe-flash-patch-plus-shockwave-shocker/", "date": "2015-09-21T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe Flash Patch, Plus Shockwave Shocker", "body": "Adobe has released a critical software update to fix nearly two-dozen security holes in its Flash\nPlayer browser plugin. Separately, I want to take a moment to encourage users who have Adobe\nShockwave Player installed to finally junk this program; turns out Shockwave \u2014 which comes with its\nown version of Flash \u2014 is still many versions\u00a0behind in bundling the latest Flash fixes.\n\nIf you use and need Flash Player, it\u2019s time to update the program (the latest version is 19.0.0.185\nfor Windows and Mac users). Google Chrome and Internet Explorer bundle their own versions of Flash\n(also now at v. 19.0.0.185); each should auto-update to the latest. Find out if you have Flash\ninstalled and its\u00a0current version number by visiting this page.\n\nAdobe said it was unaware of any exploits in the wild for the vulnerabilities fixed in this Flash\nrelease. Nevertheless,\u00a0I would recommend that if you use Flash that you strongly\u00a0consider removing\nit, or at least hobbling it until and unless you need it. Disabling Flash in Chrome is simple\nenough, and can be easily reversed: On a Windows, Mac, Linux or Chrome OS installation of Chrome,\ntype \u201cchrome:plugins\u201d into the address bar, and on the Plug-ins page look for the \u201cFlash\u201d listing:\nTo disable Flash, click the disable link (to re-enable it, click \u201cenable\u201d). Windows users can remove\nFlash from the Add/Remove Programs panel, or use Adobe\u2019s uninstaller for Flash Player.\n\nIf you\u2019re concerned about removing Flash altogether, consider a dual-browser approach. That is,\nunplugging Flash from the browser you use for everyday surfing, and leaving it plugged in to a\nsecond browser that you only use for sites that require Flash.\n\nIf you decide to proceed with Flash and update, the\u00a0most recent versions of Flash should be\navailable from the Flash home page, but beware potentially unwanted add-ons, like McAfee Security\nScan. To avoid this, uncheck the pre-checked box before downloading, or grab your OS-specific Flash\ndownload from\u00a0here.\u00a0Windows users who browse the Web with anything other than Internet Explorer may\nneed to apply this patch twice, once with IE and again using the alternative browser (Firefox,\nOpera, e.g.).\n\nSHOCKWAVE SHOCKER\n\nIn other Adobe patch news, on Sept. 8, 2015 I urged readers who have the Shockwave media player\ninstalled to update to the latest version or else junk the program altogether. In a post more than a\nyear ago, I outlined Why You Should Ditch Adobe Shockwave, noting that the program bundles a\ncomponent of Adobe Flash that was more than 15 months behind on security updates.\n\nI checked back with Adobe last week to find out whether the version of Shockwave that the company\nreleased earlier this month is caught up on Flash flaws. Turns out, it\u2019s still woefully behind. The\nversion of Shockwave released just two weeks ago bundles the Flash runtime 16.0.0.305, a version of\nFlash that Adobe released in February 2015.\n\nTranslation: The version of Shockwave that Adobe released two weeks ago lacks fixes for a whopping\n155 vulnerabilities in Flash that can be used to backdoor virtually any computer running it!\nIncluded in those missing fixes are patches for a half-dozen Flash flaws that were being actively\nexploited at the time they were fixed in Flash Player.\n\nNot sure whether your computer has Shockwave installed?\u00a0If you visit\u00a0this link\u00a0and see a short\nanimation, it should tell you which version of Shockwave you have installed. If it prompts you to\ndownload Shockwave (or in the case of Google Chrome for some reason just automatically downloads the\ninstaller), then you don\u2019t have Shockwave installed. To remove Shockwave, grab Adobe\u2019s uninstall\ntool here. Mozilla Firefox users should note that the presence of the \u201cShockwave Flash\u201d plugin\nlisted in the Firefox Add-ons section denotes an installation of Adobe Flash Player plugin \u2014 not\nAdobe Shockwave Player.\n\n", "polarity": 0.10325203252032518, "subjectivity": 0.5568137824235385, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2015/09/microsoft-pushes-a-dozen-security-updates/", "date": "2015-09-08T00:00:00.000Z", "author": "Brian Krebs", "title": "Microsoft Pushes a Dozen Security Updates", "body": "Microsoft today released\u00a0a dozen security updates for computers running supported versions of its\nWindows operating system. Five\u00a0of the patches fix flaws that could get PCs compromised with little\nto no help from users, and five of the bulletins have vulnerabilities that were publicly disclosed\nbefore today (including one that reportedly has been detected in exploits in the wild).\u00a0Separately,\nAdobe is pushing a security update for its Shockwave Player \u2013 a browser plugin that\u00a0I\u2019ve long urged\nreaders to junk.\n\nAccording to security firm Shavlik, the patches that address flaws which have already been publicly\ndisclosed include a large Internet Explorer (IE) update that corrects 17 flaws and a fix for\nMicrosoft Edge, Redmond\u2019s flagship replacement browser for IE; both address this bug, among others.\n\nA critical fix\u00a0for a Windows graphics component addresses flaws that previously showed up in two\npublic disclosures, one of which Shavlik says is currently being exploited in the wild\n(CVE-2015-2546).\u00a0\u00a0The 100th patch that Microsoft has issued so far this year \u2014 a salve for Windows\nMedia Player\u00a0\u2013 fixes two different vulnerabilities that were publicly disclosed before today\n(CVE-2015-2509 and CVE-2015-2504).\n\nIn other important patch news today, Adobe has released a security update for its Shockwave Player\nbrowser plugin. If you need this program, then update it; the latest version is v.\u00a012.2.0.162. But\nin my experience, most users don\u2019t need it and are better off without it. For more on what I say\nthat, see Why You Should Ditch Adobe Shockwave.\n\nNot sure whether your computer has Shockwave installed?\u00a0If you visit\u00a0this link\u00a0and see a short\nanimation, it should tell you which version of Shockwave you have installed. If it prompts you to\ndownload Shockwave (or in the case of Google Chrome for some reason just automatically downloads the\ninstaller), then you don\u2019t have Shockwave installed. To remove Shockwave, grab Adobe\u2019s uninstall\ntool here. Mozilla Firefox users should note that the presence of the \u201cShockwave Flash\u201d plugin\nlisted in the Firefox Add-ons section denotes an installation of Adobe Flash Player plugin \u2014 not\nAdobe Shockwave Player.\n\n", "polarity": 0.08341450216450216, "subjectivity": 0.46935425685425697, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2015/08/adobe-ms-push-patches-oracle-drops-drama/", "date": "2015-08-11T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, MS Push Patches, Oracle Drops Drama", "body": "Adobe today pushed another update to seal nearly three dozen security holes in its Flash Player\nsoftware. Microsoft also released 14 patch bundles, including a large number of fixes for computers\nrunning its new Windows 10 operating system. Not to be left out of Patch Tuesday, Oracle\u2018s chief\nsecurity officer lobbed something of a conversational hand grenade into the security research\ncommunity, which responded in kind and prompted Oracle to back down.\n\nAdobe\u2019s latest patch for Flash (it has issued more than a dozen this year alone) fixes at least 34\nseparate security vulnerabilities in Flash and Adobe AIR. Mercifully, Adobe said this time around it\nis not aware of malicious hackers actively exploiting any of the flaws addressed in this release.\n\nAdobe recommends users of Adobe Flash Player on Windows and Macintosh update to Adobe Flash Player\n18.0.0.232. Adobe Flash Player installed with Google Chrome will be automatically updated to the\nlatest Google Chrome version, which will include Adobe Flash Player 18.0.0.232 on Windows and\nMacintosh, and version 18.0.0.233 for Linux and Chrome OS.\n\nHowever, I would recommend that if you use Flash, you should strongly consider removing it, or at\nleast hobbling it until and unless you need it. Disabling Flash in Chrome is simple enough, and can\nbe easily reversed: On a Windows, Mac, Linux or Chrome OS installation of Chrome, type\n\u201cchrome:plugins\u201d into the address bar, and on the Plug-ins page look for the \u201cFlash\u201d listing: To\ndisable Flash, click the disable link (to re-enable it, click \u201cenable\u201d). Windows users can remove\nFlash from the Add/Remove Programs panel, or use Adobe\u2019s uninstaller for Flash Player.\n\nIf you\u2019re concerned about removing Flash altogether, consider a dual-browser approach. That is,\nunplugging Flash from the browser you use for everyday surfing, and leaving it plugged in to a\nsecond browser that you only use for sites that require Flash.\n\nIf you decide to proceed with Flash and update, the\u00a0most recent versions of Flash should be\navailable from the Flash home page, but beware potentially unwanted add-ons, like McAfee Security\nScan. To avoid this, uncheck the pre-checked box before downloading, or grab your OS-specific Flash\ndownload from\u00a0here.\u00a0Windows users who browse the Web with anything other than Internet Explorer may\nneed to apply this patch twice, once with IE and again using the alternative browser (Firefox,\nOpera, e.g.)\n\nMICROSOFT\n\nMicrosoft may have just released Windows 10 as a free upgrade to Windows 7 and 8 customers, but some\n40 percent of the patches released today apply to the new flagship OS, according to a tally by\nsecurity firm Qualys. There is even an update for Microsoft Edge, the browser that Microsoft wants\nto replace Internet Explorer.\n\nNevertheless, IE gets its own critical update (MS15-089), which addresses at least 13 flaws \u2014 most\nof which can be exploited remotely without any help from the user, save from perhaps just visiting a\nhacked or malicious site.\n\nAnother notable update plugs scary-looking flaws in Microsoft Office (MS15-081). Qualys says it\nappears the worst of the flaws fixed in the Office patch could be triggered automatically \u2014 possibly\nthrough the Outlook e-mail preview pane, for example.\n\nAccording to security firm Shavlik, there are two flaws fixed in today\u2019s release from Microsoft that\nare being actively exploited in the wild: One fixed in the Office Patch (CVE-2015-1642) and another\nin Windows itself (CVE-2015-1769). Several other vulnerabilities fixed today were publicly disclosed\nprior to today, increasing the risk that we could see public exploitation of these bugs soon.\n\nIf you run Windows, take some time soon to back up your data and update your system. As ever, if you\nexperience any issues as a result of applying any of these updates, please leave a note about your\nexperience in the comments section.\n\nORACLE\n\nI\u2019ve received questions from readers about a rumored software update for Java (Java 8, Update 60); I\nhave no idea where this is coming from, but this should not be security-related patch. Generally\nspeaking, even-numbered Java updates are non-security related. More importantly, Oracle has moved to\nreleasing security updates for Java on a quarterly patch cycle,\u00a0except for extreme emergencies (and\nI\u2019m unaware of a dire problem with Java right now, aside perhaps from having this massively buggy\nand insecure program installed in the first place).\n\nAlas, not to be left out of the vulnerability madness, Oracle\u2019s Chief Security Officer Mary Ann\nDavidson published a provocative\u00a0blog post titled \u201cDon\u2019t, Just Don\u2019t\u201d that stirred up quite a\ntempestuous response from the security community today.\n\nDavidson basically said security researchers who try to reverse engineer the company\u2019s code to find\nsoftware flaws are violating the legal agreement they acknowledged when installing the software. She\nalso chastised researchers for spreading \u201ca pile of steaming FUD\u201d (a.k.a. Fear, Uncertainty and\nDoubt).\n\nOracle later unpublished the post (it is still available in Google\u2019s cache here), but not before\nDavidson\u2019s rant was lampooned endlessly on Twitter and called out by numerous security firms. My\nfavorite so far came from Twitter user small_data, who said: \u201cThe City of Rome\u2019s EULA stipulates\nVisigoths cannot recruit consultants who know about some hidden gate to gain entry.\u201d\n\n", "polarity": 0.07219021197894437, "subjectivity": 0.4881841554376764, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2015/07/adobe-ms-oracle-push-critical-security-fixes/", "date": "2015-07-14T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, MS, Oracle Push Critical Security Fixes", "body": "This being the second Tuesday of the month, it\u2019s officially Patch Tuesday. But it\u2019s not just\nMicrosoft Windows users who need to update today: Adobe has released fixes for several products,\nincluding a Flash Player bundle that patches two vulnerabilities for which exploit code is available\nonline. Separately, Oracle issued a critical patch update that plugs more than two dozen security\nholes in Java.\n\nADOBE\n\nAdobe\u2019s Flash patch brings Flash to version 18.0.0.209 on Windows and Mac systems. This newest\nrelease fixes two vulnerabilities that were discovered as part of the Hacking Team breach. Both\nflaws are exploitable via code that is already published online, so if you must use Flash please\ntake a moment to update this program.\n\nIf you\u2019re unsure\u00a0whether your browser has Flash installed or what version it may be running, browse\nto\u00a0this link.\u00a0Adobe Flash Player installed with\u00a0Google Chrome, as well as Internet Explorer on\nWindows 8.x, should automatically update to\u00a0the latest version.\u00a0To force the installation of an\navailable update on Chrome, click the triple bar icon to the right of the address bar, select \u201cAbout\nGoogle\u201d Chrome, click the apply update button and restart the browser.\n\nThe most recent versions of Flash should be available from the Flash home page, but beware\npotentially unwanted add-ons, like McAfee Security Scan. To avoid this, uncheck the pre-checked box\nbefore downloading, or grab your OS-specific Flash download from\u00a0here.\u00a0Windows users who browse the\nWeb with anything other than Internet Explorer may need to apply this patch twice, once with IE and\nagain using the alternative browser (Firefox, Opera, e.g.)\n\nPlease consider whether you really need Flash installed. It is a powerful program that is being\nmassively leveraged by cybercriminals to break into systems. Monday\u2019s post includes more information\non how to remove Flash from your computer, depending on what operating system you use.\n\nAdobe also issued security updates for Adobe Acrobat and its PDF Reader programs that fix at least\n46 vulnerabilities in these products. Links to the latest versions of both programs are available in\nthe Acrobat/Reader security advisory.\n\nFinally, Adobe released a security update for its Shockwave Player software for Windows and Mac.\nThis is another Adobe product that I have long urged people to uninstall, largely because most users\nhave no need for Shockwave and it\u2019s just as buggy as Flash but it doesn\u2019t get updated nearly enough.\nIn any case, links to the latest version of Shockwave are available in the advisory.\n\nMICROSOFT\n\nWith today\u2019s 14 patch bundles, Microsoft fixed dozens of vulnerabilities in Windows and related\nsoftware. A cumulative patch for Internet Explorer corrects at least 28 flaws in the default Windows\nbrowser. Three of those IE flaws were disclosed prior to today\u2019s patches, including one zero-day\nflaw uncovered in the Hacking Team breach.\n\nMost of these IE bugs are browse-and-get-owned vulnerabilities, meaning IE users can infect their\nsystems merely by browsing to a hacked or malicious Web site.\n\nAnother noteworthy update\u00a0fixes at least eight flaws in various versions of Microsoft Office,\nincluding one (CVE-2424) that is actively being exploited by attackers.\n\nMore detailed summaries of the Microsoft patches released today can be found at Microsoft\u2019s Security\nBulletin Summary for July 2015, and at the Qualys blog.\n\nORACLE\n\nOracle\u2019s patch for Java SE includes fixes for 25 security vulnerabilities, including a flaw that is\nalready being actively exploited to break into systems running Java SE. A blog post by Trend Micro\nhas more on the Java zero-day flaw, which\u00a0was apparently used in targeted attacks in a cyber\nespionage campaign.\n\nThe latest version, Java 8 Update 51, is available from Java.com. But if you use Java, please take a\nmoment to consider whether you still need this program on your computer. Java is yet another program\nthat I have long urged users to do without, for most of the same reasons I\u2019ve urged readers to ditch\nFlash and Shockwave: this widely installed and powerful program is riddled with security holes, and\nis a top target of malware writers and miscreants.\n\nIf you have an affirmative use or need for Java, there is a way to have this program installed while\nminimizing the chance that crooks will exploit unknown or unpatched flaws in the program: unplug it\nfrom the browser unless and until you\u2019re at a site that requires it (or at least take advantage of\nclick-to-play, which can block Web sites from displaying both Java and Flash content by default).\n\nThe latest versions of Java let users disable Java content in web browsers through the Java Control\nPanel. Alternatively, consider a dual-browser approach, unplugging Java from the browser you use for\neveryday surfing, and leaving it plugged in to a second browser that you only use for sites that\nrequire Java.\n\nMany people confuse Java with\u00a0\u00a0JavaScript, a powerful scripting language that helps make sites\ninteractive. Unfortunately, a huge percentage of Web-based attacks use JavaScript tricks to foist\nmalicious software and exploits onto site visitors.\u00a0For more about ways to manage JavaScript in the\nbrowser, check out my tutorial Tools for a Safer PC.\n\n", "polarity": 0.18263888888888893, "subjectivity": 0.5385714285714285, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2015/06/emergency-patch-for-adobe-flash-zero-day/", "date": "2015-06-23T00:00:00.000Z", "author": "Brian Krebs", "title": "Emergency Patch for Adobe Flash Zero-Day", "body": "Adobe Systems Inc. today released an emergency update to fix a dangerous security hole in its\nwidely-installed Flash Player browser plugin. The company warned that the vulnerability is already\nbeing exploited in targeted attacks, and urged users to update the program as quickly as possible.\n\nIn an advisory issued Tuesday morning, Adobe said the latest version of Flash \u2014 v. 18.0.0.194 on\nWindows and Mac OS X \u2014 fixes a critical flaw (CVE-2015-3113) that is being actively exploited in\n\u201climited, targeted attacks.\u201d The company said systems running Internet Explorer for Windows 7 and\nbelow, as well as Firefox on Windows XP, are known targets of these exploits.\n\nIf you\u2019re unsure\u00a0whether your browser has Flash installed or what version it may be running, browse\nto\u00a0this link.\u00a0Adobe Flash Player installed with\u00a0Google Chrome, as well as Internet Explorer on\nWindows 8.x, should automatically update to\u00a0the latest version.\u00a0To force the installation of an\navailable update on Chrome, click the triple bar icon to the right of the address bar, select \u201cAbout\nGoogle\u201d Chrome, click the apply update button and restart the browser.\n\nThe most recent versions of Flash should be available from the Flash home page, but beware\npotentially unwanted add-ons, like McAfee Security Scan. To avoid this, uncheck the pre-checked box\nbefore downloading, or grab your OS-specific Flash download from\u00a0here.\u00a0Windows users who browse the\nWeb with anything other than Internet Explorer may need to apply this patch twice, once with IE and\nagain using the alternative browser (Firefox, Opera, e.g.)\n\nIn lieu of patching Flash Player yet again, it might be worth considering whether you really need to\nkeep Flash Player installed at all. In a happy coincidence, earlier today I published a piece about\nmy experience going a month without having Flash Player installed. The result? I hardly missed it at\nall.\n\n", "polarity": 0.14022556390977442, "subjectivity": 0.5813283208020049, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2015/06/adobe-microsoft-issue-critical-security-fixes-4/", "date": "2015-06-10T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Microsoft Issue Critical Security Fixes", "body": "Adobe today released software updates to plug at least 13 security holes in its Flash Player\nsoftware. Separately, Microsoft pushed out fixes for at least three dozen flaws in Windows and\nassociated software.\n\nThe bulk of the flaws Microsoft addressed today (23 of them) reside in the Internet Explorer Web\nbrowser. Microsoft also issued fixes for serious problems in Office, the Windows OS itself and\nWindows Media Player, among other components. A link to an index of the individual Microsoft updates\nreleased today is here.\n\nAs it normally does on Patch Tuesday, Adobe issued fixes for its Flash and AIR software, plugging a\nslew of dangerous flaws in both products. Flash continues to be one of the more complex programs to\nmanage and update on a computer, mainly because its auto-update function tends to lag the actual\npatches by several days at least (your mileage may vary), and it\u2019s difficult to know which version\nis the latest.\n\nIf you\u2019re unsure\u00a0whether your browser has Flash installed or what version it may be running, browse\nto\u00a0this link.\u00a0Users of the Adobe Flash Player Desktop Runtime for Windows and Macintosh should\nupdate to Adobe Flash Player 18.0.0.160. Adobe Flash Player installed with Google Chrome, as well as\nInternet Explorer onWindows 8.x, should automatically update to version 18.0.0.160, although Chrome\nusers on Mac systems will find 18.0.0.161 is actually the latest version, according to Adobe. To\nforce the installation of an available update, click the triple bar icon to the right of the address\nbar, select \u201cAbout Google\u201d Chrome, click the apply update button and restart the browser.\n\nThe most recent versions of Flash should be available from the Flash home page, but beware\npotentially unwanted add-ons, like McAfee Security Scan. To avoid this, uncheck the pre-checked box\nbefore downloading, or grab your OS-specific Flash download from\u00a0here.\u00a0Windows users who browse the\nWeb with anything other than Internet Explorer may need to apply this patch twice, once with IE and\nagain using the alternative browser (Firefox, Opera, e.g.). See this graphic\u00a0for the full Adobe\nversion release.\n\nMost applications bundled with Adobe AIR should check for updates on startup. If prompted, please\ndownload and install the AIR update. If you need to update manually, grab the latest version here.\n\nAs usual, please sound off in the comments section if you experience any issues applying any of\nthese patches.\n\n", "polarity": 0.06730158730158729, "subjectivity": 0.49619047619047624, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2015/05/adobe-microsoft-push-critical-security-fixes-7/", "date": "2015-05-12T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Microsoft Push Critical Security Fixes", "body": "Microsoft today issued 13 patch bundles to fix roughly four dozen security vulnerabilities in\nWindows and associated software. Separately, Adobe pushed updates to fix a slew of critical flaws in\nits Flash Player\u00a0and Adobe Air software, as well as patches to fix holes in Adobe Reader and\nAcrobat.\n\nThree of the Microsoft patches earned the company\u2019s most dire \u201ccritical\u201d rating, meaning they fix\nflaws that can be exploited to break into vulnerable systems with little or no interaction on the\npart of the user. The critical patches plug at least 30 separate flaws. The majority of those are\nincluded in a cumulative update for Internet Explorer. Other critical fixes address problems with\nthe Windows OS, .NET, Microsoft Office, and Silverlight, among other components.\n\nAccording to security vendor Shavlik, the issues address in MS15-044 deserve special priority in\npatching, in part because it impacts so many different Microsoft programs but also because the\nvulnerabilities fixed in the patch can be exploited merely by viewing specially crafted content in a\nWeb page or a document. More information on and links to today\u2019s individual updates can be found\nhere.\n\nAdobe\u2019s fix for Flash Player and AIR fix at least 18 security holes in the programs. Updates are\navailable for Windows, OS X and Linux versions of the software. Mac and Windows users, the latest,\npatched version is v.\u00a017.0.0.188.\n\nIf you\u2019re unsure\u00a0whether your browser has Flash installed or what version it may be running, browse\nto\u00a0this link.\u00a0Adobe Flash Player installed with Google Chrome, as well as Internet Explorer on\nWindows 8.x, should automatically update to the latest version.\u00a0To force the installation of an\navailable update, click the triple bar icon to the right of the address bar, select \u201cAbout Google\u201d\nChrome, click the apply update button and restart the browser.\n\nThe most recent versions of Flash should be available from the Flash home page, but beware\npotentially unwanted add-ons, like McAfee Security Scan. To avoid this, uncheck the pre-checked box\nbefore downloading, or grab your OS-specific Flash download from\u00a0here.\u00a0Windows users who browse the\nWeb with anything other than Internet Explorer may need to apply this patch twice, once with IE and\nagain using the alternative browser (Firefox, Opera, e.g.).\n\nIf you run Adobe Reader, Acrobat or AIR, you\u2019ll need to update those programs as well. Adobe said it\nis not aware of any active exploits or attacks against any of the vulnerabilities it patched with\ntoday\u2019s releases.\n\n", "polarity": 0.08684895833333334, "subjectivity": 0.5313616071428573, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2015/04/critical-updates-for-windows-flash-java/", "date": "2015-04-14T00:00:00.000Z", "author": "Brian Krebs", "title": "Critical Updates for Windows, Flash, Java", "body": "Get your patch chops on people, because chances are you\u2019re running software from Microsoft, Adobe or\nOracle that received critical security updates today. Adobe released a Flash Player update to fix at\nleast 22 flaws, including one flaw that is being actively exploited. Microsoft pushed out 11 update\nbundles to fix more than two dozen bugs in Windows and associated software, including one that was\npublicly disclosed this month. And Oracle has an update for its Java software that addresses at\nleast 15 flaws, all of which are exploitable remotely without any authentication.\n\nAdobe\u2019s patch includes a fix for a zero-day bug (CVE-2015-3043) that the company warns is already\nbeing exploited. Users of the Adobe Flash Player for Windows and Macintosh should update to Adobe\nFlash Player 17.0.0.169 (the current versions other OSes is listed in the chart below).\n\nIf you\u2019re unsure\u00a0whether your browser has Flash installed or what version it may be running, browse\nto\u00a0this link.\u00a0Adobe Flash Player installed with Google Chrome, as well as Internet Explorer on\nWindows 8.x, should automatically update to version 17.0.0.169.\n\nGoogle has an update available for Chrome that fixes a slew of flaws, and I assume it includes this\nFlash update, although the Flash checker pages only report that I now have version 17.0.0 installed\nafter applying the Chrome update and restarting (the Flash update released last month put that\nversion at 17.0.0.134, so this is not particularly helpful). To force the installation of an\navailable update, click the triple bar icon to the right of the address bar, select \u201cAbout Google\u201d\nChrome, click the apply update button and restart the browser.\n\nThe most recent versions of Flash should be available from the Flash home page, but beware\npotentially unwanted add-ons, like McAfee Security Scan. To avoid this, uncheck the pre-checked box\nbefore downloading, or grab your OS-specific Flash download from here.\u00a0Windows users who browse the\nWeb with anything other than Internet Explorer may need to apply this patch twice, once with IE and\nagain using the alternative browser (Firefox, Opera, e.g.).\n\nMicrosoft has released 11 security bulletins this month, four of which are marked \u201ccritical,\u201d\nmeaning attackers or malware can exploit them to break into vulnerable systems with no help from\nusers, save for perhaps visiting a booby-trapped or malicious Web site. The Microsoft patches fix\nflaws in\u00a0Windows, Internet Explorer (IE), Office, and .NET\n\nThe critical updates apply to two Windows bugs, IE, and\u00a0Office. .NET updates have a history of\ntaking forever to apply and introducing issues when applied with other patches, so I\u2019d suggest\nWindows users apply all other updates, restart and then install the .NET update (if available for\nyour system).\n\nOracle\u2019s quarterly \u201ccritical patch update\u201d plugs 15 security holes. If you have Java installed,\nplease update it as soon as possible.\u00a0Windows users can check for the program in the Add/Remove\nPrograms listing in Windows, or\u00a0visit Java.com and click the \u201cDo I have Java?\u201d link on the homepage.\nUpdates also should be available via the Java Control Panel or fromJava.com.\n\nIf you really need and use Java for specific Web sites or applications, take a few minutes to update\nthis software. In the past,\u00a0updating via the control panel auto-selected the installation of third-\nparty software, so be sure to look for any pre-checked \u201cadd-ons\u201d before proceeding with an update\nthrough the Java control panel. Also, Java 7 users should note that Oracle has ended support for\nJava 7 after this update. The company has been quietly migrating Java 7 users to Java 8, but if this\nhasn\u2019t happened for you yet and you really need Java installed in the browser, grab a copy of Java\n8. The recommended version is Java 8 Update 45.\n\nOtherwise, seriously consider removing Java altogether. I have long urged end users to junk Java\nunless they have a specific use for it (this advice does not scale for businesses, which often have\nlegacy and custom applications that rely on Java). This widely installed and powerful program is\nriddled with security holes, and is a top target of malware writers and miscreants.\n\nIf you have an affirmative use or need for Java, there is a way to have this program installed while\nminimizing the chance that crooks will exploit unknown or unpatched flaws in the program: unplug it\nfrom the browser unless and until you\u2019re at a site that requires it (or at least take advantage of\nclick-to-play, which can block Web sites from displaying both Java and Flash content by default).\nThe latest versions of Java let users disable Java content in web browsers through the Java Control\nPanel. Alternatively, consider a dual-browser approach, unplugging Java from the browser you use for\neveryday surfing, and leaving it plugged in to a second browser that you only use for sites that\nrequire Java.\n\nMany people confuse Java with\u00a0\u00a0JavaScript, a powerful scripting language that helps make sites\ninteractive. Unfortunately, a huge percentage of Web-based attacks use JavaScript tricks to foist\nmalicious software and exploits onto site visitors.\u00a0For more about ways to manage JavaScript in the\nbrowser, check out my tutorial Tools for a Safer PC.\n\n", "polarity": 0.08840970350404313, "subjectivity": 0.49606169511829884, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2015/03/adobe-flash-update-plugs-11-security-holes/", "date": "2015-03-12T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe Flash Update Plugs 11 Security Holes", "body": "Adobe has released an update for its Flash Player software that fixes at least 11 separate, critical\nsecurity vulnerabilities in the program. If you have Flash installed, please take a moment to ensure\nyour systems are updated.\n\nNot sure whether your browser has Flash installed or what version it may be running? Browse to\u00a0this\nlink. The newest, patched version is 17.0.0.134 for Windows and Mac users. Adobe Flash Player\ninstalled with Google Chrome, as well as Internet Explorer on Windows 8.x, should automatically\nupdate to version 17.0.0.134.\n\nThe most recent versions of Flash should be available from the Flash home page, but beware\npotentially unwanted add-ons, like McAfee Security Scan. To avoid this, uncheck the pre-checked box\nbefore downloading, or grab your OS-specific Flash download from here.\u00a0Windows users who browse the\nWeb with anything other than Internet Explorer may need to apply this patch twice, once with IE and\nagain using the alternative browser (Firefox, Opera, e.g.).\n\nThe last few Flash updates from Adobe have been in response to zero-day threats targeting previously\nunknown vulnerabilities in the program. But Adobe says it is not aware of any exploits in the wild\nfor the issues addressed in this update. Adobe\u2019s advisory on this patch is available here.\n\n", "polarity": 0.02142857142857143, "subjectivity": 0.4593253968253968, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2015/02/yet-another-flash-patch-fixes-zero-day-flaw/", "date": "2015-02-05T00:00:00.000Z", "author": "Brian Krebs", "title": "Yet Another Flash Patch Fixes Zero-Day Flaw", "body": "For the third time in two weeks, Adobe has issued an emergency security update for its Flash Player\nsoftware to fix a dangerous zero-day vulnerability that hackers already are exploiting to launch\ndrive-by download attacks.\n\nThe newest update, version 16.0.0.305, addresses a critical security bug (CVE-2015-0313) present in\nthe version of Flash that Adobe released on Jan. 27\u00a0(v. 16.0.0.296). Adobe said it is are aware of\nreports that this vulnerability is being actively exploited in the wild via drive-by-download\nattacks against systems running Internet Explorer and Firefox on Windows 8.1 and below.\n\nAdobe\u2019s advisory credits both Trend Micro and Microsoft with reporting this bug.\u00a0Trend Micro\npublished a blog post three days ago warning that the flaw was being used in malvertising attacks \u2013\nbooby-trapped ads uploaded by criminals to online ad networks. Trend also published a more in-depth\npost examining this flaw\u2019s use in the Hanjuan Exploit Kit, a crimeware package made to be stitched\ninto hacked Web sites and foist malware on visitors via browser plug-in flaws like this one.\n\nTo see which version of Flash you have installed, check this link.\u00a0Windows users who browse the Web\nwith anything other than Internet Explorer may need to apply this patch twice, once with IE and\nagain using the alternative browser (Firefox, Opera, e.g.).\n\nThe most recent versions of Flash should be available from the Flash home page, but beware\npotentially unwanted add-ons, like McAfee Security Scan. To avoid this, uncheck the pre-checked box\nbefore downloading, or grab your OS-specific Flash download from here.\n\nIE10/IE11 on Windows 8.x and Chrome should auto-update their versions of Flash. Google Chrome\nversion\u00a040.0.2214.111\u00a0includes this update, and is available now. To check for updates in Chrome,\nclick the stacked three bars to the right of the address bar in Chrome, and look for a listing near\nthe bottom that says \u201cUpdate Chrome.\u201d\n\nAs I noted in a previous Flash post, short of removing Flash altogether \u2014 which may be impractical\nfor some users \u2014 there are intermediate solutions. Script-blocking applications like Noscript\u00a0and\nScriptSafe\u00a0are useful in blocking Flash content, but script blockers can be challenging for many\nusers to handle.\n\nMy favorite in-between approach is\u00a0click-to-play, which is a feature available for most browsers\n(except IE, sadly) that blocks Flash content from loading by default, replacing the content on Web\nsites with a blank box. With click-to-play, users\u00a0who wish to view the blocked content need only\nclick the boxes to enable Flash content inside of them (click-to-play also blocks Java applets from\nloading by default).\n\nWindows users also should take full advantage of the Enhanced Mitigation Experience Toolkit(EMET),\u00a0a\nfree tool from Microsoft that can help Windows users beef up the security of third-party\napplications.\n\n", "polarity": 0.15381773399014778, "subjectivity": 0.5009441707717571, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2015/01/flash-patch-targets-zero-day-exploit/", "date": "2015-01-22T00:00:00.000Z", "author": "Brian Krebs", "title": "Flash Patch Targets Zero-Day Exploit", "body": "Adobe today released an important security update for its Flash Player software that fixes a\nvulnerability which is already being exploited in active attacks. Compounding the threat,\u00a0the\ncompany said it is investigating reports that crooks may have developed a separate\u00a0exploit that gets\naround the protections in this latest update.\n\nEarly indicators of a Flash zero-day vulnerability came this week in a blog post by\u00a0Kafeine,\u00a0a noted\nsecurity researcher who keeps close tabs on new innovations in \u201cexploit kits.\u201d Often called exploit\npacks \u2014 exploit kits are\u00a0automated software tools that help thieves booby-trap hacked sites to\ndeploy malicious code.\n\nKafeine wrote that a popular crimeware package called the Angler Exploit Kit was targeting\npreviously undocumented vulnerability in Flash that appears to work against many different\ncombinations of the\u00a0Internet Explorer browser on Microsoft Windows systems.\n\nAttackers may be targeting Windows and IE users for now, but the vulnerability fixed by this update\nalso exists in versions of Flash that run on Mac and Linux as well. The Flash update brings the\nmedia player to version 16.0.0.287 on Mac and Windows systems, and 11.2.202.438 on Linux.\n\nWhile Flash users should definitely update as soon as possible, there are indications that this fix\nmay not plug all of the holes in Flash for which attackers have developed exploits.\u00a0In a statement\nreleased along with the Flash update today,\u00a0Adobe said its patch addresses a newly discovered\nvulnerability that is being actively exploited, but that there appears to be another active attack\nthis patch doesn\u2019t address.\n\n\u201cAdobe is aware of reports that an exploit for\u00a0CVE-2015-0310\u00a0exists in the wild, which is being used\nin attacks against\u00a0older versions of Flash Player,\u201d Adobe said. \u201cAdditionally, we are investigating\nreports that a separate exploit for Flash Player 16.0.0.287 and earlier also exists in the wild.\u201d\n\nTo see which version of Flash you have installed, check this link. IE10/IE11 on Windows 8.x and\nChrome should auto-update their versions of Flash, although as of this writing\u00a0it seems that the\nlatest version of Chrome (40.0.2214.91) is still running v. 16.0.0.257.\n\nThe most recent versions of Flash are available from the Flash home page, but beware potentially\nunwanted add-ons, like McAfee Security Scan. To avoid this, uncheck the pre-checked box before\ndownloading, or grab your OS-specific Flash download from here.\n\nWindows users who browse the Web with anything other than Internet Explorer may need to apply this\npatch twice, once with IE and again using the alternative browser (Firefox, Opera, e.g.).\n\nI am looking forward to day in which far fewer sites require Flash Player to view content, and\ninstead rely on\u00a0HTML5\u00a0for rendering video content. For now, it\u2019s probably impractical for most users\nto remove Flash altogether, but there are in-between options to limit automatic rendering of Flash\ncontent in the browser. My favorite is click-to-play, which is a feature available for most browsers\n(except IE, sadly) that blocks Flash content from loading by default, replacing the content on Web\nsites with a blank box. With click-to-play, users\u00a0who wish to view the blocked content need only\nclick the boxes to enable Flash content inside of them (click-to-play also blocks Java applets from\nloading by default).\n\nWindows users also should take full advantage of the Enhanced Mitigation Experience Toolkit (EMET),\na free tool from Microsoft that can help Windows users beef up the security of third-party\napplications.\n\nUpdate 11:05 p.m. ET: Adobe just issued a bulletin confirming that this latest patch does not\nprotect Flash users against all current, active attacks. The company says it plans to release an\nupdate the week of Jan. 26 to address this other security issue.\n\n", "polarity": 0.1545093795093795, "subjectivity": 0.5645021645021645, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2015/01/yet-another-emergency-flash-player-patch/", "date": "2015-01-27T00:00:00.000Z", "author": "Brian Krebs", "title": "Yet Another Emergency Flash Player Patch", "body": "For the second time in a week, Adobe has issued an emergency update to fix a critical security flaw\nthat crooks are actively exploiting in its Flash Player software. Updates are available for Flash\nPlayer on Windows and Mac OS X.\n\nLast week, Adobe released an out-of-band Flash Patch to fix a dangerous bug that attackers were\nalready exploiting. In that advisory, Adobe said it was aware of yet another zero-day flaw that also\nwas being exploited, but that last week\u2019s patch didn\u2019t fix that flaw.\n\nEarlier this week, Adobe began pushing out Flash v. 16.0.0.296 to address the outstanding zero-day\nflaw. Adobe said users who have enabled auto-update for Flash Player will be receiving the update\nautomatically this week. Alternatively, users can manually update by downloading the latest version\nfrom this page.\n\nAdobe said it is working with its distribution partners to make the update available in Google\nChrome and Internet Explorer 10 and 11. Google Chrome version\u00a040.0.2214.93 includes this update, and\nis available now. To check for updates in Chrome, click the stacked three bars to the right of the\naddress bar in Chrome, and look for a listing near the bottom that says \u201cUpdate Chrome.\u201d\n\nTo see which version of Flash you have installed, check this link.\u00a0Windows users who browse the Web\nwith anything other than Internet Explorer may need to apply this patch twice, once with IE and\nagain using the alternative browser (Firefox, Opera, e.g.).\n\n", "polarity": 0.12358630952380953, "subjectivity": 0.4668154761904763, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2015/01/adobe-microsoft-push-critical-security-fixes-6/", "date": "2015-01-14T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Microsoft Push Critical Security Fixes", "body": "Microsoft on Tuesday posted eight security updates to fix serious security vulnerabilities in\ncomputers powered by its Windows operating system. Separately, Adobe pushed out a patch to plug\u00a0at\nleast nine holes in its Flash Player software.\n\nLeading the batch of Microsoft patches for 2015 is a drama-laden update to fix a vulnerability in\nWindows 8.1 that Google researchers disclosed just two days ago. Google has a relatively new policy\nof publicly disclosing flaws 90 days after they are reported to the responsible software vendor \u2014\nwhether or not that vendor has fixed the bug yet. That 90-day period elapsed over the weekend,\ncausing Google to spill the beans and potentially help attackers develop an exploit in advance of\nPatch Tuesday.\n\nFor its part, Microsoft issued a strongly-worded blog post\u00a0chiding Google for what it called a\n\u201cgotcha\u201d policy that leaves Microsoft users in the lurch. Somehow I doubt\u00a0this is the last time\nwe\u2019ll see this tension between these two software giants. But then again, who said patching had to\nbe boring? For a full rundown of updates fixed in today\u2019s release, see this link.\n\nAdobe, as it is prone to do on Patch Tuesday, issued an update to fix a whole mess of security\nproblems with its Flash Player program.\u00a0Adobe\u2019s update brings the Player to v. 16.0.0.257\u00a0for\nWindows and Mac users, and fixes at least nine critical bugs in the software. Adobe said\u00a0it is not\naware of exploits that\u00a0exist in the wild for any of the vulnerabilities fixed in this release.\n\nTo see which version of Flash you have installed, check this link. IE10/IE11 on Windows 8.x and\nChrome should auto-update their versions of Flash. If your version of Chrome doesn\u2019t show the latest\nversion of Flash, you may need to restart the browser or manually force Chrome to check for updates\n(click the three-bar icon to the right of the address bar, select \u201cAbout Google Chrome\u201d and it\nshould check then).\n\nThe most recent versions of Flash are available from the Flash home page, but beware potentially\nunwanted add-ons, like McAfee Security Scan. To avoid this, uncheck the pre-checked box before\ndownloading, or grab your OS-specific Flash download from here.\n\nWindows users who browse the Web with anything other than Internet Explorer may need to apply this\npatch twice, once with IE and again using the alternative browser (Firefox, Opera, e.g.).\n\nAs always, please feel free to sound off in the comments section below with your experience about\napplying any of these security patches.\n\n", "polarity": 0.05236091069424402, "subjectivity": 0.47926887926887934, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/12/microsoft-adobe-push-critical-security-fixes-2/", "date": "2014-12-09T00:00:00.000Z", "author": "Brian Krebs", "title": "Microsoft, Adobe Push Critical Security Fixes", "body": "If you use Microsoft or Adobe software products, chances are that software is now dangerously out of\ndate. Microsoft today released seven update bundles to fix two dozen security vulnerabilities in\nWindows and supported software. Adobe pushed patches to correct critical flaws in Acrobat, Reader\nand\u00a0Flash Player, including a bug in Flash that already is being exploited.\n\nFour of the seven updates from Microsoft earned a \u201ccritical\u201d rating, which means the patches on fix\nvulnerabilities that can be exploited by malware or attackers to seize control over vulnerable\nsystems without any help from users (save for perhaps visiting a hacked or malicious Web site). One\nof those critical patches \u2014 for Internet Explorer \u2014 plugs at least 14 holes in the default Windows\nbrowser.\n\nAnother critical patch plugs two vulnerabilities in Microsoft Word and Office Web Apps (including\nOffice for Mac 2011). There are actually three patches this month that address Microsoft Office\nvulnerabilities, including MS14-082\u00a0and MS-14-083, both of which are\u00a0rated \u201cimportant.\u201d A full\nbreakdown of these and other patches released by Microsoft today is here.\n\nAdobe\u2019s Flash Player update brings the player to v. 16.0.0.235 for Windows and Mac users, and fixes\nat least six critical bugs in the software. Adobe said an exploit for one of the flaws,\nCVE-2014-9163, already exists in the wild.\n\n\u201cThese updates address vulnerabilities that could potentially allow an attacker to take over the\naffected system,\u201d the company said in its advisory.\n\nTo see which version of Flash you have installed, check this link. IE10/IE11 on Windows 8.x and\nChrome should auto-update their versions of Flash. If your version of Chrome doesn\u2019t show the latest\nversion of Flash, you may need to restart the browser or manually force Chrome to check for updates\n(click the three-bar icon to the right of the address bar, select \u201cAbout Google Chrome\u201d and it\nshould check then).\n\nThe most recent versions of Flash are available from the Flash home page, but beware potentially\nunwanted add-ons, like McAfee Security Scan. To avoid this, uncheck the pre-checked box before\ndownloading, or grab your OS-specific Flash download from here.\n\nWindows users who browse the Web with anything other than Internet Explorer may need to apply this\npatch twice, once with IE and again using the alternative browser (Firefox, Opera, e.g.).\n\nAdobe Acrobat and Adobe Reader users will need to apply a critical update that fixes at least 20\ncritical security in these programs. See Adobe\u2019s Reader advisory for more details on that. The\nlatest updates live here.\n\n", "polarity": 0.05078849721706865, "subjectivity": 0.6244897959183674, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/11/adobe-pushes-critical-flash-patch/", "date": "2014-11-25T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe Pushes Critical Flash Patch", "body": "For the second time this month, Adobe has issued a security update for its Flash Player software.\nNew versions are available for Windows, Mac and Linux versions of Flash. The patch provides\nadditional protection on a vulnerability that Adobe fixed earlier this year for which attackers\nappear to have devised unique and active exploits.\n\nAdobe recommends users of the Adobe Flash Player desktop runtime for Windows and Macintosh update to\nv. 15.0.0.239\u00a0by visiting the Adobe Flash Player Download Center, or via the update mechanism within\nthe product when prompted.\u00a0Adobe Flash Player for Linux has been updated to v. 11.2.202.424.\n\nAccording to Adobe, these updates\u00a0provide additional hardening against\u00a0CVE-2014-8439, which\u00a0was\nfixed in a Flash patch that the company released in October 2014.\u00a0The bulletin for this update is\nhere. Finnish security firm F-Secure says it reported the flaw to Adobe after receiving information\nfrom independent researcher Kafeine that indicated the vulnerability was being exploited in-the-wild\nby an exploit kit (malicious software designed to be stitched into hacked Web sites and foist\nmalware on visitors via browser flaws like this one).\n\nTo see which version of Flash you have installed, check this link. IE10/IE11 on Windows 8.x and\nChrome should auto-update their versions of Flash.\n\nThe most recent versions of Flash are available from the Flash home page, but beware potentially\nunwanted add-ons, like McAfee Security Scan. To avoid this, uncheck the pre-checked box before\ndownloading, or grab your OS-specific Flash download from here.\n\nWindows users who browse the Web with anything other than Internet Explorer may need to apply this\npatch twice, once with IE and again using the alternative browser (Firefox, Opera, e.g.).\n\n", "polarity": 0.09081439393939394, "subjectivity": 0.406534090909091, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/11/adobe-microsoft-issue-critical-security-fixes-3/", "date": "2014-11-11T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Microsoft Issue Critical Security Fixes", "body": "Adobe and Microsoft today each issued security updates to fix critical vulnerabilities in their\nsoftware. Microsoft pushed 14 patches to address problems in Windows, Office, Internet Explorer and\n.NET, among other products. Separately, Adobe issued an update for its Flash Player software that\ncorrects at least 18 security issues.\n\nMicrosoft announced 16 bulletins, but curiously two of those are listed as pending. Topping the list\nof critical updates from Microsoft is a fix for a zero-day vulnerability disclosed last month that\nhackers\u00a0have been using in targeted cyber espionage attacks. Another critical patch targets 17\nweaknesses in Internet Explorer, including a remotely exploitable vulnerability in all supported\nversions of Windows that earned a CVSS score of 9.3 (meaning it is highly likely to be exploited in\ndrive-by attacks, and probably soon).\n\nThat flaw is a rare \u201cunicorn-like\u201d bug according to IBM X-Force, which discovered and reported the\nissue privately to Microsoft. In a blog post published today, IBM researchers described how the\nvulnerability can be used to sidestep the Enhanced Protected Mode sandbox in IE11, as well as\nMicrosoft\u2019s EMET anti-exploitation tool that Microsoft offers for free.\n\n\u201cIn this case, the buggy code is at least 19 years old, and has been remotely exploitable for the\npast 18 years,\u201d writes IBM researcher Robert Freeman. \u201cLooking at the original release code of\nWindows 95, the problem is present. In some respects this vulnerability has been sitting in plain\nsight for a long time, despite many other bugs being discovered and patched in the same Windows\nlibrary (OleAut32).\u201d\n\nFreeman said while unpatched Internet Explorer users are most at risk from this bug, the\nvulnerability also could be exploited through Microsoft Office files. \u201cThe other attack vectors this\nvulnerability could work with are Microsoft Office with script macros, for example in Excel\ndocuments,\u201d Freeman told KrebsOnSecurity. \u201cMost versions of Office (since about 2003) have macros\ndisabled by default so the user would have to enable them (which can be a fairly mindless YES click\nat the top of the screen). Or if a user is using an old enough version of Office, the macros will be\nenabled by default.\u201d\n\nAccording to Shavlik, the two pending patches,\u00a0MS14-068 and MS14-075, are both listed on the\nbulletin summary page as \u201crelease date to be determined,\u201d which apparently is an anomaly we haven\u2019t\nseen before. \u201cTypically, a pulled patch is removed from the list entirely,\u201d wrote Chris Goettl,\nproduct manager at Shavlik. \u201cThis could mean it may still come this month, but not today. These two\npatches were likely an OS and the Exchange patch based on the advanced notification list,\u201d That is\nat least one less major product admins will need to be concerned about this Patch Tuesday, although\nthe date to be determined could come at any time.\u201d\n\nAs I\u2019ve noted in previous posts, the few times I\u2019ve experienced troubles after applying Microsoft\nupdates have almost all included a fix for Microsoft\u2019s widely-installed .NET platform. If you have\n.NET installed, it\u2019s probably a good idea to install this one separately after applying the other\nupdates and rebooting.\n\nAdobe\u2019s update addresses a whopping 18 security holes in Flash Player and Adobe AIR. Updates are\navailable for Windows, Mac and Linux versions of Flash. Adobe says Adobe Flash Player users should\nupdate the program to the version 15.0.0.223. To see which version of Flash you have installed,\ncheck this link. IE10/IE11 on Windows 8.x and Chrome should auto-update their versions of Flash.\n\nThe most recent versions of Flash are available from the Flash home page, but beware potentially\nunwanted add-ons, like McAfee Security Scan. To avoid this, uncheck the pre-checked box before\ndownloading, or grab your OS-specific Flash download from here.\n\nWindows users who browse the Web with anything other than Internet Explorer may need to apply this\npatch twice, once with IE and again using the alternative browser (Firefox, Opera, e.g.). If you\nhave Adobe AIR installed, you\u2019ll want to update this program. AIR ships with an auto-update function\nthat should prompt users to update when they start an application that requires it; the newest,\npatched version is v. 15.0.0.356 for Windows, Mac, and Android.\n\n", "polarity": 0.056456043956043964, "subjectivity": 0.47393543956043954, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/10/microsoft-adobe-push-critical-security-fixes/", "date": "2014-10-14T00:00:00.000Z", "author": "Brian Krebs", "title": "Microsoft, Adobe Push Critical Security Fixes", "body": "Adobe,\u00a0Microsoft\u00a0and Oracle each released updates today to plug critical security holes in their\nproducts. Adobe released patches for its Flash Player and Adobe AIR software. A patch from Oracle\nfixes at least 25 flaws in Java. And Microsoft pushed patches to fix at least two-dozen\nvulnerabilities in a number of Windows components, including Office, Internet Explorer and .NET. One\nof the updates addresses a zero-day flaw that reportedly is already being exploited in active cyber\nespionage attacks.\n\nEarlier today, iSight Partners released research on a threat the company has dubbed \u201cSandworm\u201d that\nexploits one of the vulnerabilities being patched today (CVE-2014-4114). iSight said it discovered\nthat Russian hackers have been conducting cyber espionage campaigns using the flaw, which is\napparently present in every supported version of Windows. The New York Times\u00a0carried a story today\nabout the extent of the attacks against this flaw.\n\nIn its advisory on the zero-day vulnerability, Microsoft said the bug could allow remote code\nexecution if a user opens a specially crafted malicious Microsoft Office document. According to\niSight, the flaw was used in targeted email attacks that targeted NATO, Ukrainian and Western\ngovernment organizations, and firms in the energy sector.\n\nMore than half of the other vulnerabilities fixed in this month\u2019s patch batch address flaws in\nInternet Explorer. Additional\u00a0details about the individual Microsoft patches released today is\navailable at this link.\n\nSeparately, Adobe issued its usual round of updates for its Flash Player and AIR products. The\npatches plug at least three distinct security holes in these products. Adobe says it\u2019s not aware of\nany active attacks against these vulnerabilities. Updates are available for Windows, Mac and Linux\nversions of Flash.\n\nAdobe says users of the Adobe Flash Player desktop runtime for Windows and Macintosh should update\nto Adobe Flash Player 15.0.0.189. To see which version of Flash you have installed, check this link.\nIE10/IE11 on Windows 8.x and Chrome should auto-update their versions of Flash, although my\ninstallation of Chrome says it is up-to-date and yet is still running v. 15.0.0.152\u00a0(with no\noutstanding updates available, and no word yet from Chrome about when the fix might be available).\n\nThe most recent versions of Flash are available from the Flash home page, but beware potentially\nunwanted add-ons, like McAfee Security Scan. To avoid this, uncheck the pre-checked box before\ndownloading, or grab your OS-specific Flash download from here.\n\nWindows users who browse the Web with anything other than Internet Explorer may need to apply this\npatch twice, once with IE and again using the alternative browser (Firefox, Opera, e.g.). If you\nhave Adobe AIR installed,\u00a0you\u2019ll want to update this program. AIR ships with an auto-update function\nthat should prompt users to update when they start an application that requires it; the newest,\npatched version is v. 15.0.0.293 for Windows, Mac, and Android.\n\nFinally, Oracle is releasing an update for its Java software today that corrects more than two-dozen\nsecurity flaws in the software. Oracle says\u00a022 of these vulnerabilities may be remotely exploitable\nwithout authentication, i.e., may be exploited over a network without the need for a username and\npassword. Java SE 8 updates are available here; the latest version of Java SE 7 is here.\n\nIf you really need and use Java for specific Web sites or applications, take a few minutes to update\nthis software. Updates are available from Java.com or via the Java Control Panel. I don\u2019t have an\ninstallation of Java handy on the machine I\u2019m using to compose this post, but keep in mind that\nupdating via the control panel may auto-select the installation of third-party software, so de-\nselect that if you don\u2019t want the added crapware.\n\nOtherwise, seriously consider removing Java altogether. I\u2019ve long urged end users to junk Java\nunless they have a specific use for it (this advice does not scale for businesses, which often have\nlegacy and custom applications that rely on Java). This widely installed and powerful program is\nriddled with security holes, and is a top target of malware writers and miscreants.\n\nIf you have an affirmative use or need for Java, unplug it from the browser unless and until you\u2019re\nat a site that requires it (or at least take advantage of click-to-play). The latest versions of\nJava let users disable Java content in web browsers through the Java Control Panel. Alternatively,\nconsider a dual-browser approach, unplugging Java from the browser you use for everyday surfing, and\nleaving it plugged in to a second browser that you only use for sites that require Java.\n\nFor Java power users \u2014 or for those who are having trouble upgrading or removing a stubborn older\nversion \u2014 I recommend JavaRa, which can assist in repairing or removing Java when other methods fail\n(requires the Microsoft .NET Framework, which also received updates today from Microsoft).\n\n", "polarity": 0.06799149126735334, "subjectivity": 0.4412524257351843, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/10/bugzilla-zero-day-exposes-zero-day-bugs/", "date": "2014-10-06T00:00:00.000Z", "author": "Brian Krebs", "title": "Bugzilla Zero-Day Exposes Zero-Day Bugs", "body": "A previously unknown security flaw in Bugzilla \u2014 a popular online bug-tracking tool used by Mozilla\nand many of the open source Linux distributions \u2014 allows anyone to view detailed reports about\nunfixed vulnerabilities in a broad swath of software. Bugzilla is expected today to issue a\u00a0fix for\nthis very serious weakness,\u00a0which potentially exposes a veritable gold mine of vulnerabilities that\nwould be highly prized by cyber criminals and nation-state actors.\n\nMultiple software projects use Bugzilla to keep track of bugs and flaws that are reported by users.\nThe Bugzilla platform allows anyone to create an account that can be used to report glitches or\nsecurity issues in those projects. But as it turns out, that same reporting mechanism can be abused\nto reveal sensitive information about as-yet unfixed security holes in software packages that rely\non Bugzilla.\n\nA developer or security researcher who wants to report a flaw in Mozilla Firefox, for example, can\nsign up for an account at Mozilla\u2019s Bugzilla platform. Bugzilla responds automatically by sending a\nvalidation email to the address specified in the signup request. But recently, researchers at\nsecurity firm Check Point Software Technologies discovered that it was possible to create Bugzilla\nuser accounts that bypass that validation process.\n\n\u201cOur exploit allows us to bypass that and register using any email we want, even if we don\u2019t have\naccess to it, because there is no validation that you actually control that domain,\u201d said Shahar\nTal, vulnerability research team leader for Check Point. \u201cBecause of the way permissions work on\nBugzilla, we can get administrative privileges by simply registering using an address from one of\nthe domains of the Bugzilla installation owner. For example, we registered as admin@mozilla.org, and\nsuddenly we could see every private bug under Firefox and everything else under Mozilla.\u201d\n\nBugzilla is expected today to release updates to remove the vulnerability and help further secure\nits core product.\u00a0Update, 1:59 p.m. ET: An update that addresses this vulnerability and several\nothers in Bugzilla is available here.\n\n\u201cAn independent researcher has reported a vulnerability in Bugzilla\u00a0which allows the manipulation of\nsome database fields at the user creation procedure on Bugzilla, including the \u2018login_name\u2019 field,\u201d\nsaid Sid Stamm, principal security and privacy engineer at Mozilla, which developed the tool and has\nlicensed it for use under the Mozilla public license.\n\n\u201cThis flaw allows an attacker to bypass email verification when they create an account, which may\nallow that account holder to assume some privileges, depending on how a particular Bugzilla instance\nis managed,\u201d Stamm said. \u201cThere have been no reports from users that sensitive data has been\ncompromised and we have no other reason to believe the vulnerability has been exploited. We expect\nthe fixes to be released on Monday.\u201d\n\nThe flaw is the latest in a string of critical and long-lived vulnerabilities to surface in the past\nyear \u2014 including Heartbleed and Shellshock \u2014 that would be ripe for exploitation by nation state\nadversaries searching for secret ways to access huge volumes of sensitive data.\n\n\u201cThe fact\u00a0is\u00a0that this was there for 10 years and no one saw it until now,\u201d said Tal. \u201cIf nation\nstate adversaries [had] access to private bug data, they would have a ball with this. There is no\nway to find out if anyone did exploit this other than going through user list and seeing if you have\na suspicious user there.\u201d\n\nLike Heartbleed, this flaw was present in open source software to which countless developers and\nsecurity experts had direct access for years on end.\n\n\u201cThe perception that many eyes have looked at open source code and it\u2019s secure because so many\npeople have looked at it, I think this is false,\u201d Tal said. \u201cBecause no one really audits code\nunless they\u2019re committed to it or they\u2019re paid to do it. This is why we can see such foolish bugs in\nvery popular code.\u201d\n\nUpdate, Oct. 7, 12:44 p.m. ET:\u00a0Mozilla issued the following statement in response to this story:\n\n", "polarity": 0.08723270440251572, "subjectivity": 0.48257187780772687, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/09/critical-fixes-for-adobe-microsoft-software/", "date": "2014-09-09T00:00:00.000Z", "author": "Brian Krebs", "title": "Critical Fixes for Adobe, Microsoft Software", "body": "Adobe today released updates to fix at least a dozen critical security problems in its Flash Player\nand AIR software. Separately, Microsoft pushed four update bundles to address at least 42\nvulnerabilities in Windows, Internet Explorer, Lync and .NET Framework. If you use any of these,\nit\u2019s time to update!\n\nMost of the flaws Microsoft fixed today (37 of them) are addressed in an Internet Explorer update \u2014\nthe only patch this month to earn Microsoft\u2019s most-dire \u201ccritical\u201d label. A critical update wins\nthat rating if the vulnerabilities fixed in the update could be exploited with little to no action\non the part of users, save for perhaps visiting a hacked or malicious Web site with IE.\n\nI\u2019ve experienced troubles installing Patch Tuesday packages\u00a0along with .NET updates, so I make every\neffort to update .NET separately. To avoid any complications, I would recommend that Windows users\ninstall all other available recommended patches except for the .NET bundle; after installing those\nupdates, restart Windows and then install any pending .NET fixes). Your mileage may vary.\n\nFor more information on the rest of the updates released today, see this post at the Microsoft\nSecurity Response Center Blog.\n\nAdobe\u2019s critical update for Flash Player fixes at least 12\u00a0security holes in the program. Adobe is\nurging Windows and Macintosh users to update to Adobe Flash Player v. 15.0.0.152 by visiting the\nAdobe Flash Player Download Center, or via the update mechanism within the product when prompted. If\nyou\u2019d rather not be bothered with downloaders and software \u201cextras\u201d like antivirus scanners, you\u2019re\nprobably best off getting the appropriate update for your operating system from this link.\n\nTo see which version of Flash you have installed, check this link. IE10/IE11 on Windows 8.x and\nChrome should auto-update their versions of Flash.\n\nWindows users who browse the Web with anything other than Internet Explorer may need to apply this\npatch twice, once with IE and again using the alternative browser (Firefox, Opera, e.g.). If you\nhave Adobe AIR installed (required by some programs like Pandora Desktop), you\u2019ll want to update\nthis program. AIR ships with an auto-update function that should prompt users to update when they\nstart an application that requires it; the newest, patched version is v. 15\u00a0for Windows, Mac, and\nAndroid.\n\nAdobe had also been scheduled to release updates today for Adobe Reader and Acrobat, but the company\nsaid it was pushing that release date back to the week of Sept. 15 to address some issues that\npopped up during testing of the patches.\n\nAs always, if you experience any issues updating these products, please leave a note about your\ntroubles in the comments below.\n\n", "polarity": 0.10572916666666665, "subjectivity": 0.4437500000000001, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/08/qa-on-the-reported-theft-of-1-2b-email-accounts/", "date": "2014-08-06T00:00:00.000Z", "author": "Brian Krebs", "title": "Q&A on the Reported Theft of 1.2B Email Accounts", "body": "My phone and email have been flooded with questions and interview requests from various media\noutlets since security consultancy Hold Security dropped the news that a Russian gang has stolen\nmore than a billion email account credentials. Rather than respond to each of these requests in\nturn, allow me to add a bit of perspective here in the most direct way possible: The Q&A.\n\nQ: Who the heck is Alex Holden?\n\nA: I\u2019ve known Hold Security\u2019s Founder Alex Holden for nearly seven years. Coincidentally, I\ninitially met him in Las Vegas at the Black Hat security convention (where I am now). Alex is a\ntalented and tireless researcher, as well as a forthright and honest guy. He is originally from\nUkraine, and speaks/reads Russian and Ukrainian fluently. His research has been central to several\nof my big scoops over the past year, including the breach at Adobe that exposed tens of millions of\ncustomer records.\n\nQ: Is this for real?\n\nA: Alex isn\u2019t keen on disclosing his methods, but I have seen his research and data firsthand and\ncan say it\u2019s definitely for real. Without spilling his secrets or methods, it is clear that he has a\nfirst-hand view on the day-to-day activities of some very active organized cybercrime networks and\nactors.\n\nQ: Ok, but more than a billion credentials? That seems like a lot.\n\nA: For those unfamiliar with the operations of large-scale organized crime syndicates, yes, it does.\nUnfortunately, there are more than a few successful cybercrooks who are quite good at what they do,\nand do it full-time. These actors \u2014 mostly spammers and malware purveyors (usually both) \u2014 focus on\nacquiring as many email addresses and account credentials as they can. Their favorite methods of\ngathering this information include\u00a0SQL injection (exploiting weaknesses in Web sites that can be\nused to force the site to cough up user data) and abusing stolen credentials to steal even more\ncredentials from victim organizations.\n\nOne micro example of this: Last year, I wrote about a botnet that enslaved thousands of hacked\ncomputers which disguised itself as a legitimate add-on for Mozilla Firefox and forced infected PCs\nto scour Web sites for SQL vulnerabilities.\n\nQ: What would a crime network even do with a billion credentials?\n\nA: Spam, spam and\u2026.oh, spam. Junk email is primarily sent in bulk using large botnets \u2014 collections\nof hacked PCs. A core component of the malware that powers these crime machines is the theft of\npasswords that users store on their computers and the interception of credentials submitted by\nvictims in the process of browsing the Web. It is quite common for major spammers to rely on lists\nof billions of email addresses for distributing their malware and whatever junk products they are\ngetting paid to promote.\n\nAnother major method of spamming (called \u201cWebspam\u201d) involves the use of stolen email account\ncredentials \u2014 such as Gmail, Yahoo and Outlook \u2014 to send spam from victim accounts, particularly to\nall of the addresses in the contacts list of the compromised accounts.\n\nSpam is such a core and fundamental component of any large-scale cybercrime operation that I spent\nthe last four years writing an entire book about it, describing how these networks are created, the\ncrooks that run them, and the cybercrime kingpins who make it worth their while. More information\nabout this book and ways to pre-order it before its release in November is available here.\n\nQ: Should I be concerned about this?\n\nA: That depends. If you are the type of person who re-uses passwords at multiple sites \u2014 including\nemail accounts \u2014 then the answer is yes. If you re-use your email password at another site and that\nother site gets hacked, there is an excellent chance that cyber crooks are plundering your inbox and\nusing it to spam your friends and family to spread malware and to perpetuate the cybercrime food\nchain.\n\nFor a primer that attempts to explain the many other reasons that crooks might want to hack your\ninbox, your inbox\u2019s relative market value, and what you can do to secure it, please see The Value of\na Hacked Email Account\u00a0and Tools for a Safer PC.\n\nGot more questions? Sound off in the comments section and I\u2019ll try to address them when time\npermits.\n\nUpdate:\u00a0As several readers have pointed out, I am listed as a special advisor to Hold Security on\nthe company\u2019s Web site. Mr. Holden asked me to advise him when he was setting up his company, and\nasked if he could list me on his site. However, I have and will not receive any compensation in any\nform for said advice (most of which, for better or worse, so far has been ignored).\n\n", "polarity": 0.1738521677327648, "subjectivity": 0.43116915422885577, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/08/adobe-microsoft-push-critical-security-fixes-5/", "date": "2014-08-12T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Microsoft Push Critical Security Fixes", "body": "Adobe and Microsoft today each independently released security updates to fix critical problems with\ntheir products. Adobe issued patches for Adobe Reader/Acrobat, Flash Player and AIR, while Microsoft\npushed nine security updates to address at least 37 security holes in Windows and related software.\n\nTwo of the nine update bundles Microsoft released today earned the company\u2019s most-dire \u201ccritical\u201d\nlabel, meaning the vulnerabilities fixed in the updates can be exploited by bad guys or malware\nwithout any help from users. A critical update for Internet Explorer\u00a0accounts for the bulk of flaws\naddressed this month, including one that was actively being exploited by attackers prior to today,\nand another that was already publicly disclosed, according to Microsoft.\n\nOther Microsoft products fixed in today\u2019s release include Windows Media Center, One Note, SQL Server\nand SharePoint. Check out the Technet roundup here\u00a0and the Microsoft Bulletin Summary Web page at\nthis link.\n\nThere are a couple other important changes from Microsoft this month: The company announced that it\nwill soon begin blocking out-of-date ActiveX controls for Internet Explorer users, and that it will\nsupport only the most recent versions of the\u00a0.NET Framework and IE for each supported operating\nsystem (.NET is a programming platform required by a great many third-party Windows applications and\nis therefore broadly installed).\n\nThese changes are both worth mentioning because\u00a0this month\u2019s patch batch also includes Flash fixes\n(an ActiveX plugin on IE) and another .NET update. I\u2019ve had difficulties installing large Patch\nTuesday packages\u00a0along with .NET updates, so I try to update them separately. To avoid any\ncomplications, I would recommend that Windows users install all other available recommended patches\nexcept for the .NET bundle; after installing those updates, restart Windows and then install any\npending .NET fixes).\n\nFinally, I should note that Microsoft released a major new version (version 5) of its Enhanced\nMitigation Experience Toolkit (EMET), a set of tools designed to protect Windows systems even before\nnew and undiscovered threats against the operating system and third-party software are formally\naddressed by security updates and antimalware software. I\u2019ll have more on EMET 5.0 in an upcoming\nblog post (my review of EMET 4 is here) but this is a great tool that can definitely help harden\nWindows systems from attacks. If you already have EMET installed, you\u2019ll want to remove the previous\nversion and reboot before upgrading to 5.0.\n\nADOBE\n\nAdobe\u2019s critical update for Flash Player fixes at least seven security holes in the program. Which\nversion of Flash you should have on your system in order to get the protection from these latest\nfixes depends on which operating system and which browser you use, so consult the (admittedly\ncomplex) chart below for your appropriate version number.\n\nTo see which version of Flash you have installed, check this link. IE10/IE11 on Windows 8.x and\nChrome should auto-update their versions of Flash, although my installation of Chrome says it is up-\nto-date and yet is still running v. 14.0.0.145\u00a0(with no outstanding updates available, and no word\nyet from Chrome about when the fix might be available).\n\nThe most recent versions of Flash are available from the Flash home page, but beware potentially\nunwanted add-ons, like McAfee Security Scan. To avoid this, uncheck the pre-checked box before\ndownloading, or grab your OS-specific Flash download from here.\n\nWindows users who browse the Web with anything other than Internet Explorer may need to apply this\npatch twice, once with IE and again using the alternative browser (Firefox, Opera, e.g.). If you\nhave Adobe AIR installed (required by some programs like Tweetdeck and Pandora Desktop), you\u2019ll want\nto update this program. AIR ships with an auto-update function that should prompt users to update\nwhen they start an application that requires it; the newest, patched version is v. 14.0.0.137 for\nWindows, Mac, and Android.\n\nAdobe said it is not aware of any exploits in the wild that target any of the issues addressed in\nthis month\u2019s Flash update. However, the company says there are signs that attackers are are already\ntargeting the lone bug fixed in an update released today for Windows versions of Adobe Reader and\nAcrobat (Adobe Reader and Acrobat for Apple\u2019s OS X are not affected).\n\nExperience technical issues during or after applying any of these updates, or with the instructions\nabove? Please feel free to sound off in the comments below.\n\nUpdate, 6:52 p.m. ET: In the second paragraph, corrected the number of updates Microsoft released\ntoday.\n\n", "polarity": 0.1061275088547816, "subjectivity": 0.4600029515938605, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/07/microsoft-adobe-push-critical-fixes/", "date": "2014-07-08T00:00:00.000Z", "author": "Brian Krebs", "title": "Microsoft, Adobe Push Critical Fixes", "body": "If you use Microsoft products or Adobe Flash Player, please take a moment to read this post and\nupdate your software. Adobe today issued a critical update that plugs at least three security holes\nin the program. Separately, Microsoft released six security updates that address 29 vulnerabilities\nin Windows and Internet Explorer.\n\nMost of the bugs that Microsoft addressed with today\u2019s updates (24 of the 29 flaws) are fixed in a\nsingle patch for the company\u2019s Internet Explorer browser. According to Microsoft, one of those 24\nflaws (a weakness in the way IE checks\u00a0Extended Validation SSL certificates) was already publicly\ndisclosed prior to today\u2019s bulletins.\n\nThe other critical patch fixes a security problem with the way that Windows handles files meant to\nbe opened and edited by Windows Journal, a note-taking application built in to more recent versions\nof the operating system (including Windows Vista, 7 and 8).\n\nMore details on the rest of the updates that Microsoft released today can be found at Microsoft\u2019s\nTechnet blog, Qualys\u2019s site, and the SANS Internet Storm Center.\n\nAdobe\u2019s Flash Player update brings Flash to version 14.0.0.145 on Windows, Mac and Linux systems.\nAdobe said it is not aware of exploits in the wild for any of the vulnerabilities fixed in this\nrelease.\n\nTo see which version of Flash you have installed, check this link. IE10/IE11 on Windows 8.x and\nChrome should auto-update their versions of Flash, although my installation of Chrome says it is up-\nto-date and yet is still running v. 14.0.0.125.\n\nFlash has a built-in auto-updater, but you might wait days or weeks for it to prompt you to update,\nregardless of its settings. The most recent versions of Flash are available from the Adobe download\ncenter, but beware potentially unwanted add-ons, like McAfee Security Scan. To avoid this, uncheck\nthe pre-checked box before downloading, or grab your OS-specific Flash download from here.\n\nWindows users who browse the Web with anything other than Internet Explorer may need to apply this\npatch twice, once with IE and again using the alternative browser (Firefox, Opera, e.g.). If you\nhave Adobe AIR installed (required by some programs like Tweetdeck and Pandora Desktop), you\u2019ll want\nto update this program. AIR ships with an auto-update function that should prompt users to update\nwhen they start an application that requires it; the newest, patched version is v. 14.0.0.137 for\nWindows, Mac, and Android.\n\n", "polarity": 0.09798136645962732, "subjectivity": 0.39917184265010347, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/06/adobe-microsoft-push-critical-security-fixes-4/", "date": "2014-06-10T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Microsoft Push Critical Security Fixes", "body": "Adobe and Microsoft today each released updates to fix critical security vulnerabilities in their\nsoftware. Adobe issued patches for Flash Player and AIR, while Microsoft\u2019s Patch Tuesday batch\nincludes seven update bundles to address a whopping 66 distinct security holes in Windows and\nrelated products.\n\nThe vast majority of the vulnerabilities addressed by Microsoft today are in Internet Explorer, the\ndefault browser on Windows machines. A single patch for IE this month (MS14-035)\u00a0shores up at least\n59 separate security issues scattered across virtually every supported version of IE. Other patches\nfix flaws in Microsoft Word, as well as other components of the Windows operating system itself.\n\nMost\u00a0of the vulnerabilities Microsoft fixed today earned its \u201ccritical\u201d rating, meaning malware or\nbad guys could exploit the flaws to seize control over vulnerable systems without any help from\nusers, save perhaps for having the Windows or IE user visit a hacked or booby-trapped Web site. For\nmore details on the individual patches, see this roundup at the Microsoft Technet blog.\n\nAdobe\u2019s update for Flash Player fixes at least a half-dozen bugs in the widely-used browser plugin.\nThe Flash update brings the media player to v. 14.0.0.125 on Windows and Mac systems, and v.\n11.2.202.378 for Linux users. To see which version of Flash you have installed, check this link.\n\nIE10/IE11 and Chrome should auto-update their versions of Flash. If your version of Flash on Chrome\n(on either Windows, Mac or Linux) is not yet updated, you may just need to close and restart the\nbrowser. Chrome version\u00a035.0.1916.153\u00a0 includes this Flash update; to see which version of Chrome\nyou\u2019re running, click the 3-bars icon to the right of the address bar and select \u201cAbout Google\nChrome.\u201d\n\nThe most recent versions of Flash are available from the Adobe download center, but beware\npotentially unwanted add-ons, like McAfee Security Scan). To avoid this, uncheck the pre-checked box\nbefore downloading, or grab your OS-specific Flash download from here.\n\nWindows users who browse the Web with anything other than Internet Explorer will need to apply this\npatch twice, once with IE and again using the alternative browser (Firefox, Opera, e.g.). If you\nhave\u00a0Adobe AIR\u00a0installed (required by some programs like Tweetdeck and Pandora Desktop), you\u2019ll want\nto update this program. AIR ships with an auto-update function that should prompt users to update\nwhen they start an application that requires it; the newest, patched version is v.\u00a014.0.0.110\u00a0for\nWindows, Mac, and Android.\n\n", "polarity": 0.01040372670807454, "subjectivity": 0.4778985507246377, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/05/the-mad-mad-dash-to-update-flash/", "date": "2014-05-15T00:00:00.000Z", "author": "Brian Krebs", "title": "The Mad, Mad Dash to Update Flash", "body": "An analysis of how quickly different browser users patch Adobe Flash vulnerabilities shows a marked\nvariation among browser makers. The data suggest that Google Chrome and Mozilla Firefox users tend\nto get Flash updates relatively\u00a0quickly, while many users on\u00a0Microsoft\u2019s Internet Explorer\u00a0browser\nconsistently lag behind.\n\nThe information comes from ThreatMetrix, a company that helps retailers and financial institutions\ndetect and block patterns of online fraud. ThreatMetrix Chief Technology Officer Andreas Baumhof\nlooked back over the past five months across 10,000+ sites the company serves, to see how quickly\nvisitors were updating to the latest versions of Flash.\n\nBaumhof measured the rates of update adoption for these six Flash patches:\n\nJan 14, 2014 \u2013 APSB14-02 Security updates available for Adobe Flash Player (2 critical\nvulnerabilities)\n\nFeb 4, 2014 \u2013 APSB14-04 Security updates available for Adobe Flash Player (2 critical flaws,\nincluding 1 zero-day)\n\nFeb 20, 2014 \u2013 APSB14-07 Security updates available for Adobe Flash Player (1 zero-day)\n\nMar 11, 2014 \u2013 APSB14-08 Security updates available for Adobe Flash Player (2 critical\nvulnerabilities)\n\nApr 8, 2014, \u2013 APSB14-09 Security updates available for Adobe Flash Player (4 critical\nvulnerabilities)\n\nApr 28, 2014 \u2013 APSB14-13 Security updates available for Adobe Flash Player (1 zero-day)\n\nOverall, Google Chrome users were protected the fastest. According to Baumhof, Chrome usually takes\njust a few days to push the latest update out to 90 percent of users. Chrome pioneered auto-updates\nfor Flash several years ago, with Firefox and newer versions of IE both following suit in recent\nyears.\n\nInterestingly, the data show that IE users tend to receive updates at a considerably slower clip\n(although there are a few times in which IE surpasses Firefox users in adoption of the latest Flash\nupdates). \u00a0This probably has to do with the way Flash is updated on IE, and the legacy versions of\nIE that are still out there. Flash seems to have more of a seamless auto-update process on IE 10 and\n11 on Windows 8 and above, and more of a manual one on earlier versions of the browser and operating\nsystem.\n\nAnother explanation for IE\u2019s performance here\u00a0is that it is\u00a0commonly used in business environments,\nwhich tend to take a few days at least to test patches before rolling them out in a coordinated\nfashion across the enterprise along with the rest of the Patch Tuesday updates.\n\nThe following graphic depicts Flash patch adoption by IE version for Period #4 in the image above\n(Mar 11, 2014 \u2013\u00a0APSB14-08\u00a0Security updates available for Adobe Flash Player (2 critical\nvulnerabilities)):\n\n\u201cIn the period 4 you can see that IE11 is nicely up to 90% \u2013 which is in line with Chrome, but\nobviously the older the browser version, the less updated Flash is,\u201d Baumhof said.\n\nIt\u2019s unclear what might explain the apparent slow uptake of Flash patches for IE and Firefox users\nfollowing the January and early April Flash updates. It\u2019s worth noting, however, that the Flash\npatches which saw the fastest uptake regardless of browser type included fixes for zero-day\nvulnerabilities (see periods 2, 3 and 6 in the first graphic above).\n\nWhile Chrome appears to\u00a0have the speediest update process for Flash patches (the company frequently\npushes Flash updates out even before Adobe releases them publicly), it\u2019s important to remember that\napplying any auto-pushed Flash patches in Chrome requires a restart of the browser.\n\n\u201cI use Chrome and I typically never close my browser as I always just hibernate my computer,\u201d\nBaumhof said. \u201cI noticed that it took me almost seven days to apply a Flash update because Chrome\ncould only do this when you restart the browser, and I simply wasn\u2019t aware of it.\u201d\n\nFlash is a buggy security risk, but a\u00a0great many Web sites simply won\u2019t work or display certain\ncontent without the Flash plugin installed. As such, I\u2019ve urged readers to take advantage of Click-\nto-Play, which\u00a0blocks plugin activity by default, replacing the plugin content on the page with a\nblank box. Users who wish to view the blocked content need only click the boxes to enable the Flash\ncontent inside of them.\n\n", "polarity": 0.12520408163265304, "subjectivity": 0.42170068027210894, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/02/adobe-microsoft-push-fixes-for-0-day-threats/", "date": "2014-02-20T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Microsoft Push Fixes For 0-Day Threats", "body": "For the second time this month, Adobe has issued an emergency software update to fix a critical\nsecurity flaw in its Flash Player software that attackers are already exploiting. Separately,\nMicrosoft\u00a0released a stopgap fix to address a critical bug in Internet Explorer versions 9 and 10\nthat is actively being exploited in the wild.\n\nThe vulnerabilities in both Flash and IE are critical, meaning users could get hacked just by\nvisiting a compromised or booby-trapped Web site.\u00a0The Flash patch comes just a little over two weeks\nafter Adobe released a rush fix for another zero-day attack against Flash.\n\nAdobe said in an advisory today that it is aware of an exploit that exists for one of three security\nholes that the company is plugging with this new release, which brings Flash Player to v. 12.0.0.70\nfor Linux,\u00a0Mac\u00a0and Windows systems.\n\nThis link\u00a0will tell you which version of Flash your browser has installed.\u00a0IE10/IE11\u00a0and Chrome\nshould auto-update their versions of Flash, although IE users may need to check with the Windows\nUpdate feature built into the operating system.\n\nIf your version of Flash on\u00a0Chrome\u00a0(on either Windows, Mac or\u00a0Linux) is not yet updated, you may\njust need to close and restart the browser.\u00a0The version of Chrome that includes this fix is\u00a0v.\n33.0.1750.117\u00a0for Windows, Mac, and Linux. To learn what version of Chrome you have, click the\nstacked bars to the right at of the address bar, and select \u201cAbout Google Chrome\u201d from the drop down\nmenu (the option to apply any pending updates should appear here as well).\n\nThe most recent versions of Flash are available from the\u00a0Adobe download center, but beware\npotentially unwanted add-ons, like McAfee Security Scan). To avoid this, uncheck the pre-checked box\nbefore downloading, or grab your OS-specific Flash download from\u00a0here. Windows users who browse the\nWeb with anything other than Internet Explorer will need to apply this patch twice, once with IE and\nagain using the alternative browser (Firefox, Opera, e.g.).\n\nAs I noted in my Tools for a Safer PC primer, blocking Javascript by default in your Web browser is\nthe best way to block browser-based attacks \u2014 including these Flash zero-day flaws. Several Mac\nusers have written in recently to ask about the whereabouts of a Tools for a Safer Mac post, and\nwhile that\u2019s a good idea (and a post that may soon be coming), script-blocking via extensions/add-\nons like NoScript and NotScripts is an approach that works across multiple OSes.\n\nAnother great cross-platform approach to blocking Flash (and Java) content by default is Click-to-\nPlay, a feature built into\u00a0Google Chrome,\u00a0Mozilla Firefox\u00a0and\u00a0Opera\u00a0(and available via add-ons in\nSafari) that blocks plugin activity by default, replacing the plugin content on the page with a\nblank box. Users who wish to view the blocked content need only click the boxes to enable the Flash\nor Java content inside of them. Check out this post for more details on deploying Click-to-Play.\n\nMICROSOFT FIX-IT TOOL\n\nMicrosoft has released a security advisory and a FixIt shim tool for a previously unknown zero-day\nvulnerability in Internet Explorer versions 9 and 10.\u00a0Microsoft says it is aware of \u201climited,\ntargeted attacks\u201d that attempt to exploit a vulnerability in Internet Explorer 10. Only Internet\nExplorer 9 and Internet\u00a0Explorer 10 are affected by this vulnerability. Other supported versions of\nInternet\u00a0Explorer are not affected.\n\nMicrosoft says it is working on an official patch, but that in the meantime IE users should consider\ntaking advantage of a new FixIt solution. According to Microsoft, applying the Microsoft Fix it\nsolution here prevents the exploitation of this issue.\n\nMicrosoft warns that IE users should make sure they have the latest version of IE before appyling\nthis FixIt solution (that means a visit to Windows Update). Also, the company says that after you\ninstall this Fix it solution, you may experience increased memory usage when you use Internet\nExplorer to browse the web. This behavior apparently occurs until you restart Internet Explorer.\n\n", "polarity": 0.15307289161455828, "subjectivity": 0.4670955587622254, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2014/01/security-updates-for-windows-flash-reader/", "date": "2014-01-14T00:00:00.000Z", "author": "Brian Krebs", "title": "Security Updates for Windows, Java, Flash & Reader", "body": "Adobe,\u00a0Microsoft\u00a0and Oracle today each issued security updates to fix serious vulnerabilities in\ntheir products. Adobe released patches for AIR, Acrobat, Flash\u00a0and\u00a0Reader, while Microsoft pushed\nout fixes to shore up at least a half dozen security weaknesses in Windows and Office. Oracle\nreleased an update for Java that fixes at least three dozen security holes in the widely-used\nprogram.\n\nAll of the vulnerabilities that Microsoft fixed this month earned \u201cimportant\u201d ratings; not quite as\ndire as those labeled \u201ccritical,\u201d which involve flaws so dangerous that they can be exploited by bad\nguys or malware to break into systems with no user interaction. Nevertheless, flaws marked\n\u201cimportant\u201d can be quite dangerous, particularly when used in tandem with other attack techniques.\n\nBy way of illustration, this month\u2019s\u00a0MS14-002\u00a0patch addresses an important zero-day flaw that was\nfirst found to be exploited in targeted attacks late last year. In one version of this attack,\ndocumented quite nicely in this fascinating yet somewhat technical writeup from Trustwave\nSpiderlabs, attackers used this Windows flaw in combination with a bug in Adobe Reader. According to\nTrustwave, the bad guys in that attack included the Windows flaw as a means of bypassing Adobe\nReader\u2019s security sandbox, a technology designed ensure that any malicious code embedded in\ndocuments only runs under limited privileges (i.e., isn\u2019t allowed to invoke other programs or alter\ncore system settings).\n\nIn short, don\u2019t put off applying this month\u2019s patches from Microsoft. They are available via Windows\nUpdate or Automatic Update. Also, Microsoft took this opportunity to remind Windows XP users that\nthe company will no longer be supporting Windows XP after April 2014 (guess I will have to retire\nthe above broken Windows graphic as well). The lack of ongoing security updates for XP means it will\nlikely become an even bigger target for attackers; if you rely on XP, please consider transitioning\nto a newer operating system sometime soon. Who knows, it might be a great excuse to try Linux, which\ntends to be very light on resources and ideal for older hardware. If you\u2019ve been considering the\nswitch for a while, take a few distributions for a spin using one of dozens of flavors of Linux\navailable via Live CD.\n\nSpeaking of Adobe Reader, the company today released updates to fix at least three vulnerabilities\nin the widely-used program. Users of Adobe Reader XI (11.0.05) for Windows and Mac should update to\nAdobe Reader XI (11.0.06). Obligatory note: There are other\u00a0 options.\n\nAdobe also pushed out patches for its Flash Player and AIR products. The Flash update brings the\nmedia player to version 12.0.0.38 on Windows and\u00a0Mac OS X. \u00a0This link\u00a0will tell you which version of\nFlash your browser has installed. IE10 and Chrome should auto-update their versions of Flash. If\nyour version of\u00a0Chrome\u00a0(on either Windows, Mac or Linux) is not yet updated to v. 12.0.0.41, you may\njust need to close and restart the browser.\n\nThe most recent versions of Flash are available from the\u00a0Adobe download center, but beware\npotentially unwanted add-ons, like McAfee Security Scan).\u00a0To avoid this, uncheck the pre-checked box\nbefore downloading, or grab your OS-specific Flash download from\u00a0here.\u00a0Windows users who browse the\nWeb with anything other than Internet Explorer will need to apply this patch twice, once with IE and\nagain using the alternative browser (Firefox,\u00a0Opera, e.g.).\n\nIn addition,\u00a0Adode AIR\u00a0(required by some applications like Pandora Desktop, for example) was updated\nto v.\u00a04.0.0.1390\u00a0for Windows, Mac and Android devices. Adobe AIR checks for and prompts you to\ninstall any available updates anytime you launch an application that uses AIR; in any case, the\ndownload link is\u00a0here. See the chart below for the updated version numbers for your operating\nsystem.\n\nSeparately, Oracle issued its critical patch update, which includes some 36 security fixes for Java.\nThis update brings Java to Java 7 Update 51,\u00a0and is available via the built-in Java updater or from\nJava downloads.\n\nIf you really need and use Java for specific Web sites or applications, take a few minutes to update\nthis software. Updates are available from Java.com or via the\u00a0Java Control Panel. Keep in mind that\nupdating via the control panel will auto-select the installation of the Ask Toolbar, so de-select\nthat if you don\u2019t want the added crapware.\n\nOtherwise, seriously consider removing Java altogether. \u00a0I\u2019ve long urged end users to junk Java\nunless they have a specific use for it (this advice does not scale for businesses, which often have\nlegacy and custom applications that rely on Java). This widely installed and powerful program is\nriddled with security holes, and is a top target of malware writers and miscreants.\n\nIf you have an affirmative use or need for Java, unplug it from the browser unless and until you\u2019re\nat a site that requires it (or at least take advantage of\u00a0click-to-play). Java 7 lets users\u00a0disable\nJava content in web browsers\u00a0through the\u00a0Java Control Panel. Alternatively, consider a dual-browser\napproach, unplugging Java from the browser you use for everyday surfing, and leaving it plugged in\nto a second browser that you only use for sites that require Java.\n\nThere are a couple of ways to find out if you have Java installed and what version may be running.\nWindows users can click Start, then Run, then type \u201ccmd\u201d without the quotes. At the command prompt,\ntype \u201cjava -version\u201d (again, no quotes). Users also can visit Java.com and click the \u201cDo I have\nJava?\u201d link on the homepage. Updates also should be available via the Java Control Panel or from\nJava.com.\n\nUpdate, 5:33 p.m. ET: Included information about Java patches.\n\n", "polarity": 0.05860198624904507, "subjectivity": 0.5022478991596637, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/12/zero-day-fixes-from-adobe-microsoft/", "date": "2013-12-10T00:00:00.000Z", "author": "Brian Krebs", "title": "Zero-Day Fixes From Adobe, Microsoft", "body": "Adobe and Microsoft today each separately released security updates to remedy zero-day bugs and\nother critical vulnerabilities in their software. Adobe issued fixes for its Flash and Shockwave\nplayers, while Microsoft pushed out 11 updates addressing at least two dozen flaws in Windows and\nother software.\n\nFive of today\u2019s 11 update bundles earned Microsoft\u2019s \u201ccritical\u201d rating, meaning that the\nvulnerabilities those patches fix can be exploited remotely by malware or miscreants without any\nhelp from users. At the top of the priority list for Windows users should be MS13-096, a patch that\nplugs a critical zero-day security hole in certain versions of Windows and Office.\u00a0Microsoft first\nwarned about this flaw on Nov. 5.\n\nMicrosoft also is urging customers and system administrators to prioritize two other critical fixes:\nMS13-097, a cumulative patch for Internet Explorer (all versions), and MS13-099, which fixes a\ndangerous scripting issue in Windows.\u00a0All three of these patches fix bugs that Microsoft says are\nlikely to be exploited by attackers in the near future.\n\nRoss Barrett, senior manager of security engineering at Rapid7,\u00a0points out a noteworthy patch\n(MS13-104) for users of Microsoft Office 2013\u2019s \u201ccloud\u201d services, which apparently fixes another\nvulnerability that is actively being exploited. \u201cThis information disclosure issue affects the\nOffice \u2018client\u2019 and could allow an attacker to hijack an authentication token and gain access to\ndocuments stored in cloud resources,\u201d Barrett said.\n\nFor more information on today\u2019s updates, see the roundups at Microsoft\u2019s Technet Blog, the SANS\nInternet Storm Center Diary, and the Qualys blog.\n\nADOBE FLASH AND SHOCKWAVE UPDATES\n\nAdobe has issued a patch for its Flash Player software that addresses at least two security holes,\nincluding a vulnerability that is already under active attack. Adobe said it is aware of reports of\nan exploit designed to trick the user into opening a Microsoft Word document with malicious Flash\n(.swf) content. The company credits researcher Attila Suszter for reporting the flaw; more\ninformation about this bug is available at Suszter\u2019s blog.\n\nTo find out whether your system has Flash installed and at what version, check this page. Updates\nare available for Windows, Mac and Linux versions of Flash. The latest version for Windows and Mac\nusers is 11.9.900.170, and 11.2.202.332 for Linux.\n\nGoogle Chrome auto-updates its own versions of Flash (although not always right away); the newest\nFlash for Chrome is 11.9.900.170. Internet Explorer 10 and 11 on Windows 8 include an embedded\nversion of Flash that gets updates from Windows Update, rather than through Adobe\u2019s installer. On\nWindows 7 and earlier, Flash is not embedded, and needs ot be updated via Adobe\u2019s updater or\nmanually by downloading the appropriate version from this page.\n\nIn addition,\u00a0Adode AIR\u00a0(required by some applications like Pandora Desktop, for example) was updated\nto\u00a0v. 3.9.1380\u00a0for Windows, Mac and Android devices. Adobe AIR checks for and prompts you to install\nany available updates anytime you launch an application that uses AIR; in any case, the download\nlink is\u00a0here.\n\nAdobe also issued\u00a0an update\u00a0for its Shockwave Player software that fixes at least two\nvulnerabilities, bringing Shockwave to\u00a0v. 12.0.7.148\u00a0on Windows and Mac systems. Shockwave is one of\nthose programs that I\u2019ve urged readers to remove or avoid installing. Like Java, it is very often\nbuggy software that many people have installed but do not really need for everyday Web browsing.\nSecuring your system means not only\u00a0making sure things are locked down, but removing unneeded\nprograms, and Shockwave is near the top of my list on that front.\n\nIf you visit\u00a0this link\u00a0and see a short animation, it should tell you which version of Shockwave you\nhave installed. If it prompts you to download Shockwave, then you don\u2019t have Shockwave installed and\nin all likelihood don\u2019t need it. Firefox users should note that the presence of the Shockwave Flash\nplugin listed in the Firefox Add-ons section denotes an installation of Adobe Flash Player plugin \u2014\nnot Adobe Shockwave.\n\n", "polarity": 0.10355297157622738, "subjectivity": 0.5132152085640457, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/12/botnet-enlists-firefox-users-to-hack-web-sites/", "date": "2013-12-16T00:00:00.000Z", "author": "Brian Krebs", "title": "Botnet Enlists Firefox Users to Hack Web Sites", "body": "An unusual botnet that has ensnared more than 12,500 systems disguises itself as a legitimate add-on\nfor Mozilla Firefox\u00a0and forces infected PCs to scour Web sites for security vulnerabilities, an\ninvestigation by KrebsOnSecurity has discovered.\n\nThe botnet, dubbed \u201cAdvanced Power\u201d by its operators, appears to have been quietly working since at\nleast May 2013. It\u2019s not clear yet how the initial infection is being spread, but the malware\nenslaves PCs in a botnet that conducts SQL injection attacks on virtually any Web sites visited by\nthe victim.\n\nSQL injection attacks take advantage of weak server configurations to inject malicious code into the\ndatabase behind the public-facing Web server. Attackers can use this access to booby-trap sites with\ndrive-by malware attacks, or force sites to cough up information stored in their databases.\n\nAlthough this malware does include a component designed to steal passwords and other sensitive\ninformation from infected machines, this feature does not appear to have been activated on the\ninfected hosts. Rather, the purpose of this botnet seems to be using the compromised Windows\ndesktops as a distributed scanning platform for finding exploitable Web sites. According to the\nbotnet\u2019s administrative panel, more than 12,500 PCs have been infected, and these bots in turn have\nhelped to discover at least 1,800 Web pages that are vulnerable to SQL injection attacks.\n\nThe malicious code comes from sources referenced in this Malwr writeup and this Virustotal entry\n(please don\u2019t go looking for this malware unless you really know what you\u2019re doing). On infected\nsystems with Mozilla Firefox installed, the bot code installs a browser plugin called \u201cMicrosoft\n.NET Framework Assistant\u201d (this bogus add-on does not appear to be the same thing\u00a0as this add-on by\nthe same name). The malicious add-on then tests nearly every page the infected user visits for the\npresence of several different SQL injection vulnerabilities.\n\nAlex Holden, chief information security officer at Hold Security LLC, said the botnet appears to\nhave been built to automate the tedious and sometimes blind guesswork involved in probing sites for\nSQL vulnerabilities.\n\n\u201cWhen you test an application for SQL injection or any other vulnerability, you have a small frame\nof reference as to the site\u2019s functionality,\u201d Holden said. \u201cYou often don\u2019t know or can\u2019t see many\nuser functions. And in some cases you need proper credentials to do it right.\u00a0In this case, the\nhackers are using valid requests within many sites that end-users themselves are feeding them.\u00a0This\nis a much bigger sample than you would normally get.\u00a0By no means it is a full regression test, but\nit is a deep and innovative approach.\u201d\n\nHolden said he believes the authors of this botnet may be natives of and/or reside in the Czech\nRepublic, noting that a few transliterated text strings in the malware are auto-detected by Google\nTranslate as Czech.\n\nSQL injections are some of the most common Web site attacks partly because these vulnerabilities are\nextremely widespread. According to a report (PDF) released earlier this year from Web site security\nfirm Imperva (full disclosure: Imperva is an advertiser on this site), while most Web applications\nreceive four or more attack campaigns each month, some Websites are constantly under attack \u2014\nparticularly Web apps at retail sites.\n\nBotnets like this one are a great and classic example of how compromised systems are nearly always\nused to chip away at the defenses of others online. Interestingly, there is a legitimate add-on for\nFirefox that can help passively detect SQL injection vulnerabilities on sites you visit. Site owners\nlooking for a free tool to scan their sites for SQL vulnerabilities should check out SQLmap, an open\nsource penetration testing tool.\n\nUpdate, 6:17 p.m. ET:\u00a0Mozilla has issued a statement saying that it has \u201cdisabled the fraudulent\nMicrosoft .NET Framework Assistant add-on used by the Advanced Power botnet,\u201d by adding the bogus\nadd-on to its block list. Mozilla said Firefox gets a message during a check for blocked add-ons\nonce a day \u2014 while the browser is running \u2014 and that the block does not require any user actions to\ntake effect.\n\n", "polarity": 0.07419871794871793, "subjectivity": 0.4729166666666667, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/09/adobe-microsoft-push-critical-security-fixes-2/", "date": "2013-09-10T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Microsoft Push Critical Security Fixes", "body": "Adobe and Microsoft each separately released a raft of updates to fix critical security holes in\ntheir software. Adobe pushed patches to plug holes in Adobe Acrobat/Reader and its Flash and\nShockwave media players. Microsoft released 14 13\u00a0patch bundles to fix at least 47 security\nvulnerabilities in Windows, Office, Internet Explorer and Sharepoint.\n\nFour of the 13 bulletins Microsoft released today earned the company\u2019s \u201ccritical\u201d rating, meaning\nthat on balance they address vulnerabilities that can be exploited by miscreants or malware to break\ninto vulnerable systems without any help from users.\n\nFor enterprises and those who need to prioritize the installation of updates, Microsoft recommends\ninstalling the Outlook, Internet Explorer and SharePoint Server fixes as soon as possible. The\nSharepoint update addresses some ten vulnerabilities, including one that Microsoft says was publicly\ndisclosed prior to today\u2019s patch batch.\n\nAdobe\u2019s Flash update fixes at least four flaws in the widely-installed media player, and brings the\nplayer to version 11.8.800.168 for Mac and Windows users (users of other OSes please see the chart\nbelow). Google Chrome should auto-update itself to the latest version for Chrome (11.8.800.170 for\nWindows, Mac and Linux); Google says it is in the process of rolling out the update, although my\ntest version of Chrome is still stuck at v. 11.8.800.97, even after installing updates for Chrome\nand restarting. Likewise, Internet Explorer 10 should auto-update to the latest version. To find out\nwhich version of Flash you have installed, see this page.\n\nThe most recent versions of Flash are available from the\u00a0Adobe download center, but beware\npotentially unwanted add-ons, like McAfee Security Scan).\u00a0To avoid this, uncheck the pre-checked box\nbefore downloading, or grab your OS-specific Flash download from\u00a0here.\u00a0Windows users who browse the\nWeb with anything other than Internet Explorer will need to apply this patch twice, once with IE and\nagain using the alternative browser (Firefox,\u00a0Opera, e.g.).\n\nUpdates for Adobe Acrobat and Reader fix at least eight security holes in these products. For\nWindows and Mac users with Reader XI, the new version is v. 11.0.04. Users of these software titles\ncan grab the updates from the links at Adobe\u2019s advisory, or from within the software by choosing\nHelp > Check for Updates.\n\nAdobe also released a new version of its\u00a0Shockwave Player\u00a0software that fixes at least two flaws,\nbringing Shockwave to\u00a0v. 12.0.4.144\u00a0on Windows and Mac systems. Updates are available\u00a0here.\nShockwave is one of those programs that I\u2019ve urged readers to remove or avoid installing. Like\u00a0Java,\nit is powerful and very often buggy software that many people have installed but do not really need\nfor everyday Web browsing. Securing your system means not only\u00a0making sure things are locked down,\nbut removing unneeded programs, and Shockwave is near the top of my list on that front.\n\nIf you visit\u00a0this link\u00a0and see a short animation, it should tell you which version of Shockwave you\nhave installed. If it prompts you to download Shockwave (or, in the case of Google Chrome, just\ndownloads it for you), then you don\u2019t have Shockwave installed and in all likelihood don\u2019t need it.\nFirefox users should note that the presence of the Shockwave Flash plugin listed in the Firefox Add-\nons section denotes an installation of Adobe Flash Player plugin \u2014 not Adobe Shockwave.\n\nFinally, there is an update for Adobe AIR, which you may have if you\u2019ve installed desktop clients\nlike Pandora or Tweetdeck. Adobe says it is not aware of any exploits or attacks in the wild\ntargeting any of the issues addressed in the updates the company released today. Applications that\nrely on AIR check for updates upon start, but the latest version (v. 3.8.0.1430) also is available\nfrom this link.\n\nUpdate, 11:06 p.m. ET: Apple just released an update that blocks older versions of Flash from\nrunning in Safari on OS X. systems. \u201cDue to security issues in older versions, Apple has updated the\nweb plug-in blocking mechanism to disable all versions prior to\u00a0Flash Player 11.8.800.94.\u201d That\nversion is not the version of Flash that Adobe released today, but the one it released back in July.\nWhich means if the last time you updated your Flash Player on your Mac was in June, you won\u2019t be\nable to view Flash content in Safari if you apply the latest Apple updates without also patching\nFlash.\n\n", "polarity": 0.09043627767032023, "subjectivity": 0.47738018482699324, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/08/firefox-zero-day-used-in-child-porn-hunt/", "date": "2013-08-04T00:00:00.000Z", "author": "Brian Krebs", "title": "Firefox Zero-Day Used in Child Porn Hunt?", "body": "A claimed zero-day vulnerability in Firefox 17 has some users of the latest Mozilla Firefox browser\n(Firefox 22) shrugging their shoulders. Indeed, for now it appears that this flaw is not a concern\nfor regular, up-to-date Firefox end users. But several experts say the vulnerability was instead\nexposed and used in tandem with a recent U.S. law enforcement effort to discover the true Internet\naddresses of people believed to be browsing child porn sites via the Tor Browser \u2014 an online\nanonymity tool powered by Firefox 17.\n\nTor software protects users by bouncing their communications across a distributed network of relays\nrun by volunteers all around the world. As the Tor homepage notes, it prevents anyone who might be\nwatching your Internet connection from learning what sites you visit, it prevents the sites you\nvisit from learning your physical location, and it lets users access sites that are blocked by\nInternet censors.\n\nThe Tor Browser bundle also is the easiest way to find Web sites that do not want to be easily taken\ndown, such as the Silk Road (a.k.a. the \u201ceBay of hard drugs\u201c) and sites peddling child pornography.\n\nOn Saturday, Aug. 3, 2013, Independent.ie, an Irish news outlet, reported\u00a0that U.S. authorities were\nseeking the extradition of Eric Eoin Marques, a 28-year-old with Irish and American citizenship\nreportedly dubbed by the FBI as \u201cthe largest facilitator of child porn on the planet.\u201d According to\nthe Independent, Marques was arrested on a Maryland warrant that includes charges of distributing\nand promoting child porn online.\n\nThe Tor Project\u2019s blog now carries a post noting that at approximately\u00a0midnight on August 4th \u201ca\nlarge number of hidden service addresses disappeared from the Tor Network, sites that appear to have\nbeen tied to an organization called Freedom Hosting \u2014\u00a0a hosting service run on the Tor Network\nallegedly by Marques.\n\nHidden services can be used to run a variety of Web services that are not directly reachable from a\nnormal Internet connection \u2014 from FTP and IRC servers to Web sites. As such, the Tor Network is a\nrobust tool for journalists, whistleblowers, dissidents and others looking to\u00a0publish information in\na way that is not easily traced back to them.\n\n\u201cThere are rumors that a hosting company for hidden services is suddenly offline and/or has been\nbreached and infected with a javascript exploit,\u201d writes \u201cphobos,\u201d a Tor Project blogger. Phobos\nnotes that the person, or persons, who run Freedom Hosting are in no way affiliated or connected to\nThe Tor Project, Inc., the organization coordinating the development of the Tor software and\nresearch, and continues:\n\nEven if the claimed vulnerability is limited to Firefox version 17, such a flaw would impact far\nmore than just Tor bundle users. Mozilla says it has been notified of a potential security\nvulnerability in Firefox 17, which is currently the extended support release (ESR) version of\nFirefox. Last year, Mozilla began offering an annual ESR of Firefox for enterprises and others who\ndidn\u2019t want to have to keep up with the browser\u2019s new rapid release cycle.\n\n\u201cWe are actively investigating this information and we will provide additional information when it\nbecomes available,\u201d Michael Coates, director of security assurance at Mozilla, wrote in a\u00a0brief blog\npost\u00a0this evening.\n\nOfir David, head of intelligence for Israeli cybersecurity firm Cyberhat, said he believes the now-\npublic exploit code is indeed related to Marques\u2019 arrest. \u00a0David said someone appears to have gained\naccess to Freedom Hosting and injected malicious HTML code that checks the visitor\u2019s browser to see\nif he is using Firefox 17. If so, the code silently redirects that visitor\u2019s browser to another site\nwhich generates a unique identifier called a \u2018UUID.'\u201d\n\nDavid said that although the exploit can be used to download and run malicious code on the visitor\u2019s\ncomputer, whoever infiltrated Freedom Hosting appear to have only used the exploit to gather the\ntrue Internet addresses of people visiting the child porn sites hosted there.\n\n\u201cIronically, all [the malicious code] does is perform a GET request to a new domain, which is hosted\noutside of the Tor network, while transferring the same UUID,\u201d David said. \u201cThat way, whoever is\nrunning this exploit can match any Tor user to his true Internet address, and therefore track down\nthe Tor user.\u201d\n\nFor more on this developing story, check out this Reddit thread. Also, Mozilla has an open Bugzilla\nentry\u00a0analyzing the exploit code.\n\nUpdate, Aug. 5, 1:45 a.m. ET: Reverse engineer Vlad Tsrklevich\u00a0has posted a brief analysis of what\nthe exploit does. His conclusion (which seems sound): \u00a0\u201cBecause this payload does not download or\nexecute any secondary backdoor or commands it\u2019s very likely that this is being operated by an [law\nenforcement agency] and not by blackhats.\u201d\n\nAlso, here\u2019s a bit more from Mozilla\u2019s security lead Dan Veditz on the vulnerability:\n\n\u201cThe vulnerability being exploited by this attack was fixed in Firefox 22 and Firefox ESR 17.0.7.\nThe vulnerability used is\u00a0MFSA 2013-53\n\nPeople who are on the latest supported versions of Firefox are not at risk.\n\nAlthough the vulnerability affects users of Firefox 21 and below the exploit targets only ESR-17\nusers. Since this attack was found on Tor hidden services presumably that is because the Tor Browser\nBundle (TBB) is based on Firefox ESR-17. Users running the most recent TBB have all the fixes that\nwere applied to Firefox ESR 17.0.7 and were also not at risk from this attack.\u201d\n\nUpdate, Aug. 5, 4:08 p.m., ET: Kevin Poulsen from Wired.com notes that, according to a\ndomaintools.com lookup, the IP address used by the malicious script\u2019s controllers found by\nTsrklevich resolves to a Verizon address space that is managed by Science Applications International\nCorp. (SAIC), an American defense contractor headquartered in Tysons Corner, Va.\n\n", "polarity": 0.05699189699189699, "subjectivity": 0.40953452530375595, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/07/adobe-microsoft-release-critical-updates/", "date": "2013-07-09T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Microsoft Release Critical Updates", "body": "Patch Tuesday is upon us once again. Adobe today pushed out security fixes for its Flash and\nShockwave\u00a0media players. Separately, Microsoft released seven patch bundles addressing at least 34\nvulnerabilities in Microsoft Windows and other software. At least one of the Windows flaws is\nalready being exploited in active attacks.\n\nSix of the seven Microsoft patches released today earned the company\u2019s most dire \u201ccritical\u201d rating,\nmeaning the patches plug security holes that could be exploited by malware or miscreants with no\nhelp from PC users, save for visiting a hacked site or opening a specially crafted document.\n\nMicrosoft and security experts are calling special attention to MS13-053, which fixes at least eight\nflaws in Windows\u2019 implementation of TrueType font files. These critical TrueType vulnerabilities\nexist on nearly every supported version of Windows, including XP, Vista, Windows 7 and Windows 8,\nand can be exploited to gain complete control over a vulnerable Windows system, just by having the\nuser visit a Web page that contains malicious TrueType content. To make matters worse, Microsoft\nsays one component of this vulnerability (CVE-2013-3660) is already being exploited in the wild.\n\nThere\u2019s something else that\u2019s interesting about these TrueType flaws: Ross Barrett, senior manager\nof security engineering at Rapid7, notes that\u00a0For the first time ever Microsoft is addressing a\nsingle TrueType vulnerability (CVE-2013-3129) in three different advisories (MS13-052, MS13-053, and\nMS13-054). \u201cBy splitting this out, Microsoft is directly addressing a complaint about previous\n\u201crolled up\u201d advisories where it was difficult to properly prioritize the multiple patches required\nto remediate the problem, and component patches were frequently missed,\u201d Barrett notes.\n\nThe other big deal in today\u2019s patch batch from Redmond is the Internet Explorer update (MS13-055),\nwhich is rated critical for all versions of IE and addresses 17 vulnerabilities. For a breakdown of\nthe updates released today, check out this summary page, which includes links to all of the\nindividual patches.\n\nAlso, Microsoft today announced a policy change related to the security of applications for sale or\ndownload in the Microsoft marketplace: Henceforth, any app that has a reported security issue will\nbe removed from the marketplace store if it is not patched within 180 days of Microsoft confirming\nthe problem. Read more about that policy change at Microsoft\u2019s Technet Blog.\n\nADOBE FLASH & SHOCKWAVE\n\nAdobe\u2019s Flash Player update fixes at least three critical bugs in the program. Updates are available\nfor Windows, Mac, Linux and Android versions of Flash. This update brings Flash Player to version\n11.8.800.94 on Windows and Mac systems (other OS users see the chart at the end of this post). To\nfind out which version of Flash you have installed, visit this page. Internet Explorer 10 auto-\nupdates its built-in Flash Player; Chrome does as well, but the latest patched version of Flash on\nChrome is 11.8.800.97.\u00a0My installation of Chrome does not appear to have updated to the latest\nversion yet.\n\nThe most recent versions of Flash are available from the\u00a0Adobe download center, but beware\npotentially unwanted add-ons, like McAfee Security Scan).\u00a0To avoid this, uncheck the pre-checked box\nbefore downloading, or grab your OS-specific Flash download from\u00a0here.\u00a0Windows users who browse the\nWeb with anything other than Internet Explorer will need to apply this patch twice, once with IE and\nagain using the alternative browser (Firefox,\u00a0Opera, e.g.).\n\nAdobe also released a new version of its Shockwave Player software that fixes at least one critical\nflaw, bringing Shockwave to\u00a0v. 12.0.3.133\u00a0on Windows and Mac systems. Updates are available here.\nShockwave is one of those programs that I\u2019ve urged readers to remove or avoid installing. Like Java,\nit is powerful and very often buggy software that many people have installed but do not really need\nfor everyday Web browsing. Securing your system means not only\u00a0making sure things are locked down,\nbut removing unneeded programs, and Shockwave is near the top of my list on that front.\n\nIf you visit\u00a0this link\u00a0and see a short animation, it should tell you which version of Shockwave you\nhave installed. If it prompts you to download Shockwave (or, in the case of Google Chrome, just\ndownloads it for you), then you don\u2019t have Shockwave installed and in all likelihood don\u2019t need it.\nFirefox users should note that the presence of the Shockwave Flash plugin listed in the Firefox Add-\nons section denotes an installation of Adobe Flash Player plugin \u2014 not Adobe Shockwave.\n\nAdobe did not release any updates for AIR today, as it normally does when it pushes out Flash\nupdates. The company says it is not aware of any active exploits or attacks in the wild that take\nadvantage of the vulnerabilities fixed in today\u2019s Flash and Shockwave releases.\n\nIf all of this patch frenzy has your head spinning, consider using some free tools to help automate\nthe process for you. File Hippo\u2019s\u00a0Update Checker\u00a0works great on this front, as does Secunia\u2019s\nPersonal Software Inspector\u00a0(I\u00a0prefer\u00a0PSI 2\u00a0over PSI 3, but your mileage may vary). And, as always,\nif you experience any problems or interesting issues applying the Windows updates or any of the\nother patches, please drop a note in the comments section below.\n\n", "polarity": 0.07159901290336074, "subjectivity": 0.4835429868038562, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/07/styx-exploit-pack-domo-arigato-pc-roboto/", "date": "2013-07-08T00:00:00.000Z", "author": "Brian Krebs", "title": "Styx Exploit Pack: Domo Arigato, PC Roboto", "body": "Not long ago, miscreants who wanted to buy an exploit kit \u2014 automated software that helps booby-trap\nhacked sites to deploy malicious code \u00a0\u2014 had to be fairly well-connected, or at least have access to\nsemi-private underground forums. These days, some exploit kit makers are brazenly advertising and\noffering their services out in the open, marketing their wares as browser vulnerability \u201cstress-test\nplatforms.\u201d\n\nAptly named after the river in Greek mythology that separates mere mortals from the underworld, the\nStyx exploit pack is a high-end software package that is made for the underground but marketed and\nserviced at the public styx-crypt[dot]com. The purveyors of this malware-as-a-service also have made\na 24 hour virtual help desk available to paying customers.\n\nStyx customers might expect such niceties for the $3,000 price tag that accompanies this kit. A\nsource with access to one Styx kit exploit panel that was apparently licensed by a team of bad guys\nshared a glimpse into their operations and the workings of this relatively slick crimeware offering.\n\nThe Styx panel I examined is set up for use by a dozen separate user accounts, each of which appears\nto be leveraging the pack to load malware components that target different moneymaking schemes. The\naccount named \u201cadmin,\u201d for example, is spreading an executable file that tries to install the\nReveton ransomware.\n\nOther user accounts appear to be targeting victims in specific countries. For example, the user\naccounts \u201cIT\u201d and \u201cIT2\u201d are pushing variants of the ZeuS banking trojan, and\u00a0according to this Styx\npanel\u2019s statistics page, Italy was by far the largest source of traffic to the malicious domains\nused by these two accounts. Additional apparently country-focused accounts included \u201cNL,\u201d AUSS,\u201d and\n\u201cAdultamer\u201d (\u201camer\u201d is a derisive Russian slur used to describe Americans).\n\nAn exploit kit \u2014 also called an \u201cexploit pack\u201d (Styx is marketed as \u201cStyx Pack\u201d) is a software\ntoolkit that gets injected into hacked or malicious sites, allowing the attacker to foist a kitchen\nsink full of browser exploits on visitors. Those visiting such sites with outdated browser plugins\nmay have malware silently installed.\n\nUnlike other kits, Styx doesn\u2019t give a detailed breakdown of the exploits used in the panel. Rather,\nthe panel I looked at referred to its bundled exploits by simple two-digit numbers. This particular\nStyx installation used just four browser exploits, all but one of which targets recent\nvulnerabilities in Java. The kit referred to each exploit merely by the numbers 11, 12, 13 and 32.\n\nAccording to the considerable\u00a0legwork done by Kafeine, a security blogger who digs deeply into\nexploit kit activity, Styx Kit exploit #11 is likely to be CVE-2013-1493, a critical flaw in a Java\nbrowser plugin that Java maker Oracle fixed with an emergency patch in March 2013. Exploit 12 is\nalmost certainly CVE-2013-2423, another critical Java bug that Oracle patched in April 2013. In an\ninstant message chat, Kafeine says exploit #13 is probably CVE-2013-0422, a critical Java\nvulnerability that was patched in January 2013. The final exploit used by the kit I examined, number\n32, maps to CVE-2011-3402, the same Microsoft Windows font flaw exploited by the Duqu Trojan.\n\nThe Styx stats page reports that the hacked and malicious sites used by this kit have been able to\ninfect roughly one out of every 10 users who visited the sites. This particular Styx installation\nwas set up on June 24, 2013, and since that time it has infected approximately 13,300 Windows PCs \u2014\nall via just those \u00a0four vulnerabilities (but mostly the Java bugs).\n\nOne very interesting pattern I observed in poking at this exploit pack \u2014 and 0thers recently \u2014 is\nthe decreasing prevalence or complete absence of reported infections from Google Chrome users, and\nto a lesser extent users of recent versions of Mozilla Firefox. As we can see from the graphic at\nthe top of this blog post, users browsing with Microsoft\u2019s Internet Explorer made up the lion\u2019s\nshare of victims.\n\nThis Styx installation reports installing malware on systems of just a handful of Firefox users, and\nagainst not a single Chrome user. In fact, the author of this kit freely states in a Q&A from an\nunderground forum sales thread that his kit doesn\u2019t even work against Chrome. For a complete\nbreakdown of victims by browser and operating system, see this graphic.\n\nKafeine said he, too, has noticed a pronounced shift in the browser breakdowns from different\nexploit kits.\n\n\u201cNot many exploit kits [perform] very well against Chrome,\u201d Kafeine said, noting that both Chrome\nand Firefox both now include integrated PDF readers, and that exploits against Adobe\u2019s PDF reader\nhave traditionally been a key contributor to exploit kit infection statistics.\n\nKafeine said one malware gang whose work he has followed \u2014 an organized crime crew that uses the\nGameover ZeuS variant \u2014 \u00a0doesn\u2019t even attempt to infect Chrome users who wander into its malware\ntraps. Instead, those users are hit with a social engineering attack that tries to trick them into\ninstalling the malware by disguising it as a Chrome browser update.\n\n\u201cThose users are automatically redirected to a fake Chrome update page,\u201d Kafeine said.\n\nFor more details on Styx and the different flavors of this exploit kit that have emerged in recent\nmonths, check out these blog posts:\n\nStyx Exploit Kit Takes Advantage of Vulnerabilities\n\nStyx Exploit Kit Analysis \u2013 Building a Bridge to the Underworld\n\nCrossing the Styx\n\nA \u201cStyxy\u201d Cool EK!\n\n", "polarity": 0.043095238095238096, "subjectivity": 0.48442176870748294, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/06/windows-security-101-emet-4-0/", "date": "2013-06-18T00:00:00.000Z", "author": "Brian Krebs", "title": "Windows Security 101: EMET 4.0", "body": "Several years ago, Microsoft released the\u00a0Enhanced Mitigation Experience Toolkit\u00a0(EMET), a free tool\nthat can help Windows users beef up the security of third-party applications. This week, Microsoft\ndebuted EMET 4.0, which includes some important new security protections and compatibility fixes for\nthis unobtrusive but effective security tool.\n\nFirst, a quick overview of what EMET does. EMET allows users to force applications to use several\nkey security defenses built into Windows\u00a0\u2014 including Address Space Layout Randomization (ASLR) and\nData Execution Prevention (DEP).\u00a0Put very simply, DEP is designed to make it harder to exploit\nsecurity vulnerabilities on Windows, and ASLR makes it more difficult for exploits and malware to\nfind the specific places in a system\u2019s memory that they need to do their dirty work.\n\nEMET can force a non-Microsoft application to perform ASLR on every component it loads, whether the\nprogram wants it or not. Please note that before you install EMET, you\u2019ll need to have Microsoft\u2019s\n.NET\u00a0Framwork 4 platform installed. And while EMET does work on Windows XP (Service Pack 3 only), XP\nusers cannot take advantage of mandatory ASLR and a few other notable protections included in this\ntool.\n\nHowever, EMET includes several important security features that can help fortify third-party\napplications on XP. Namely, its \u201cStructured Exception Handler Overwrite Protection,\u201d or SEHOP\nprotection, which guards against\u00a0the most common technique for exploiting stack overflows\u00a0on\nWindows. Microsoft says this mitigation has shipped with Windows ever since Windows Vista Service\nPack 1.\n\nIn addition to a revised user interface, EMET 4.0 includes a handful of new features that were\nbundled with the 3.5 tech preview version, such as novel methods of blocking an exploit technique\ncalled return-oriented programming (ROP). Attackers can leverage ROP to bypass DEP protections by\nusing\u00a0snippets of code that are already present in the targeted\u00a0application.\n\nOne of the much-hyped new capabilities of EMET 4.0 is its \u201ccertificate trust\u201d feature, which is\ndesigned to block so-called \u201cman-in-the-middle\u201d attacks that leverage counterfeit SSL certificates\nin the browser. The past few years saw several attacks that impersonated Webmail providers and other\ntop Internet destinations using fraudulent digital certificates obtained by certificate authorities,\nincluding Comodo, DigitNotar and Turktrust.\u00a0This feature is a nice idea, but it seems somewhat\nclunky to implement, and only works to protect users who browse the Web with Internet Explorer. For\ntips on configuring and using this feature of EMET, check out this post.\n\nTo proceed with EMET, download the program and install it (if you are upgrading from an older\nversion of EMET, uninstall the older version first before proceeding with the EMET 4.0 install).\nThis new version of EMET gives users an option to allow a pre-set group of applications to be\nautomatically protected by EMET, including Java, Adobe Acrobat, Internet Explorer and any Office\napps that may be installed. Alternatively, users can start from scratch and select their own\napplications to put behind EMET.\n\nTo wrap EMET\u2019s protection around a program \u2014 say, Mozilla Firefox \u2014 launch EMET and click the \u201cApps\u201d\nbutton in the upper portion of the main EMET window. Selecting the \u201cAdd Application\u201d button in the\nnext box brings up a program selection prompt; browse to C:\\Program Files (x86)\\Mozilla Firefox, and\nthen add the \u201cfirefox.exe\u201d file. It should be okay to accept all of the defaults that EMET adds for\nyou.\n\nWhile you\u2019re at it, add the rest of your more commonly used, Internet-facing apps. But go slow with\nit, and avoid the temptation to make system-wide changes. Changing system defaults across the board\n\u2013 such as changing ASLR and DEP settings using the \u201cconfigure system\u201d tab \u2013 may cause stability and\nbootup problems.\n\nI\u2019ve been using EMET on a 64-bit Windows 7 system and phasing in some of my most-used applications\none-by-one with the \u201cconfigure apps\u201d button just to make sure the added security doesn\u2019t crash the\nprograms. \u00a0Microsoft\u2019s support forum has a useful thread on applications that may not play nice with\nEMET\u2019s default protection settings.\n\nFor example, a handful of applications will simply crash or not work with EMET\u2019s \u201cexport address\ntable access filtering\u201d (EAF) mitigation turned on. Skype is one well-known example here. I\u2019ve also\nexperienced issues with running EAF on Google Chrome.\n\nThis is really where EMET\u2019s unobtrusiveness can be a blessing and a curse. Unlike some security and\nantivirus tools that periodically pop-up annoying warnings or notifications to let you know they\u2019re\nstill there and doing their job, EMET is likely to do its job unnoticed by most users. I say curse\nbecause on one occasion (I can\u2019t recall the name of the application at issue) I spent a few days\nscratching my head over an app that wouldn\u2019t work properly, only to remember later that I\u2019d set it\nto use EMET months before.\n\nIf you have questions about EMET or run into issues with the program, check out the Microsoft\nsupport page for EMET, which lets you to submit questions to the user community if you don\u2019t see\nyour problem addressed in a previous support thread.\n\nThe chart above indicates which system- and application-specific protections in EMET 4.0 are\navailable for each supported version of Windows. Visit this link to download EMET 4.0, as well as a\ndetailed user guide on the software.\n\n", "polarity": 0.1016488413547237, "subjectivity": 0.4608357737034207, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/04/critical-fixes-for-windows-flash-shockwave/", "date": "2013-04-09T00:00:00.000Z", "author": "Brian Krebs", "title": "Critical Fixes for Windows, Flash & Shockwave", "body": "The second Tuesday of the month is upon us, and that means it\u2019s once again time to get your patches\non, people (at least for readers running Windows or Adobe products).\u00a0Microsoft today pushed out nine\npatch bundles to plug security holes in Windows and its other products. Separately, Adobe issued\nupdates for its Flash and\u00a0Shockwave media players that address four distinct security holes in each\nprogram.\n\nMicrosoft called special attention to a cumulative update for Internet Explorer that fixes two\ncritical vulnerabilities present in virtually every version of IE ever produced, including IE 9, 10\nand IE on Windows RT, the operating system for mobile devices and tablets.\n\nThe other critical patch in the bunch addresses a dangerous vulnerability in the Windows Remote\nDesktop Client, which allows systems to be managed remotely. For a rundown of the other updates\nreleased today, check out the Qualys blog, the Microsoft Security Bulletin Summary for April 2013\nand the Microsoft Security Response Blog.\n\nAdobe\u2019s update brings Adobe Flash Player to v. 11.7.700.169 on Windows and Mac devices (the latest\nversion numbers for other operating systems are listed in the chart below). Internet Explorer 10 and\nGoogle Chrome should automatically update to the latest version. Google has already pushed out the\nFlash update\u00a0with Chrome v. 26.0.1410.63 for Mac and Linux, and v. 26.0.1410.64 for Windows; if your\nChrome version isn\u2019t at the latest (you can check which version by clicking the customize tab to the\nright of the address bar and then \u201cAbout Google Chrome\u2019), try closing and restarting the browser.\n\nThis link\u00a0should tell you which version of Flash your browser has installed. The most recent\nversions are available from the\u00a0Adobe download center, but beware potentially unwanted add-ons, like\nMcAfee Security Scan).\u00a0To avoid this, uncheck the pre-checked box before downloading, or grab your\nOS-specific Flash download from\u00a0here.\u00a0Windows users who browse the Web with anything other than\nInternet Explorer will need to apply this patch twice, once with IE and again using the alternative\nbrowser (Firefox,\u00a0Opera, e.g.).\n\nAdobe also issued an update for its Shockwave Player software that fixes at least four\nvulnerabilities, bringing Shockwave to v. 12.0.2.122 on Windows and Mac systems. Shockwave is one of\nthose programs that I\u2019ve urged readers to remove or avoid installing. Like Java, it is powerful and\nvery often buggy software that many people have installed but do not really need for everyday Web\nbrowsing. Securing your system means not only\u00a0making sure things are locked down, but removing\nunneeded programs, and Shockwave is near the top of my list on that front.\n\nIf you visit\u00a0this link\u00a0and see a short animation, it should tell you which version of Shockwave you\nhave installed. If it prompts you to download Shockwave, then you don\u2019t have Shockwave installed and\nin all likelihood don\u2019t need it. Firefox users should note that the presence of the Shockwave Flash\nplugin listed in the Firefox Add-ons section denotes an installation of Adobe Flash Player plugin \u2014\nnot Adobe Shockwave.\n\nFinally, if you have\u00a0Adobe AIR\u00a0installed (required by some programs like Tweetdeck and Pandora\nDesktop), you\u2019ll want to update this program. AIR ships with an auto-update function that should\nprompt users to update when they start an application that requires it; the newest, patched version\nis\u00a03.7.0.1530\u00a0for Windows, Mac, and Android.\n\nIf all of this patch craziness has your head spinning, consider using some free tools to help\nautomate the process for you. File Hippo\u2019s Update Checker works great on this front, as does\nSecunia\u2019s Personal Software Inspector (I prefer PSI 2 over PSI 3, but your mileage may vary). And,\nas ever, if you experience any problems or interesting issues applying the Windows updates or any of\nthe other patches, please drop a note in the comments section below.\n\n", "polarity": 0.10565003779289495, "subjectivity": 0.5151171579743009, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/03/help-keep-threats-at-bay-with-click-to-play/", "date": "2013-03-11T00:00:00.000Z", "author": "Brian Krebs", "title": "Help Keep Threats at Bay With \u2018Click-to-Play\u2019", "body": "Muzzling buggy and insecure Web browser plugins like Java and Flash goes a long way toward blocking\nattacks from drive-by downloads and hacked or malicious Web sites. But leaving them entirely\nunplugged from the browser is not always practical, particularly with Flash, which is used on a\nmajority of sites. Fortunately for many users, there is a relatively simple and effective\nalternative: Click-to-Play.\n\nClick-to-Play is a feature built into both Google Chrome,\u00a0Mozilla Firefox\u00a0and Opera (and available\nvia add-ons in Safari) that blocks plugin activity by default, replacing the plugin content on the\npage with a blank box. Users who wish to view the blocked content need only click the boxes to\nenable the Flash or Java content inside of them.\n\nTo enable click-to-play on Chrome: From the main menu, click Settings, then in the search box type\n\u201cclick to play,\u201d and click the highlighted box labeled \u201ccontent settings.\u201d In content settings,\nscroll down to the \u201cplug-ins\u201d section, and change the default from \u201crun automatically\u201d to \u201cclick to\nplay\u201d. To enable exceptions so that certain sites (krebsonsecurity.com?) are allowed to load Flash\nand other content by default, click the \u201cmanage exceptions\u201d box. Alternatively, this can be done in\nChrome through the address bar: when you browse to a site that has content blocked by the click-to-\nplay feature, an icon will appear on the far right side of the address bar that allows you to add an\nexception for the current site.\n\nTo enable click-to-play in Firefox: Open a browser window and type \u201cabout:config\u201d without the\nquotes. In the search box at the top of the resulting window, paste the follow\n\u201cplugins.click_to_play\u201d, again without the quotes. Double click the entry that shows up so that its\nsetting under the \u201cvalue\u201d column changes from \u201cfalse\u201d to \u201ctrue\u201d (hat tip to F-Secure.com for this\nadvice). To enable per-site exceptions, look for the blue lego-like icon in the lefthand portion of\nthe URL bar, and click it; click the \u201cactivate\u201d button to enable plugins just for that session, or\nto make it permanent for that site, click the down arrow next to \u201cactivate all plugins\u201d and select\nthe \u201calways activate plugins for this site\u201d option.\n\nOpera users interested in this feature can enable it by clicking \u201cCtrl+F12\u201d, and then the \u201cAdvanced\u201d\ntab, then \u201cContent,\u201d and then enabling the \u201cEnable plug-ins on demand\u201d option.\n\nSafari users can get a click-to-play like experience using either the ClicktoFlash extension \u2013\nwhich, as its name suggests blocks Flash content \u2013 or the more comprehensive\u00a0ClickToPlugin\nextension.\n\nGetting a click-to-play like feature working in Microsoft\u2018s\u00a0Internet Explorer\u00a0seems to be a bit more\ncomplicated.\u00a0Internet Explorer 10, which includes its own version of Flash, uses a Microsoft-\nprovided whitelist of websites that are allowed to play Flash content by default. IE10 users on\nWindows 8 can add any site they like to the whitelist, but the steps for doing so are hardly\nstraightforward. See this writeup for more information on how to do that (if someone knows of an\neasier way with IE10, please leave a comment below). PCMech.com explains how to sort of get click-\nto-play working in IE9, but this option may produce incessant pop-up prompts.\n\nI mentioned at the outset of this post that some of these approaches can be used to block Java\ncontent from running by default, but a far safer approach with Java is simply to unplug it from the\nbrowser\u00a0until and unless you need it (or uninstall it completely).\u00a0If you need an idea of why I\nrecommend this, have a gander at just a few of the most recent posts on Java.\n\nOne final note for those who decide to keep Java; unplugging it from the browser is a good idea, but\nkeep in mind that Oracle\u2019s Java installer re-enables the plug-in when the program is updated (shakes\nfist at Oracle).\n\n", "polarity": 0.16305555555555556, "subjectivity": 0.49789682539682556, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/01/adobe-microsoft-ship-critical-security-updates/", "date": "2013-01-08T00:00:00.000Z", "author": "Brian Krebs", "title": "Adobe, Microsoft Ship Critical Security Updates", "body": "Adobe and Microsoft today separately issued updates to fix critical security vulnerabilities in\ntheir products. Adobe pushed out fixes for security issues in Acrobat, Adobe Reader and its Flash\nPlayer plugin.\u00a0Microsoft released seven patches addressing at least a dozen security holes in\nWindows and other software, although it failed to issue an official patch for a dangerous flaw in\nits Internet Explorer Web browser that attackers are now actively exploiting.\n\nTwo of the patches that Microsoft issued today earned a \u201ccritical\u201d rating, signifying that these\nvulnerabilities could be exploited to fully compromise vulnerable Windows systems without any help\nfrom users. Microsoft called special attention to two critical bugs in its XML Core Services\ncomponent; the company said it is likely that malware or miscreants will figure out a way to exploit\nthese flaws in active attacks sometime within the next 30 days.\n\nUnfortunately, Microsoft did not offer an official fix for a critical Windows flaw that malware and\nmiscreants are already exploiting. In late December, Microsoft acknowledged that attackers were\nusing a previously undocumented security hole in Internet Explorer versions 6 through 8 to break\ninto Windows PCs. Microsoft later issued a stopgap \u201cFixIt\u201d tool to help lessen the vulnerability on\naffected systems, but researchers last week demonstrated that the FixIt tool only blocked some\nmethods of attacking the flaw, leaving other ways unguarded. Meanwhile, a working copy of the\nexploit has been folded into Metasploit, a free penetration testing tool.\n\nWolfgang Kandek, chief technology officer at vulnerability management firm Qualys, said the zero-day\nIE vulnerability affects 90% of the IE install base at this time.\n\n\u201cMicrosoft is not providing a patch today, though they have provided a Fix-It for the issue,\u201d Kandek\nwrote in a blog post. \u201cThe vulnerability should be tracked closely, as a large percentage of\nenterprises still run the affected versions.\u201d\n\nUsers who wish to continue browsing the Web with IE should upgrade to IE9 if possible (IE10 on\nWindows 8 also is not vulnerable). Users still on Windows XP will not be able to update to IE9, but\nmay be able to derive some protection from the FixIt tool and by using Microsoft\u2019s EMET tool. XP\nusers may be better off, however, browsing with Firefox or Chrome with some type of script blocking\nand/or sandbox in place. More information on how to use EMET and script blocking options is\navailable in my Tools for a Safer PC primer. More details about today\u2019s updates from Microsoft can\nbe found at the Microsoft Security Response Center blog and in the security bulletin summaries for\neach patch.\n\nThe Adobe Flash patch fixes at least one critical vulnerability in the media player plugin. Updates\nare available for all supported versions of Flash, including for Windows, Mac, Linux and Android.\nSee the chart below for the latest version number broken down by operating system.\n\nTo learn whether you have Flash installed and which version you may have, visit this link. Adobe\nurges users to grab the latest updates from its\u00a0Flash Player Download Center, but that option pushes\njunk add-ons like\u00a0McAfee VirusScan. Instead, download the appropriate version for your system from\nAdobe\u2019s Flash Player Distribution page (I long ago stopped waiting for Flash\u2019s auto-updater to kick\nin).\u00a0Adobe says that Flash Player installed with\u00a0Internet Explorer 10\u00a0for\u00a0Windows 8\u00a0and\u00a0Google\nChrome\u00a0should be updated automatically (Chrome shipped a beta update today to address this in Chrome\nversion 24.0.1312.52.\n\nAdobe also issued an update to fix this flaw in its AIR software. The latest version of AIR, v.\n3.5.0.1060,\u00a0is available here.\n\nFinally, Adobe released updates that fix at least 26 security problems in Adobe Acrobat and Adobe\nReader. Adobe has released security updates for Adobe Reader and Acrobat XI (11.0.0) and earlier\nversions for Windows and Macintosh, and Adobe Reader 9.5.1 and earlier 9.x versions for Linux.\u00a0If\nyou use these products, you\u2019ll want to update them.\n\nAs always, if you experience any problems downloading or installing any of these updates, please\nleave a note about it in the comments below.\n\n", "polarity": 0.022650793650793664, "subjectivity": 0.5564444444444443, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/01/what-you-need-to-know-about-the-java-exploit/", "date": "2013-01-12T00:00:00.000Z", "author": "Brian Krebs", "title": "What You Need to Know About the Java Exploit", "body": "On Thursday, the world learned that attackers were breaking into computers using a previously\nundocumented security hole in Java, a program that is installed on hundreds of millions of computers\nworldwide. This post aims to answer some of the most frequently asked questions about the\nvulnerability, and to outline simple steps that users can take to protect themselves.\n\nUpdate, Jan. 13, 8:14 p.m. ET: Oracle just released a patch to fix this vulnerability. Read more\nhere.\n\nQ: What is Java, anyway? A: Java is a programming language and computing platform that powers\nprograms including utilities, games, and business applications. According to Java maker Oracle\nCorp., Java runs on more than 850 million personal computers worldwide, and on billions of devices\nworldwide, including mobile and TV devices. It is required by some Web sites that use it to run\ninteractive games and applications.\n\nQ: So what is all the fuss about?  A: Researchers have discovered that cybercrooks are attacking a\npreviously unknown security hole in Java 7 that can be used to seize control over a computer if a\nuser visits a compromised or malicious Web site.\n\nQ: Yikes. How do I protect my computer? A: The version of Java that runs on most consumer PCs\nincludes a browser plug-in. According to researchers at\u00a0Carnegie Mellon University\u2018s CERT,\nunplugging the Java plugin from the browser essentially prevents exploitation of the vulnerability.\nNot long ago, disconnecting Java from the browser was not straightforward, but with the release of\nthe latest version of Java 7 \u2014 Update 10 \u2014 Oracle included a very simple method for removing Java\nfrom the browser. You can find their instructions for doing this here.\n\nQ: How do I know if I have Java installed, and if so, which version? A: The simplest way is to visit\nthis link and click the \u201cDo I have Java\u201d link, just below the big red \u201cDownload Java\u201d button.\n\nQ: I\u2019m using Java 6. Does that mean I don\u2019t have to worry about this?  A: There have been\nconflicting findings on this front. The description of this bug at the National Vulnerability\nDatabase (NVD), for example, states that the vulnerability is present in Java versions going back\nseveral years, including version 4 and 5. Analysts at vulnerability research firm Immunity\u00a0say the\nbug could impact Java 6 and possibly earlier versions.\u00a0But Will Dormann, a security expert who\u2019s\nbeen examining this flaw closely for CERT, said the NVD\u2019s advisory is incorrect: CERT maintains that\nthis vulnerability stems from a component that Oracle introduced \u00a0with Java 7. Dormann points to a\ndetailed technical analysis of the Java flaw by Adam Gowdiak of Security Explorations, a security\nresearch team that has alerted Java maker Oracle about a large number of flaws in Java. Gowdiak says\nOracle tried to fix this particular flaw in a previous update but failed to address it completely.\n\nEither way, it\u2019s important not to get too hung up on which versions are affected, as this could\nbecome a moving target. Also, a new zero-day flaw is discovered in Java several times a year. That\u2019s\nwhy I\u2019ve urged readers to either uninstall Java completely or unplug it from the browser no matter\nwhat version you\u2019re using.\n\nQ: A site I use often requires the Java plugin to be enabled. What should I do? A: You could\ndowngrade to Java 6, but that is not a very good solution. Oracle will stop supporting Java 6 at the\nend of February 2013, and will soon be transitioning Java 6 users to Java 7 anyway. If you need Java\nfor specific Web sites, a better solution is to adopt a two-browser approach. If you normally browse\nthe Web with Firefox, for example, consider disabling the Java plugin in Firefox, and then using an\nalternative browser (Chrome, IE9, Safari, etc.) with Java enabled to browse only the site(s) that\nrequire(s) it.\n\nQ: I am using a Mac, so I should be okay, right? A: Not exactly. Experts have found that this flaw\nin Java 7 can be exploited to foist malware on Mac and Linux systems, in addition to Microsoft\nWindows machines. Java is made to run programs across multiple platforms, which makes it especially\ndangerous when new flaws in it are discovered. For instance, the Flashback worm that infected more\nthan 600,000 Macs wiggled into OS X systems via a Java flaw. Oracle\u2019s instructions include advice on\nhow to unplug Java from Safari. I should note that Apple has not provided a version of Java for OS X\nbeyond 6, but users can still download and install Java 7 on Mac systems. However,\u00a0it appears that\nin response to this threat, Apple has taken steps to block Java from running on OS X systems.\n\nQ: I don\u2019t browse random sites or visit dodgy porn sites, so I shouldn\u2019t have to worry about this,\ncorrect? A: Wrong. This vulnerability is mainly being exploited by exploit packs, which are\ncrimeware tools made to be stitched into Web sites so that when visitors come to the site with\nvulnerable/outdated browser plugins (like this Java bug), the site can silently install malware on\nthe visitor\u2019s PC. Exploit packs can be just as easily stitched into porn sites as they can be\ninserted into legitimate, hacked Web sites. All it takes is for the attackers to be able to insert\none line of code into a compromised Web site.\n\nQ: I\u2019ve read in several places that this is the first time that the U.S. government has urged\ncomputer users to remove or wholesale avoid using a particular piece of software because of a\nwidespread threat. Is this true? A: Not really. During previous high-alert situations, CERT has\nadvised Windows users to avoid using Internet Explorer. In this case, CERT is not really\nrecommending that users uninstall Java: just that users unplug Java from their Web browser.\n\nQ: I\u2019m pretty sure that my Windows PC has Java installed, but I can\u2019t seem to locate the Java\nControl Panel from the Windows Start Menu or Windows Control Panel. What gives? A: According to\nCERT\u2019s Dormann, due to what appears to potentially be a bug in the Java installer, the Java Control\nPanel applet may be missing on some Windows systems. In such cases, the Java Control Panel applet\nmay be launched by finding and executing\u00a0javacpl.exe\u00a0manually. This file is likely to be found in\nC:\\Program Files\\Java\\jre7\\bin\u00a0 or \u00a0C:\\Program Files (x86)\\Java\\jre7\\bin.\n\nQ: I can\u2019t remember the last time I used Java, and it doesn\u2019t look like I even need this program\nanymore. Should I keep it? A: Java is not as widely used as it once was, and most users probably can\nget by without having the program installed at all. I have long recommended that users remove Java\nunless they have a specific use for it. If you discover later that you really do need Java, it is\ntrivial and free to reinstall it.\n\nQ: This is all well and good advice for consumers, but I manage many PCs in a business environment.\nIs there a way to deploy Java but keep the plugin disconnected from the browser?\u00a0 A: CERT advises\nthat system administrators wishing to deploy Java 7 Update 10 or later with the \u201cEnable Java content\nin the browser\u201d feature disabled can invoke the Java installer with the WEB_JAVA=0 command-line\noption. More details are available in the Java documentation.\n\nQ: Okay, I think I\u2019m covered on Java. But what about Javascript? A: Because of the unfortunate\nsimilarity of their names, many people confuse Java with Javascript. But these are two completely\ndifferent things. Most Web sites use JavaScript, a powerful scripting language that helps make sites\ninteractive. Unfortunately, a huge percentage of Web-based attacks use JavaScript tricks to foist\nmalicious software and exploits onto site visitors. To protect yourself, it is critically important\nto have an easy method of selecting which sites should be allowed to run JavaScript in the browser.\nIt is true that selectively allowing JavaScript on known, \u201csafe\u201d sites won\u2019t block all malicious\nscripting attacks: Even legitimate sites sometimes end up running malicious code when scammers\nfigure out ways to sneak tainted, bogus ads into the major online ad networks. But disallowing\nJavaScript by default and selectively enabling it for specific sites remains a much safer option\nthan letting all sites run JavaScript unrestricted all the time.\n\nFirefox has many extensions and add-ons that make surfing the Web a safer experience. One extension\nthat I have found indispensable is NoScript. This extension lets the user decide which sites should\nbe allowed to run JavaScript, including Flash Player content. Users can choose to allow specific\nexceptions either permanently or for a single browsing session.\n\nChrome also includes similar script- and Flash blocking functionality that seems designed to\nminimize some of these challenges by providing fewer options. If you tell Chrome to block JavaScript\non all sites by default, when you browse to a site that uses JavaScript, the upper right corner of\nthe browser displays a box with a red \u201cX\u201d through it. If you click that and select \u201cAlways allow\nJavaScript on [site name]\u201d it will permanently enable JavaScript for that site, but it doesn\u2019t give\nyou the option to block third-party JavaScript content on the site as Noscript does. In my testing,\nI had to manually refresh the page before Chrome allowed scripting on a site that I\u2019d just\nwhitelisted. In addition, there is a very handy add-on for Chrome called NotScripts that works very\nmuch like Noscript.\n\nSelectively script blocking can take some getting used to. Most script-blocking add-ons will disable\nscripting by default on Web sites that you have not added to your trusted list. In some cases, it\nmay take multiple tries to get a site that makes heavy use of Javascript to load properly.\n\nInternet Explorer allows users to block scripts, but even the latest version of IE still doesn\u2019t\ngive the user much choice in handling JavaScript. In IE9, you can select among JavaScript on, off,\nor prompting you to load JavaScript. Turning JavaScript off isn\u2019t much of an option, but leaving it\ncompletely open is unsafe. Choosing the \u201cPrompt\u201d option does nothing but serve incessant pop-up\nprompts to allow or disallow scripts (see the video below). The lack of a simpler approach to script\nblocking in IE is one of the main reasons I continue to steer readers toward Firefox and Chrome.\n\n", "polarity": 0.12525101360627677, "subjectivity": 0.43480467144940826, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2013/01/turkish-registrar-enabled-phishers-to-spoof-google/", "date": "2013-01-03T00:00:00.000Z", "author": "Brian Krebs", "title": "Turkish Registrar Enabled Phishers to Spoof Google", "body": "Google and Microsoft today began warning users about active phishing attacks against Google\u2019s online\nproperties. The two companies said the attacks resulted from a fraudulent digital certificate that\nwas mistakenly issued by a Turkish domain registrar.\n\nIn a blog post published today, Google said that on Dec. 24, 2012, its Chrome Web browser detected\nand blocked an unauthorized digital certificate for the \u201c*.google.com\u201d domain.\n\n\u201cWe investigated immediately and found the certificate was issued by an\u00a0intermediate certificate\nauthority\u00a0(CA) linking back to TURKTRUST, a Turkish certificate authority,\u201d wrote\u00a0Adam Langley, a\nGoogle software engineer. \u201cIntermediate CA certificates carry the full authority of the CA, so\nanyone who has one can use it to create a certificate for any website they wish to impersonate.\u201d\n\nLangley said that Google responded by Chrome on December 25 to block that intermediate CA, and then\nalerted TURKTRUST and other browser vendors. \u201cTURKTRUST told us that based on our information, they\ndiscovered that in August 2011 they had mistakenly issued two intermediate CA certificates to\norganizations that should have instead received regular SSL certificates. On December 26, we pushed\nanother Chrome metadata update to block the second mistaken CA certificate and informed the other\nbrowser vendors.\u201d\n\nSeparately, Microsoft has issued an advisory with a bit more detail, saying it is aware of active\nattacks using one of the fraudulent digital certificates issued by TURKTRUST Inc.\n\n\u201cThis fraudulent certificate could be used to spoof content, perform phishing attacks, or perform\nman-in-the-middle attacks. This issue affects all supported releases of Microsoft Windows,\u201d the\nsoftware giant warned.\n\nAccording to Microsoft, TURKTRUST Inc. incorrectly created two subsidiary CAs (*.EGO.GOV.TR and\ne-islem.kktcmerkezbankasi.org). The *.EGO.GOV.TR subsidiary CA was then used to issue a fraudulent\ndigital certificate to *.google.com. This fraudulent certificate could be used to spoof content,\nperform phishing attacks, or perform man-in-the-middle attacks against several Google web\nproperties.\u201d [link added]\n\nIt\u2019s not clear yet whether this was an attack against Turkish residents, or if the targets were more\nwidespread geographically. The domain that Microsoft mentioned in its advisory \u2014\nkktcmerkezbankasi.org \u2014\u00a0is not resolving at the moment. But according to a screen shot of the\ndomain\u2019s home page taken by Domaintools.com on March 14, 2012 (see image above), the site\nrepresented itself as the Central Bank of the Turkish Republic of Northern Cyprus (TRNC), a\nfinancial institution established in Northern Cyprus in 1983.\n\nIn any case, compromises like this one can lead to colossal security failures. An attacker with\ncertificate authority signing ability can sign certificates for virtually any domain.\u00a0The TURKTRUST\nincident harkens back to another similar compromise that happened around the same timeframe. In\nSeptember 2011, Dutch certificate authority Diginotar learned that a security breach at the firm had\nresulted in the fraudulent issuing of certificates. A follow-up investigation \u00a0suggested that the\nattacker who penetrated the Dutch CA DigiNotar last year had complete control of all eight of the\ncompany\u2019s certificate-issuing servers during the operation and he may also have issued some rogue\ncertificates that have not yet been identified. Diginotar later declared bankruptcy.\n\nMicrosoft has pushed out an update that addresses this weakness and removes the fraudulent\ncertificates from the list of trusted certs in Windows. According to Microsoft, the update should be\nautomatically deployed to users on Windows 8, Windows RT, Windows Server 2012 and devices running\nWindows Phone 8.\u00a0An automatic updater of revoked certificates is available for Windows Vista,\nWindows Server 2008, Windows 7, and Windows Server 2008 R2, from\u00a0this link.\u00a0Windows XP and Windows\nServer 2003 customers can grab the update via Microsoft Update (it\u2019s not immediately clear from\nMicrosoft\u2019s advisory whether users of other Windows versions can obtain the update from Microsoft\nUpdate as well).\n\nUpdate, 3:57 p.m. ET:A previous version of this story incorrectly named TURKTRUST as an institution\nrun by the Turkish government. The above copy has been corrected.\n\nUpdate, 4:16 p.m. ET:\u00a0Firefox browser maker Mozilla\u00a0just published a blog post noting that it, too,\nwas revoking the fraudulent certs.\n\n", "polarity": 0.034490740740740745, "subjectivity": 0.266025641025641, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/11/malware-spy-network-targeted-israelis-palestinians/", "date": "2012-11-12T00:00:00.000Z", "author": "Brian Krebs", "title": "Malware Spy Network Targeted Israelis, Palestinians", "body": "Researchers in Norway have uncovered evidence of a vast Middle Eastern espionage network that for\nthe past year has deployed malicious software to spy on Israeli and Palestinian targets.\n\nThe discovery, by Oslo-based antivirus and security firm Norman ASA, is the latest in a series of\nrevelations involving digital surveillance activity of unknown origin that appears designed to\ngather intelligence from specific targets in the Middle East.\n\nNorman\u2019s experts say the true extent of the spy network came into focus after news of a cyber attack\nin late October 2012 that caused Israeli authorities to shut down Internet access for its police\nforce. According to press reports, that incursion was spearheaded by a booby-trapped email that was\nmade to look as if it was sent by Benny Gantz, the chief of general staff of the Israel Defense\nForces.\n\nSecurity vendor Trend Micro suggested that the initial target of that attack were systems within the\nIsraeli Customs agency, and said the malware deployed was a version of Xtreme RAT, a Remote Access\nTrojan that can be used to steal information and receive commands from a remote attacker. According\nto Trend, the latest iterations of Xtreme Rat have Windows 8 compatibility, improved Chrome and\nFirefox password grabbing, and improved audio and desktop capture capabilities features.\n\nSnorre Fagerland, a senior virus researcher at Norman, said he examined a sample of the Trojan used\nto deploy the malware in that attack, and found that it included a rather telltale trait: It was\nsigned with a digital certificate that was spoofed to appear as though it had been digitally signed\nby Microsoft.\n\nThe faked digital certificate would not stand up to validation by Windows\u2014 or anyone who cared to\nverify it with the trusted root certificates shipped with Windows PCs. But it proved to be a\nconvenient marker for Fagerland, who\u2019s been scouring malware databases for other samples that used\nthe same phony certificate ever since. So far, he\u2019s mapped out an expanding network of malware and\ncontrol servers that have been used in dozens of targeted email attacks (see graphic below).\n\n\u201cThese malwares are set up to use the same framework, talk to same control servers, and have same\nspoofed digital certificate,\u201d Fagerland said in an interview with KrebsOnSecurity. \u201cIn my view, they\nare same attackers.\u201d\n\nFagerland found that the oldest of the malicious files bearing the forged Microsoft certificate were\ncreated back in October 2011, and that the Arabic language email lures used in tandem with those\nsamples highlighted Palestinian news issues. He observed that the attackers used dynamic DNS\nproviders to periodically shift the Internet addresses of their control networks, but that those\naddresses nearly always traced back to networks in Gaza assigned to a hosting provider in Ramallah\nin the West Bank.\n\nAfter about eight months of this activity, the focus of the malware operation pivoted to attacking\nIsraeli targets, Fagerland discovered. When that happened, the attackers shifted the location of\ntheir control servers to networks in the United States.\n\nUntil recently, much of the discussion about espionage attacks has centered around activity thought\nto emanate from state-sponsored hacking groups within China. But espionage campaigns such as this\none highlight activity from a growing movement of apparently independent hacker groups that may not\nenjoy state backing but which nevertheless can be effective at gathering useful intelligence and\nsurveillance.\n\nWhile Chinese espionage attackers use many of the same tactics and techniques (a heavy reliance on\ndynamic DNS providers and targeted, contextual email lures), these actors tend to use locally-made\nmalware and homegrown lures (although they\u2019ve shown a remarkable fondness for the freely available\nPoison Ivy RAT), Fagerland said.\n\n\u201cWhen it comes to the Middle East hackers, they have obviously expended less effort in making their\nown stuff, and tend to rely on off-the-shelf tools, such as Blackshades, XtremeRAT and Dark Comet,\u201d\nhe said. Indeed, researchers have documented numerous examples of these commercial tools being used\nin espionage attacks against activists in other countries of the region, most notably Syria.\n\nFagerland declined to speculate about who might be responsible for the attacks, suggesting only that\nit was \u201can entity with intelligence needs against both Israelis and Palestinians.\u201d\n\n\u201cBut I think it\u2019s almost unheard of in a cyberwar context that two parties involved in a conflict\nget spied on by the same entity,\u201d he said.\n\nFagerland noted that the attackers failed to scrub the metadata included in most of the email bait\nfiles. Those files, mostly booby-trapped Microsof Word documents, appear to have been created and\nsaved by handful of users, including \u201cHitham,\u201d \u201cTohan,\u201d Aert,\u201d and \u201cAyman.\u201d I spent a short while\nsearching hacker forums popular in the Middle East, and found several accounts matching those\nnicknames at a forum called Gaza-Hacker.net. The profiles of both Hitham (pictured below) and Aert\nsuggest they are young men from Algeria. Hitham\u2019s signature suggests he is a member of a group\ncalling itself the Gaza Hackers Team, which claimed responsibility for defacing Israeli government\nsites earlier this year with messages calling for \u201cDeath to Israel.\u201d\n\n", "polarity": 0.07253968253968253, "subjectivity": 0.33805555555555555, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/10/in-a-zero-day-world-its-active-attacks-that-matter/", "date": "2012-10-01T00:00:00.000Z", "author": "Brian Krebs", "title": "In a Zero-Day World, It\u2019s Active Attacks that Matter", "body": "The recent zero-day vulnerability in Internet Explorer caused many (present company included) to\nurge Internet users to consider surfing the Web with a different browser until Microsoft issued a\npatch. Microsoft did so last month, but not before experts who ought to have known better began\ndownplaying such advice, pointing out that other browser makers have more vulnerabilities and just\nas much exposure to zero-day flaws.\n\nThis post examines hard data that shows why such reasoning is more emotional than factual. Unlike\nGoogle Chrome and Mozilla Firefox users, IE users were exposed to active attacks against unpatched,\ncritical vulnerabilities for months at a time over the past year and a half.\n\nThe all-browsers-are-equally-exposed argument was most recently waged by Trend Micro\u2018s Rik Ferguson.\nFerguson charges that it\u2019s unfair and unrealistic to expect IE users to switch \u2014 however briefly \u2014\nto experiencing the Web with an alternative browser. After all, he says, the data show that other\nbrowsers are similarly dogged by flaws, and switching offers no additional security benefits. To\nquote Ferguson:\n\n\u201cAccording to  this blog post, in 2011 Google\u2019s Chrome had an all time high of 275 new\nvulnerabilities reported, the current peak of an upward trend since its day of release. Mozilla\nFirefox, while currently trending down from its 2009 high, still had a reported 97 vulnerabilities.\nMicrosoft\u2019s Internet Explorer has been trending gradually down for the past five years and 2011 saw\nonly 45 new vulnerabilities, less than any other browser except Apple\u2019s Safari, which also had 45.\nOf course raw numbers of vulnerabilities are almost meaningless unless we consider the respective\nseverity, but there again, of the \u2018big three\u2019 the statistics favour Internet Explorer. If zero-day\nvulnerabilities have to be taken into consideration too, they don\u2019t really do much to change the\nbalance, Google Chrome 6, Microsoft Internet Explorer 6 and Mozilla Firefox 4. Of course different\nsources offer completely different statistics, and simple vulnerability counts are no measure of\nrelative (in)security of browsers, particularly in isolation. However, it cannot be ignored that\nvulnerabilities exist in every browser.\u201d\n\nLooking closer, we find that this assessment does not hold water. For one thing, while Ferguson\nacknowledges that attempting to rate the relative security of similar software products by merely\ncomparing vulnerabilities is not very useful, he doesn\u2019t offer much more perspective. He focuses on\nunpatched, publicly-highlighted vulnerabilities, but he forgets to ask and answer a crucial\nquestion: How do browser makers rate in terms of unpatched vulnerabilities that are actively being\nexploited?\n\nPart of the problem here is that many security pundits rank vulnerabilities as \u201czero-day\u201d as long as\nthey are both publicly identified and unfixed. Whether there is evidence that anyone is actually\nattacking these vulnerabilities seems beside the point for this camp. But I would argue active\nexploitation is the most important qualifier of a true zero-day, and that the software flaws most\nworthy of worry and action by users are those that are plainly being exploited by attackers.\n\nTo that end, I looked back at the vulnerabilities fixed since January 2011 by Google, Microsoft and\nMozilla, with an eye toward identifying true zero-day flaws that were identified publicly as being\nexploited before the vendor issued a software patch. I also queried both Mozilla and Google to find\nout if I had missed anything in my research.\n\nAs Ferguson mentioned, all browser makers had examples over the past 19 months of working or proof-\nof-concept exploit code available for unpatched flaws in their products. However, both my own\ninvestigation and the public record show that of the three browsers, Internet Explorer was the only\none that had critical, unpatched vulnerabilities that were demonstrably exploited by attackers\nbefore patches were made available. According to Microsoft\u2019s own account, there were at least six\nzero-days actively exploited in the past 18 months in IE. All but one of them earned Microsoft\u2019s\nmost dire \u201ccritical\u201d rating, leaving IE users under zero-day attack for at least 152 days since the\nbeginning of 2011.\n\nIf we count just the critical zero-days, there were at least 89 non-overlapping days (about three\nmonths) between the beginning of 2011 and Sept. 2012 in which IE zero-day vulnerabilities were\nactively being exploited. That number is almost certainly conservative, because I could find no data\non the window of vulnerability for\u00a0CVE-2011-0094, a critical zero-day flaw fixed in\u00a0MS11-018 that\nMicrosoft said was being attacked prior to releasing a patch for it. This analysis also does not\ninclude\u00a0CVE-2011-1345, a vulnerability demonstrated at the Pwn2Pwn contest in 2011.\n\nFor that same time period, I couldn\u2019t find any evidence that malicious hackers had exploited\npublicly-disclosed vulnerabilities in Chrome or Firefox before those flaws were fixed. Nevertheless,\nI put the question to both companies. A Google spokesperson said that the company has never observed\na Chrome zero-day in the wild against any of its stable versions since it first released Chrome. The\ncompany noted that while there have been Flash zero-days \u2014 and that it ships Flash with Chrome, none\nof these Flash flaws have been unique to Chrome. What\u2019s more, Google said, most attacks on Flash\nexplicitly did not target Chrome because the attackers didn\u2019t have a sandbox bypass to pair with the\nFlash exploit.\n\nA Mozilla spokesperson said the last true zero-day that was used by attackers to install malware via\na vulnerability in Firefox came in October 2010, from miscreants who\u2019d stitched an exploit for an\nunpatched Firefox flaw into the Nobel Peace Prize Web site.\n\nMicrosoft and other major software vendors like to point out that a majority of the early attacks\nagainst true zero-day flaws are targeted and not widely disseminated. While that is sometimes the\ncase, the bigger the vulnerable software\u2019s install base, the greater the likelihood that the\nexploits for zero-day flaws in them will be loaded into automated exploit kits that are sold in the\nhacker underground. Microsoft was relatively quick to issue a fix for its most recent IE zero-day\n(although there is evidence that the company knew about the vulnerability long before its first\npublic advisory on it Sept. 17), the company\u2019s 42-day delay in patching CVE-2012-1889 earlier this\nsummer was enough for code used to exploit the flaw to be folded into the Blackhole exploit kit, by\nfar one of the most widely-used attack kits today.\n\nBelow is the data I used to arrive at the Internet Explorer vulnerability numbers above:\n\n==\n\nPatch Date: Sept. 21, 2012, MS12-063\n\nFlaw: CVE-2012-4969 (execCommand Use After Free, Critical)\n\nInitial identification: Sept. 14, 2012\n\nMinimum window of active attack: 8 days\n\n==\n\nPatch Date: July 10, 2012, MS12-043\n\nFlaw: CVE-2012-1889 (XML Core Services, Critical)\n\nInitial identification: May 30, 2012\n\nMinimum window of active attack: 42 days\n\n==\n\nPatch Date: June 12, 2012, MS12-037\n\nFlaw: CVE-2012-1875 (Same ID Property, Critical)\n\nInitial public identification: June 1, 2012\n\nMinimum window of active attack: 12 days\n\n==\n\nPatch Date: April 12, 2011, MS11-026\n\nFlaw: CVE-2011-0096 (MHTML Mime-formatted XSS, Important)\n\nInitial public identification: Jan 28, 2011\n\nMinimum window of active attack: 74 days\n\n==\n\nPatch Date: April 12, 2011, MS11-018\n\nFlaws: CVE-2011-0094 (Layouts memory handling, Critical)\n\nInitial public identification: N/A\n\nMinimum window of active attack: N/A\n\n==\n\nPatch Date: Feb. 8, 2011, MS11-003\n\nFlaw: CVE-2010-3971 (CSS Memory Corruption, Critical)\n\nInitial acknowledgment: Dec. 20, 2010.\n\nMinimum window of active attack: 51 days\n\n==\n\nI realize that browser choice is often a personal matter, and that people still get emotionally and\nhabitually attached to browsing the Web in a certain way. However, I hope the above information\nmakes clear that temporarily switching browsers to avoid real zero-days is a very sane and\nworthwhile approach to staying secure online. Although it is true that all software has\nvulnerabilities, the flaws we should truly be motivated to act on are those that are actively being\nexploited.\n\n", "polarity": 0.05253577796847026, "subjectivity": 0.44761036328344017, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/09/internet-explorer-users-please-read-this/", "date": "2012-09-18T00:00:00.000Z", "author": "Brian Krebs", "title": "Internet Explorer Users: Please Read This", "body": "Microsoft is urging Windows users who browse the Web with Internet Explorer to use a free tool\ncalled EMET to block attacks against a newly-discovered and unpatched critical security hole in IE\nversions 7, 8 and 9. But some experts say that advice falls short, and that users can better protect\nthemselves by surfing with an alternative browser until Microsoft issues a proper patch for the\nvulnerability.\n\nEMET, short for the Enhanced Mitigation Experience Toolkit, is a tool that can help Windows users\nbeef up the security of commonly used applications, whether they are made by a third-party vendor or\nby Microsoft. EMET allows users to force applications to use one or both of two key security\ndefenses built into Windows Vista and Windows 7 \u2014 Address Space Layout Randomization (ASLR) and Data\nExecution Prevention (DEP).\n\nPut very simply, DEP is designed to make it harder to exploit security vulnerabilities on Windows,\nand ASLR makes it more difficult for exploits and malware to find the specific places in a system\u2019s\nmemory that they need to do their dirty work.\n\nBefore I get into the how-tos on EMET, a few caveats. EMET is a great layer of security that Windows\nusers can and should use to enhance the security of applications. But EMET may not block the exploit\ncode now publicly available through the Metasploit framework. In fact, Tod Beardlsey, an engineering\nmanager with Rapid7, the security firm that manages Metasploit, told The Associated Press that EMET\ndoes not appear to be completely effective against this exploit.\n\nI asked Metasploit founder HD Moore what he thought was the best way to block this exploit, and he\npointed out that the exploit available through Metasploit requires the presence of Java on the host\nmachine in order to execute properly on IE 8/9 on Windows 7 and Vista systems (the exploit works\nfine without Java against IE7 on XP/Vista and IE8 on XP). Obviously, while the lack of Java on a\nWindows machine may not prevent other exploits against this flaw, it is a great first start. I have\nconsistently urged computer users of all stripes to uninstall Java if they have no specific use for\nit.\n\nUsing a non-IE browser such as Chrome, Firefox, Opera or Safari is a far safer approach, at least\nuntil Microsoft releases a proper patch for this flaw (note that Windows 8 and Internet Explorer 10\nare not affected by this vulnerability).\n\nIf you decide to stick with IE, I\u2019d encourage you to read closely the security advisory Microsoft\npublished last night. It describes a number of tweaks that users can make to ratchet up security\nsettings in IE, and details the process of setting up IE to use EMET.\n\nEMET can force individual applications to perform ASLR on every component they load, whether the\nprogram wants it or not. Please note that before you install EMET, you\u2019ll need to have Microsoft\u2019s\n.NET platform installed. And while it does technically work on Windows XP (Service Pack 3 only), XP\nusers cannot take advantage of mandatory ASLR and some of the other notable protections included in\nthis tool.\n\nTo proceed with EMET, download the program and install it. To wrap Internet Explorer in EMET\u2019s\nsettings, launch the program and click the \u201cConfigure Apps\u201d button in the bottom right corner of the\napplication window. Selecting the \u201cAdd\u201d button in the next box that brings up a program selection\nprompt; browse to C:\\Program Files\\Internet Explorer, and then add the \u201ciexplore.exe\u201d file. It\nshould be okay to accept all of the defaults that EMET adds for you.\n\nWhile you\u2019re at it, add the rest of your more commonly used, Internet-facing apps. But go slow with\nit, and avoid the temptation to make system-wide changes. Changing system defaults across the board\n\u2013 such as changing ASLR and DEP settings using the \u201cconfigure system\u201d tab \u2013 may cause stability and\nbootup problems. I\u2019ve been using it on a 64-bit Windows 7 system and phasing in some of my most-used\napplications on-by-one with the \u201cconfigure apps\u201d button just to make sure the added security doesn\u2019t\ncrash the programs (see screen shot below). So far, the only problem I\u2019ve run up against was Skype,\nwhich didn\u2019t seem to like being forced into using the six different protection mechanisms that EMET\nemploys by default when you manually add application: It simply would crash upon startup.\n\nJust keep a running list somewhere of the apps you have set to use EMET, and if you experience\nproblems or glitches with these programs going forward, you may be able to fix said bugginess simply\nby tweaking EMET a bit.\n\n", "polarity": 0.11186147186147186, "subjectivity": 0.4686940836940837, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/08/java-exploit-leveraged-two-flaws/", "date": "2012-08-29T00:00:00.000Z", "author": "Brian Krebs", "title": "Researchers: Java Zero-Day Leveraged Two Flaws", "body": "New analysis of a zero-day Java exploit that surfaced last week indicates that it takes advantage of\nnot one but two previously unknown vulnerabilities in the widely-used software. The latest figures\nsuggest that these vulnerabilities have exposed more than a billion users to attack.\n\nEsteban Guillardoy, a developer at the security firm Immunity Inc., said the underlying\nvulnerability has been around since July 28, 2011.\n\n\u201cThere are 2 different zero-day vulnerabilities used in this exploit,\u201d Guillardoy wrote in a lengthy\nanalysis of the exploit. \u201cThe beauty of this bug class is that it provides 100% reliability and is\nmulti-platform. Hence this will shortly become the penetration test\u00a0Swiss\u00a0knife for the next couple\nof years (as did its older brother CVE-2008-5353).\u201d\n\nONE BILLION USERS AT RISK?\n\nHow many systems are vulnerable? Oracle Corp., which maintains Java, claims that more than 3 billion\ndevices run Java. But how many of those systems run some version of Java 7 (all versions of Java 7\nare vulnerable; this flaw does not exist in Java 6 versions).\n\nTo get an idea, I asked Secunia, whose Personal Software Inspector program runs on millions of PCs.\nSecunia said that out of a random sampling of 10,000 PSI users, 34.2 percent had some version of\nJava 7 installed. In the same data set, 56.4 percent of users had an update of Java 6 installed.\nAssuming that Secunia\u2019s 10,000 user sample is representative of the larger population of computer\nusers, more than a billion devices could be vulnerable to attack via this exploit.\n\nEXPLOIT WORKS AGAINST OS X, LINUX\n\nNot long after news broke that miscreants were exploiting an unpatched security hole in Java to\nbreak into PCs, I began seeing tweets from non-Windows users urging people to switch to Mac OS X or\nLinux. Unfortunately, this latest Java exploit has been shown to work flawlessly to compromise\nbrowsers on all three operating systems.\n\nAccording to Rapid7, the Java exploit found being used in targeted attacks\u00a0(CVE-2012-4681) is now\navailable as a plug-in to Metasploit, a free software tool built to test the security of networks.\nRapid7 said the exploit has been successfully tested to work against nearly all browser\nconfigurations on Windows systems, and against Safari on OS X 10.7.4 and Mozilla Firefox on Ubuntu\nLinux 10.04.\n\nWHO BURNS THROUGH TWO-ZERO DAYS IN ONE SHOT?\n\nOn Monday, I interviewed the author of the BlackHole exploit kit, an extremely popular software\npackage sold in the underground that is designed to be stitched into hacked sites and use browser\nexploits to drop malware on visiting PCs. The BlackHole author said he intended to (and did, it\nappears) fold the exploit into his kit, but said he was surprised that someone would just leak such\na reliable exploit, which he said would fetch at least $100,000 if sold privately in the criminal\nunderground.\n\nBut lost in all of the coverage of this vulnerability is the growing body of evidence suggesting\nthis Java exploit was first wielded in targeted espionage attacks of the sort used to extract\ncorporate and government secrets. So who burns through two zero day flaws to execute a targeted\nattack? In all likelihood, an individual or group motivated by a non-materialistic ideology, or at\nleast a certainty that what will be gained is worth far more than the vulnerability itself.\n\nExperts at Silicon Valley-based AlienVault published an analysis that highlighted some interesting\ntext strings in the exploit (\u201cxiaomaolv\u201d and conglaiyebuqi\u201d) which suggest the initial attacks were\npaired with Chinese crimeware known as the Gondad Exploit Kit.\n\nOther curious markers in the exploit code indicate that the targeted attacks were carried out using\nInternet servers that have been connected with other targeted espionage attacks traced back to\nChinese threat actor groups. Among the control servers used in this latest attack was\n\u201cdomain.rm6.org,\u201d an Internet address that played a central role in the Nitro attacks of 2011, which\naccording to Symantec and other security firms was a series of Chinese-based espionage attacks\ndirected against at least 48 chemical and defense companies.\n\nUnfortunately, the miscreants involved in these targeted attacks have been finding success using the\nsame resources and tools well into 2010 and earlier. That\u2019s according to a presentation given in\n2010 by researchers exploit and malware researchers Val Smith and Anthony Lai, called \u201cBalancing the\nPwn Deficit\u201d (PDF).\n\nThe paper details the history and methods of Chinese hacking groups, and notes that the two strings\nfound in the most recent Java exploit are a favorite invocation for script variables that are re-\nused in various attack tools of Chinese origin. The terms \u201cxiaomaolv\u201d and conglaiyebuqi\u201d and several\nothers used, they found, come from lyrics from songs by the artist known as Jay Zhou.\n\n\u201cThe fact that there are embedded song lyrics, potentially tells us several things,\u201d they wrote.\n\u201cOne, it helps to confirm that this attack was created in the geographic region assumed. It is\nunusual for attackers from one country and language, to take lyrics from a popular song in another\ncountry and language and embed them in their attacks.\u201d\n\nPATCH AVAILABLE?\n\nAs I noted earlier this week, Oracle has moved Java to a patch cycle of every four months, and its\nnext security update is not scheduled until October. On Tuesday, I contacted Oracle to find out if\nthey intended to address this problem separately before then, but I have not yet received a\nresponse. Nor could I find any mention of this problem on any of the various Java blogs that Oracle\ninherited when it took control of Java from Sun a few years ago. In fact, most of those Java blogs\nseem to have gone missing.\n\nIn the meantime, it\u2019s a good idea to either unplug Java from your browser or uninstall it from your\ncomputer completely.\n\nWindows users can find out if they have Java installed and which version by visiting java.com and\nclicking the \u201cDo I have Java? link. Mac users can use the Software Update feature to check for any\navailable Java updates.\n\nIf you primarily use Java because some Web site, or program you have on your system \u2014 such as\nOpenOffice\u00a0or\u00a0Freemind\u00a0\u2014 requires it, you can still dramatically reduce the risk from Java attacks\njust by disabling the plugin in your Web browser. In this case, I\u00a0 would suggest a two-browser\napproach. If you normally browse the Web with\u00a0Firefox, for example, consider disabling the Java\nplugin in Firefox, and then using an alternative browser (Chrome,\u00a0IE9,\u00a0Safari, etc.) with Java\nenabled to browse only the site that requires it.\n\nFor browser-specific instructions on disabling Java, click here. If you want to test whether you\u2019ve\nsuccessfully disabled Java, check out Rapid7\u2019s page, isjavaexploitable.com.\n\n", "polarity": 0.10003607503607505, "subjectivity": 0.4599747474747473, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/05/facebook-takes-aim-at-cross-browser-lilyjade-worm/", "date": "2012-05-17T00:00:00.000Z", "author": "Brian Krebs", "title": "Facebook Takes Aim at Cross-Browser \u2018LilyJade\u2019 Worm", "body": "Facebook is attempting to nip in the bud a new social networking worm that spreads via an\napplication built to run seamlessly as a plugin across multiple browsers and operating systems. In\nan odd twist, the author of the program is doing little to hide his identity, and claims that his\n\u201cusers\u201d actually gain a security benefit from installing the software.\n\nAt issue is a program that the author calls \u201cLilyJade,\u201d a browser plugin that uses Crossrider, an\nemerging programming framework designed to simplify the process of writing plugins that will run on\nGoogle Chrome,\u00a0Internet Explorer, and Mozilla Firefox.\u00a0 The plugin spreads by posting a link to a\nvideo on a user\u2019s Facebook wall, and friends who follow the link are told they need to accept the\ninstallation of the plugin in order to view the video. Users who install LilyJade will have their\naccounts modified to periodically post links that help pimp the program.\n\nThe goal of LilyJade is to substitute code that specifies who should get paid when users click on\nads that run on top Internet properties, such as Facebook.com, Yahoo.com, Youtube.com, Bing.com,\nGoogle.com and MSN.com. In short, the plugin allows customers to swap in their own ads on virtually\nany site that users visit.\n\nI first read about LilyJade in an analysis published earlier this month by Russian security firm\nKaspersky Labs, and quickly recognized the background from the screenshot included in that writeup\nas belonging to user from hackforums.net. This is a relatively open online hacking community that is\noften derided by more elite and established underground forums because it has more than its share of\nadolescent, novice hackers (a.k.a. \u201cscript kiddies\u201d) who are eager to break onto the scene, impress\npeers, and make money.\n\nIt turns out that the Hackforums user who is selling this plugin is doing so openly using his real\nname. Phoenix, Ariz. based hacker Dru Mundorff sells the LilyJade plugin for $1,000 to fellow\nHackforums members. Mundorff, 29, says he isn\u2019t worried about the legalities of his offering; he\u2019s\neven had his attorney sign off on the terms of service that each user is required to agree to before\ninstalling it.\n\n\u201cWe\u2019re not forcing any users to be bypassed, exploited or anything like that,\u201d Mundorff said in a\nphone interview.\u00a0 \u201cAt that point, if they do agree, it will allow us to make posts on their wall\nthrough our system.\u201d\n\nMundorff claims his software is actually a benefit to Facebook and the Internet community at large\nbecause it is designed to also remove infections from some of the more popular bot and Trojan\nprograms currently for sale on Hackforums, including Darkcomet, Cybergate, Blackshades and Andromeda\n(the latter being a competitor to the password-stealing ZeuS Trojan that hides behind Facebook\ncomments). Mundorff maintains that his plugin will result in a positive experience for the average\nFacebook user, although he acknowledges that customers who purchase LilyJade can modify at will the\nlink that \u201cusers\u201d are forced to spread, and may at any time swap in links to malware or exploit\nsites.\n\nDozens of customers who bought or trialed LilyJade posted statistics to Hackforums that purport to\nshow the plugin spreading virally to tens of thousands of users per day. According to Mundorff,\ncustomers who use the system can expect to make about 50 cents per hour for every 100 users who\ninstall the plugin.\n\nIt\u2019s impossible to verify those numbers or to say exactly how many Facebook users have installed\nthis browser plugin. But the plugin has apparently been successful enough to have caught the\nattention of Facebook\u2019s security team, which earlier this week sent Mundorff a cease-and-desist\norder demanding that he stop selling the program.\n\n\u201cPlugins such as LilyJade are configured to modify our [site] to inject ads and/or send spam through\nFacebook to the victim\u2019s friends via wall posts and chat messages,\u201d said Fred Wolens, public policy\nmanager at Facebook. \u201cThese alterations materially change people\u2019s Facebook experience and bypass\nFacebook\u2019s quality and security controls. Additionally, programs like LilyJade can make Facebook\nslower, cause user confusion and can obfuscate authenticate user content by displaying banner ads.\u201d\n\nIn a follow-up instant message conversation, Mundorff indicated that he has no intention of bowing\nto Facebook\u2019s demands.\n\n\u201cI pretty much told them to go fuck themselves cause we cant post on anyones [sic] walls with out\nthere [sic] permissions automated or not,\u201d Mundorff said. \u201cSo they can go to hell.\u201d\n\nIt remains to be seen who will prevail in this now-public battle (which according to Mundorff has\nsince caught the interest of the anarchic hacker collective Anonymous). I wanted to call attention\nto this topic because I believe LilyJade is likely the precursor to a stream of malicious cross-\nbrowser plugins that we can expect in the coming months and years.\n\nPlugin based threats seem to be especially pernicious because they work seamlessly across multiple\noperating systems and browsers, and are unlikely to be detected as malicious by antivirus software.\nWhat\u2019s more, writing malicious plugins for different browsers has never been easier: Kango, an up-\nand-coming cross-browser plugin development environment that\u2019s competing with Crossrider, supports\nplugins on even more browsers, including Opera and Safari.\n\nThe purpose of this post is not to cause alarm about legitimate development platforms like\nCrossrider and Kango, or even to dissuade people from using Facebook. It\u2019s also true that rogue\nbrowser plugins are hardly a new problem, and that they can spread just as easily on Facebook as on\nTwitter, Pinterest or any other community where millions of users gather to share information.\nRather, I wanted to remind readers that while modern malware can take many forms, it most often\nsucceeds because computer users agree to install it in one form or another.\n\nWhen in doubt, always consider Rule #1 from Krebs\u2019s 3 Basic Rules for Online Safety: \u201cIf you didn\u2019t\ngo looking for it, don\u2019t install it!\u201d Religiously observing this advice will likely keep you safe\nfrom a huge percentage of the malware threats out there today.\n\n", "polarity": 0.12452914001421465, "subjectivity": 0.4447728888027395, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2012/04/how-to-find-and-remove-mac-flashback-infections/", "date": "2012-04-12T00:00:00.000Z", "author": "Brian Krebs", "title": "How to Find and Remove Mac Flashback Infections", "body": "A number of readers responded to the story I published last week on the Flashback Trojan, a\ncontagion that was found to have infected more than 600,000 Mac OS X systems. Most people wanted to\nknow how they could detect whether their systems were infected with Flashback \u2014 and if so \u2014 how to\nremove the malware. This post covers both of those questions.\n\nSince the discovery last week of the Flashback Mac botnet, several security firms have released\ntools to help detect and clean up Flashback infections. Dr.Web, the Russian antivirus vendor that\nfirst sounded the alarm about the outbreak, has published a free online service that lets users tell\nwhether their systems have been seen phoning home to Flashback\u2019s control servers (those servers have\nsince been hijacked by researchers). The service requires users to enter their Mac\u2019s hardware unique\nuser ID (HW-UUID), because this is how the miscreants who were running the botnet kept track of\ntheir infections.\n\nF-Secure Corp., the Finnish security firm that worked with Dr.Web to more accurately gauge the true\nnumber of Flashback-infected Macs, has a Flashback Removal Tool available for download from its Web\nsite.\n\nWhere is Apple\u2019s response in all of this, you ask? Apple says it is developing software that will\ndetect and remove Flashback. Inexplicably, it has not yet released this tool, nor has it added\ndetection for it to the XProtect antivirus tool built into OS X. The company\u2019s advisory on this\nthreat is predictably sparse, and focuses instead on urging users to apply a recent update for Java.\nFlashback attacks a well-known Java flaw, but it\u2019s worth noting that Apple released the Java patch\nonly after Flashback had begun infecting hundreds of thousands of Macs.\n\nUpdate, 8:22 p.m. ET: Apple just released a new version of Java that includes a Flashback remover.\nJava for OS X Lion 2012-003 delivers Java SE 6 version 1.6.0_31 and supersedes all previous versions\nof Java for OS X Lion. It includes no new security fixes, but it adopts a novel approach to the\ndebate over whether to temporarily disable or remove Java: \u201cIt\u00a0configures the Java web plug-in to\ndisable the automatic execution of Java applets. Users may re-enable automatic execution of Java\napplets using the Java Preferences application.\u201d If the Java web plug-in detects that no applets\nhave been run for at least 35 days, it will again disable Java applets.\n\nOriginal post:\n\nIn its advisory, Apple said it \u201cis working with ISPs worldwide to disable the command and control\nnetwork\u201d that criminals were using to direct the activities of the Flashback botnet. But Apple\u2019s\nactions speak much louder than words. Forbes\u2019 Andy Greenberg published a fascinating piece on\nWednesday showing that when it comes to working with the security community, Apple is still a bit\nlike a spoiled toddler who hasn\u2019t yet learned to play nice with other children in the sandbox.\n\nOn the issue of security in general, Apple appears to still have its head firmly planted in the\nsand: F-Secure notes that Apple still has not shipped an update that fixes this Java flaw on OS X\n10.5 (or earlier), even though 16 percent of all all Macs still run this OS.\n\nWhile Apple stopped bundling Java by default in OS X 10.7 (Lion), it offers instructions for\ndownloading and installing the Oracle-developed software framework when users access webpages that\nuse it. If you have Java but no longer need it, get rid of it. If you need Java on your Mac only for\na specific application (such as OpenOffice), you can unplug it from the browser by disabling its\nplugin. In Safari, this can be done by clicking Preferences, and then the Security tab (uncheck\n\u201cEnable Java\u201d). In Google Chrome, open Preferences, and then type \u201cJava\u201d in the search box. Scroll\ndown to the Plug-ins section, and click the link that says \u201cDisable individual plug-ins.\u201d If you\nhave Java installed, you should see a \u201cdisable\u201d link underneath its listing. In Mozilla Firefox for\nMac, click Tools, Add-ons, and disable the Java plugin(s).\n\nBroken record alert: If you don\u2019t need Java, remove it from your system, whether you are a Mac or\nWindows user. If you need further convincing of my reasons for this recommendation, I\u2019d encourage\nyou to browse through some of my past Java-related posts.\n\n", "polarity": 0.10085514233241501, "subjectivity": 0.47078741965105597, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/11/attemped-malvertising-on-krebsonsecurity-com/", "date": "2011-11-29T00:00:00.000Z", "author": "Brian Krebs", "title": "Attempted Malvertising on KrebsOnSecurity.com", "body": "Members of an exclusive underground hacker forum recently sought to plant malware on\nKrebsOnSecurity.com, by paying to run tainted advertisements through the site\u2019s advertising network\n\u2014 Federated Media. The attack was unsuccessful thanks to a variety of safeguards, but it highlights\nthe challenges that many organizations face in combating the growing scourge of \u201cmalvertising.\u201d\n\nLast week, I listed the various ways this blog and its author has been \u201chonored\u201d over the past few\nyears by the cybercrime community, but I neglected to mention one recent incident: On May 27, 2011,\nseveral hackers who belong to a closely guarded English-language criminal forum called Darkode.com\nsought to fraudulently place a rogue ad on KrebsOnSecurity.com. The ad was made to appear as though\nit was advertising BitDefender antivirus software. Instead, it was designed to load a malicious\ndomain: sophakevans. co. cc, a site that has been associated with pushing fake antivirus or\n\u201cscareware.\u201d\n\nThe miscreants agreed to pay at least $272 for up to 10,000 impressions of the ad to be run on my\nsite. Fortunately, I have the opportunity to review ads that come through Federated\u2019s system. What\u2019s\nmore, Federated blocked the ad before it was even tagged for approval.\n\nI learned about this little stunt roughly at the same time it was being planned; Much to the\nconstant annoyance of the site administrators, I secretly had gained access to Darkode and was able\nto take this screen shot of the discussion. The incident came just a few weeks after I Tweeted\nevidence of my presence on Darkode by posting screenshots of the forum. The main administrator of\nDarkode, a hacker who uses the nickname \u201cMafi,\u201d didn\u2019t appreciate that, and promised he and his\nfriends had something fun planned for me. I guess this was it. Interestingly, Mafi also is admin at\nmalwareview.com and is the developer of the Crimepack exploit kit.\n\nThe Darkode forum launched sometime in 2008, and according to past and current members was used\nprimarily as a support forum for the \u201cButterfly Bot,\u201d a prolific bot program that was sold in the\nunderground for several years by its creator, a hacker who used the name \u201cIserdo.\u201d At some point,\nIserdo sold the forum to other miscreants, and began running support for customers of his Butterfly\nBot program via a Google Group called simply \u201cBf-Support\u201d.\n\nIn July 2010, the 23-year-old Iserdo was arrested by authorities in Slovenia on suspicion of running\nthe infamous \u201cMariposa\u201d botnet. According to the Mariposa Working Group \u2014 a partnership between the\nFBI and private security firms \u2014 Iserdo sold thousands of Butterfly kits for prices ranging from\n$500 to $2,000. The buyers of these kits didn\u2019t need to know much about coding or hacking; the kits\nallowed even unskilled hackers to create relatively sophisticated botnets.\n\nAs evidenced by a recent front page story by USA Today\u2019s Byron Acohido, malicious content embedded\nin online ads, or \u201cmalvertising,\u201d is a long-standing problem that has recently taken a sharp turn\nfor the worse: The story points to a recent analysis which documented a peak of 14,694 occurrences\nof malvertisements in May of this year, up from 1,533 in May 2010.\n\nMany security-conscious readers have chosen to block ads altogether with browser add-ons like\nAdblock. Wholesale blocking ads can be effective in stopping malvertisements, but this approach also\nhas the perverse effect of blocking a primary source of revenue for many sites (including this one).\nI have limited Federated Media to serving a very small slice of the ads on KrebsOnSecurity.com, and\nI am choosy about those that I let in. Add-ons like Noscript for Firefox allow users to be far more\nselective in which ads/scripts to allow and block.\n\nIn addition, many malvertisements rely on scripts that redirect browsers to sites that host exploit\nkits, software packages that probe the visitor\u2019s browser for unpatched security flaws in popular\nplugins like Adobe Reader, Adobe Flash Player, Java, QuickTime and WinZip. Keeping these third-party\napps up-to-date with the latest security fixes is a great way to fortify your browser against drive-\nbys. If you need help remembering to patch these programs, consider using a free program like\nSecunia\u2019s Personal Software Inspector or FileHippo\u2019s Update Checker.\n\n", "polarity": 0.10604978354978355, "subjectivity": 0.4555151515151515, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/09/rent-a-bot-networks-tied-to-tdss-botnet/", "date": "2011-09-06T00:00:00.000Z", "author": "Brian Krebs", "title": "Rent-a-Bot Networks Tied to TDSS Botnet", "body": "Criminals who operate large groupings of hacked PCs tend to be a secretive lot, and jealously guard\ntheir assets against hijacking by other crooks. But one of the world\u2019s largest and most\nsophisticated botnets is openly renting its infected PCs to any and all comers, and has even created\na Firefox add-on to assist customers.\n\nThe TDSS botnet is the most sophisticated threat today, according to experts at Russian security\nfirm Kaspersky Lab. First launched in 2008, TDSS is now in its fourth major version (also known as\nTDL-4). The malware uses a \u201crootkit\u201d to install itself deep within infected PCs, ensuring that it\nloads before the Microsoft Windows operating system starts. TDSS also removes approximately 20\nmalicious programs from host PCs, preventing systems from communicating with other bot families.\n\nIn an exhaustive analysis of TDSS published in June, Kaspersky researchers Sergey Golovanov and Igor\nSoumenkov wrote that among the many components installed by TDSS is a file called \u201csocks.dll,\u201d which\nallows infected PCs to be used by others to surf the Web anonymously.\n\n\u201cHaving control over such a large number of computers with this function, the cybercriminals have\nstarted offering anonymous Internet access as a service, at a cost of roughly $100 per month,\u201d the\nresearchers wrote. \u201cFor the sake of convenience, the cybercriminals have also developed a Firefox\nadd-on that makes it easy to toggle between proxy servers within the browser.\u201d\n\nThe storefront for this massive botnet is awmproxy.net, which advertises \u201cthe fastest anonymous\nproxies.\u201d According to Golovanov, when socks.dll is installed on a TDSS-infected computer, it\nnotifies awmproxy.net that a new proxy is available for rent. Soon after that notification is\ncompleted, the infected PC starts to accept approximately 10 proxy\u00a0requests each minute, he said.\n\n\u201cFor us it was\u00a0enough\u00a0to see that\u00a0this additional\u00a0proxy\u00a0module for\u00a0tdl4 was installed directly on\nencrypted partition and runs thru\u00a0rootkit functionality,\u201d Golovanov told KrebsOnSecurity. \u201cSo we\nbelieve\u00a0that\u00a0awmproxy has direct connection to\u00a0tdl4 developer but how\u00a0they are\u00a0working together we\ndon\u2019t know.\u201d The curators of AWMproxy did not respond to requests for comment.\n\nThe service\u2019s proxies are priced according to exclusivity and length of use. Regular browser proxies\nrange from $3 per day to $25 monthly. Proxies that can be used to anonymize all of the Internet\ntraffic on a customer\u2019s PC cost between $65 and $500 a month. For $160 a week, customers can rent\nexclusive access to 100 TDSS-infected systems at once. Interestingly, AWMproxy says it accepts\npayment via PayPal, MasterCard, and Visa.\n\nAwmproxy.net currently advertises more than 24,000 proxies for rent. The number of available proxies\nvaries greatly from day to day, even within a single 24-hour period. That\u2019s because the TDSS-\ninfected systems aren\u2019t always turned on: Their legitimate, oblivious owners sometimes turn their\nPCs off at night and on weekends.\n\nThis is explained in AWMproxy\u2019s FAQ:\n\nThe renting of hacked PCs for anonymous surfing is only one of the many ways the TDSS authors\nmonetize their botnet. In a blog post published today, Golovanov discusses how TDSS is being used\nfor mining Bitcoins, an electronic currency.\n\nOther researchers have been exploring the activities of a new TDL-4 variant that uses infected PCs\nfor a massive click fraud operation. Joseph Mlodzianowski, a malware researcher who blogs at\nsub0day.com, found that machines infected with this new version periodically download \u201ccampaign\u201d\nfiles, listings of Web sites that botted systems are instructed to visit, apparently to generate ad\nrevenue for the targeted sites.\n\n\u201cWhat I think they\u2019re doing is renting to these sites the ability to have people visit them so they\ncan get paid for display ads,\u201d Mlodzianowski said. \u201cA campaign file is a list of about 15 sites. The\n[bots] don\u2019t hit just one page, they crawl through and visit two to three pages on each site, so it\nlooks like a real user is doing that. All of this happens so that it is invisible to the user.\u201d\n\nIt\u2019s not clear yet whether the fraudsters running the TDSS botnet operate a similar public\nstorefront for click fraud clients. But it\u2019s remarkable that those responsible for TDSS feel so\ninvulnerable that they are comfortable advertising their work in such a public fashion.\n\nUpdate, Sept. 9, 9:28 a.m. ET: Check out the follow-up post to this article, Who\u2019s Behind the TDSS\nBotnet?, which follows a trail of digital clues that lead back to an individual who appears to be\nclosely tied to this criminal operation.\n\n", "polarity": 0.11941191249226966, "subjectivity": 0.46554145259502405, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/05/blocking-javascript-in-the-browser/", "date": "2011-05-25T00:00:00.000Z", "author": "Brian Krebs", "title": "Blocking JavaScript in the Browser", "body": "Most Web sites use JavaScript, a powerful scripting language that helps make sites interactive.\nUnfortunately, a huge percentage of Web-based attacks use JavaScript tricks to foist malicious\nsoftware and exploits onto site visitors. To protect yourself, it is critically important to have an\neasy method of selecting which sites should be allowed to run JavaScript in the browser.\n\nIt is true that selectively allowing JavaScript on known, \u201csafe\u201d sites won\u2019t block all malicious\nscripting attacks: Even legitimate sites sometimes end up running malicious code when scammers\nfigure out ways to sneak tainted, bogus ads into the major online ad networks. But disallowing\nJavaScript by default and selectively enabling it for specific sites remains a much safer option\nthan letting all sites run JavaScript unrestricted all the time.\n\nFirefox has many extensions and add-ons that make surfing the Web a safer experience. One extension\nthat I have found indispensable is NoScript. This extension lets the user decide which sites should\nbe allowed to run JavaScript, including Flash Player content. Users can choose to allow specific\nexceptions either permanently or for a single browsing session.\n\nThe NoScript extension makes it easy to place or remove these restrictions on a site-by-site basis,\nbut a novice user may need some practice to get the hang of doing this smoothly. For instance, it\u2019s\nnot uncommon when you\u2019re shopping online to come across a site that won\u2019t let you submit data\nwithout fully allowing JavaScript. Then, when you enable scripting so that you can submit your\naddress and payment information, the page often will reload and clear all of the form data you\u2019ve\nalready supplied, forcing you to start over. Also, many sites host content from multiple third-party\nsites, and users who prefer to selectively enable scripts may find it challenging to discover which\nscripts need to be enabled for the site to work properly.\n\nChrome also includes similar script- and Flash blocking functionality that seems designed to\nminimize some of these challenges by providing fewer options. If you tell Chrome to block JavaScript\non all sites by default, when you browse to a site that uses JavaScript, the upper right corner of\nthe browser displays a box with a red \u201cX\u201d through it. If you click that and select \u201cAlways allow\nJavaScript on [site name]\u201d it will permanently enable JavaScript for that site, but it doesn\u2019t give\nyou the option to block third-party JavaScript content on the site as Noscript does. In my testing,\nI had to manually refresh the page before Chrome allowed scripting on a site that I\u2019d just\nwhitelisted.\n\nTo restrict scripting in Chrome, click the wrench icon in the upper right corner of the browser.\nUnder \u201cOptions,\u201d select \u201cUnder the Hood.\u201d Click the \u201cContent Settings\u201d button at the top. Under\nJavaScript, select the button: \u201cDo not allow any site to run JavaScript\u201d.\n\nInternet Explorer 9, which Microsoft released earlier this year, is by far the fastest and most\nadvanced version of IE (it rivals Chrome in the speed with which it loads Web pages). IE9 also\nincludes new security features, such as enhanced memory protection and Microsoft\u2019s SmartScreen\nApplication Reputation engine, designed to alert users when they try to download files from\nlocations on the Web with an unknown or dodgy history.\n\nBut I found it somewhat difficult to believe that this new version of IE still doesn\u2019t give the user\nmuch choice in handling JavaScript. In IE9, you can select among JavaScript on, off, or prompting\nyou to load JavaScript. Turning JavaScript off isn\u2019t much of an option, but leaving it completely\nopen is unsafe. Choosing the \u201cPrompt\u201d option does nothing but serve incessant pop-up prompts to\nallow or disallow scripts (see the video below).\n\nI like Chrome\u2019s simplicity and speed, but I prefer Firefox because it offers the most options for\ndealing with JavaScript. But, whichever browser you use, be aware that running JavaScript can be the\npoint of entry for intrusive and infectious malware. Use caution before deciding to allow it on any\nsite that you visit.\n\n", "polarity": 0.19322486225895316, "subjectivity": 0.48851829988193624, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/05/advanced-persistent-tweets-zero-day-in-140-characters/", "date": "2011-05-03T00:00:00.000Z", "author": "Brian Krebs", "title": "Advanced Persistent Tweets: Zero-Day in 140 Characters", "body": "The unceasing barrage of targeted email attacks that leverage zero-day software flaws to steal\nsensitive information from businesses and the U.S. government often are described as being ultra-\nsophisticated, almost ninja-like in stealth and anonymity. But according to expert analysis of\nseveral recent zero-day attacks \u2013 including the much publicized break-in at security giant RSA \u2014 the\nChinese developers of those attack tools left clues aplenty about their identities and locations,\nwith one apparent contender even Tweeting about having newly discovered a vulnerability days in\nadvance of its use in the wild.\n\nZero-day threats are attacks which exploit security vulnerabilities that a software vendor learns\nabout at the same time as the general public\u00a0 does; \u00a0\u00a0The vendor has \u201czero days\u201d to fix the flaw\nbefore it gets exploited. RSA and others have labeled recent zero-day attacks as the epitome of the\nso-called \u201cadvanced persistent threat\u201d (APT), a controversial term describing the daily onslaught of\ndigital assaults launched by attackers who are considered highly-skilled, determined and possessed\nof a long-term perspective on their mission. Because these attacks often result in the theft of\nsensitive and proprietary information from the government and private industry, the details usually\nare shrouded in secrecy when law enforcement and national security investigators swoop in.\n\nOpen source information available about the tools used in recent attacks labeled APT indicates that\nsome of the actors involved are doing little to cover their tracks: Not only are they potentially\nidentifiable, they don\u2019t seem particularly concerned about suffering any consequences from their\nactions.\n\nBragging rights may play a part in the attackers\u2019\u00a0 lack of duplicity. On Apr. 11, 2011, security\nexperts began publishing information about a new zero-day attack that exploited a previously unknown\nvulnerability in Adobe\u2018s Flash Player software, a browser plug-in installed in 96 percent of the\nworld\u2019s Microsoft Windows PCs .\u00a0 The exploit code was hidden inside a Microsoft Word document titled\n\u201cDisentangling Industrial Policy and Competition Policy.doc,\u201d and reportedly was emailed to an\nunknown number of U.S. government employees and contractors.\n\nFour days earlier, on Apr. 7, an individual on Twitter calling himself \u201cYuange\u201d and adopting the\nhumble motto \u201cNo. 1 hacker in China top hacker in the world,\u201d tweeted a small snippet of exploit\ncode, apparently to signal that he had advance knowledge of the attack:\n\n\u201ccall [0x1111110+0x08].\u201d\n\nIt wasn\u2019t long before malware researchers were extracting that exact string from the innards of a\nFlash exploit that was landing in email inboxes around the globe.\n\nTweeting a key snippet of code hidden in a zero-day exploit in advance of its public release may\nseem like the hacker equivalent of Babe Ruth pointing to the cheap seats right before nailing a home\nrun. But investigators say the Chinese Internet address used to download the malicious files in the\nearly hours of the April Flash zero-day attacks \u2014 123.123.123.123 \u2014 was in some ways bolder than\nmost because that address\u00a0 would appear highly unusual and memorable to any reasonably vigilant\nnetwork administrator.\n\nThis wasn\u2019t the first time Yuange had bragged about advance knowledge of impending zero-day attacks.\nOn Oct. 27, 2010, he boasted of authoring a zero-day exploit targeting a previously unknown\nvulnerability in Mozilla\u2019s Firefox Web browser:\n\n\u201cWrote the firefox 0day. You may see \u201cfor(inx=0\u2019inx<0x8964;inx++). You should know why 0x8964 here.\u201d\n\nThat same day, experts discovered that the Web site for the Nobel Peace Prize was serving up\nmalicious software that exploited a new vulnerability in Firefox. An analysis of the attack code\npublished by a member of Mozilla\u2019s security team revealed the exact code snippet Yuange had tweeted.\n\nOn February 28, 2011, Yuange taunted on Twitter that new zero-day traps were being set:\n\n\u201cready? new flash 0day is on the way.\u201d\n\nOn Mar. 14, Adobe acknowledged that a new Flash flaw was being exploited via a booby-trapped Flash\ncomponent tucked inside of Microsoft Excel files. Three days after that, EMC\u2019s security division RSA\ndropped a bombshell: Secret files related to its widely used SecurID authentication tokens had been\nstolen in \u201can extremely sophisticated cyber attack.\u201d A follow-up blog post from RSA\u2019s Uri River two\nweeks later stated that the break-in was precipitated by the zero-day Adobe had warned about on Mar.\n14, and that the lure used in the attack on RSA was an Excel file named \u201c2011 Recruitment Plan.\u201d\n\nOn Mar. 16, just one day before RSA disclosed the breach, researchers at Milpitas, Calif. based\nsecurity firm FireEye released their analysis of an exploit that used the same zero-day Flash flaw.\nThe specific attack FireEye analyzed included a different lure than the one used against RSA: An\nExcel file titled \u201cEnvironmental Scan Matrix of Risk and Security Organizations.\u201d When FireEye\ninvestigators dug deeper into the Excel file, they found metadata indicating the file had last been\nsaved\u00a0 by a user named \u201cLinxder.\u201d\n\n\u201cWho is this linxder?\u201d FireEye\u2019s Atif Mushtaq asked in a Mar. 16 posting to the company\u2019s blog. \u201cMy\ncolleague Darien pointed me to few links on google that tells us that a guy named \u2018linxder\u2019 is a\nknown chinese threat actor. This guy is an old-school hacker that has a fairly expansive social\nnetwork. If one searches linxder\u2019s baidu profile, we can see that he talks a ton about weaponizing\nflash containers in other file formats, which is exactly what happens in this attack.\u201d\n\nThe Linxder profile linked in FireEye\u2019s write-up has since been wiped clean of more than two years\nworth of blog posts, but Google\u2019s cache still contains some of his older blog entries from 2009,\nincluding one that indicates Linxder and Yuange were acquaintances.\n\nWILL THE REAL YUANGE PLEASE COME FORWARD?\n\nThe Yuange1975 character on Twitter may be very well be a composite of several different\nindividuals, said Andre M. DiMino, a cybersecurity expert and former director of Shadowserver.org, a\ngroup that tracks cybercrime activity.\n\n\u201cAt first, there were a lot of people really intrigued by this guy,\u201d DiMino said. \u201cBut it looks\npretty likely that there are a group of folks who are tweeting to this account.\u201d\n\nYuange\u2019s Twitter profile lists a blog account on Chinese Internet provider Baidu.com by the same\nname, but the Yuange at that blog appears to be an old school hacker from Chinese Internet security\nfirm NSFocus who claims to have had nothing to do with the RSA exploit. He\u00a0 also complains that the\n\u201cYuange1975\u201d on Twitter is impersonating him.\n\nNeither the Twitter Yuange nor the Baidu Yuange responded to requests for interviews. Frank Ip, vice\npresident of North America operations for NSFocus, said the Baidu Yuange is a man named Yuan\nRenguang, one of 12 co-founders of NSFocus, and that Renguang left the company in 2005 to start his\nown data loss prevention firm. Ip said Renguang was being impersonated, and that he is quite widely\nrespected in China.\n\n\u201cNot only is this [Twitter] impersonator using his name, but he stole [Renguang\u2019s] picture,\u201d Ip\nsaid, adding that the real Yuange doesn\u2019t speak English and has never published anything in English,\nwheres the Twitter Yuange tweets only in English.\n\nEarlier this month, Reuters ran a story based on secret U.S. State Department diplomatic cables\nreleased by Wikileaks. The piece chronicled the theft of terabytes of data from U.S. firms and the\ngovernment over the past several years, and attributed the attacks to specialized electronic\nespionage units within the Chinese People\u2019s Liberation Army (PLA). But that piece didn\u2019t address the\nlegions of civilian hackers who conduct the same classes of attacks for patriotic reasons, for\nbragging rights, or simply to earn money.\n\nScott Henderson, a military analyst at the U.S. Army\u2019s Foreign Military Studies Office in Ft.\nLeavenworth, Kans., wrote extensively about this phenomenon in his eBook titled \u201cThe Dark Visitor\u201d\n(Henderson co-authors a blog on this subject). Henderson said it may be that the RSA attack was\nlaunched by members of what\u2019s known as the Red Hacker Alliance, a Chinese nationalist hacker network\nmade up of many independent Web sites directly linked to one another, in which individual sites\neducate their members on computer attack and intrusion techniques.  Henderson said the Red Hacker\nAlliance is characterized by its members launching coordinated attacks against foreign governments\nand entities to protect actual and perceived injustices done to their nation, but that monetary\nmotivations increasingly are becoming as important as patriotic passion.\n\n\u201cIt\u2019s interesting because so many of these guys are doing this stuff out in the open, and you have\nto ask why, and what\u2019s the risk-to-reward ratio for these guys, and does [the Chinese government]\nuse them as a political hammer or as a quasi-intelligence gathering network that is tacitly approved\nby Beijing, and I think you\u2019d have to say \u2018yes\u2019 to all of those,\u201d Henderson said in a phone\ninterview. \u201cI don\u2019t think there has been enough pressure on Beijing to change that, because these\nguys are very much out in the open and talking about what they\u2019re doing, and in some cases almost\ncrowd-sourcing their work.\u201d\n\nHenderson said the most damaging common aspect of all the attacks is that the assailants never seem\nto quit. \u201cWe hear about these really sophisticated attacks these guys are doing, but really it\nalways boils down to social engineering,\u201d Henderson said. \u201cThey send out enough emails to enough\nrecipients at Company X that someone eventually clicks on these things and suddenly the attacker\ngets\u00a0 access to the target\u2019s system. There are so many of these groups and this activity is going on\nso continuously that the challenge is trying get a handle on what exactly we should be looking at. I\nalways wonder, if this is the stuff we\u2019re seeing, where are the really good guys, the ones you don\u2019t\nsee? If the successful attacks are so blatant and open, and these guys probably aren\u2019t the cr\u00e8me de\nla cr\u00e8me, where are the really good guys?\u201d\n\nThis is the first in a series of planned stories on the RSA attack and the menace from advanced\npersistent threats.\n\n", "polarity": 0.0972134217516383, "subjectivity": 0.4024035165117969, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/05/scammers-swap-google-images-for-malware/", "date": "2011-05-06T00:00:00.000Z", "author": "Brian Krebs", "title": "Scammers Swap Google Images for Malware", "body": "A picture may be worth a thousand words, but  a single tainted digital image may be worth thousands\nof dollars for computer crooks who are using weaknesses in Google\u2019s Image Search to foist malicious\nsoftware on unsuspecting surfers.\n\nFor several weeks, some readers have complained that clicking on Google Images search results\ndirected them to Web pages that pushed rogue anti-virus scareware via misleading security alerts and\nwarnings. On Wednesday, the SANS Internet Storm Center posted a blog entry saying they, too, were\nreceiving reports of Google Image searches leading to fake anti-virus sites. According to SANS, the\nattackers have compromised an unknown number of sites with malicious scripts that create Web pages\nfilled with the top search terms from Google Trends. The malicious scripts also fetch images from\nthird-party sites and include them in the junk pages alongside the relevant search terms, so that\nthe automatically generated Web page contains legitimate-looking content.\n\nGoogle\u2019s Image Search bots eventually will index this bogus content. If users are searching for\nwords or phrases that rank high in the current top search terms, it is likely that thumbnails from\nthese malicious pages will be displayed beside other legitimate results.\n\nAs SANS handler Bojan Zdrnja explains, the exploit happens when a user clicks on one of these\ntainted thumbnails. \u201cThis is where the \u2018vulnerability\u2019 is,\u201d Zdrnja wrote. \u201cThe user\u2019s browser will\nautomatically send a request to the bad page which runs the attacker\u2019s script. This script checks\nthe request\u2019s referrer field and if it contains Google (meaning this was a click on the results page\nin Google), the script displays a small JavaScript script\u2026[that] causes the browser to be redirected\nto another site that is serving FakeAV. Google is doing a relatively good job removing (or at least\nmarking) links leading to malware in normal searches, however, Google\u2019s image search seem to be\nplagued with malicious links.\u201d\n\nDenis Sinegubko, a Russian malware researcher who has been studying the fake anti-virus campaigns,\ncalled this tactic \u201cthe most efficient black hat trick ever,\u201d and said it is exceedingly easy to set\nup. He said he\u2019s received access logs from the owners of several hacked sites, and has used the data\nto estimate the traffic Google sends to these bogus image search pages. Sinegubko reckons that there\nare more than 5,000 hacked sites, and that the average site has been injected with about 1,000 of\nthese bogus pages. The average page receives a visitor from Google approximately every 10 days, he\nsaid, which means Google is referring about a half million visits to fake anti-virus sites every\nday, or about 15 million visits each month.\n\nFor example, one of the hacked sites Sinegubko said he saw access logs for was in Croatia; It had a\nGoogle page rank of zero prior to being compromised with the phony image search scripts. The logs\nshowed that the site had been hacked on Mar. 18, 2011, and that Google began indexing the tainted\nimage pages the next day. \u201cDuring the next 5 weeks it has indexed 27,200+ doorway pages on this\nsite,\u201d he wrote in a blog post on his findings. \u201cDuring the same 5 weeks Google Image search has\nsent 140,000+ visitors to this small site.\u201d\n\nSinegubko is developing an add-on for Firefox that can flag malicious Google Image search results by\nplacing a red box around images that appear to link to hostile sites; Images with a pale pink box\naround them are hot-linked and may also be malicious, Sinegubko said. I tested the add-on (which is\nnot ready for public release) searching for the cover art for the album \u201cKaputt\u201d by the Canadian\nband Destroyer. As you can see from the image above, most of the images returned link to sites\npushing fake anti-virus.\n\nSinegubko said his analysis of the malicious scripts that do all of the work indicates that the\nspammy pages are built when Google\u2019s bots try to index them. Each bogus page targets specific\nkeywords, in this case, the word \u201cdestroyer.\u201d The script then requests Google\u2019s autocomplete results\nfor the word \u201cdestroyer,\u201d and it is given 10 suggested keywords. The script then includes those new\nkeywords in the spammy pages as links to \u201crelated searches\u201d (for example, links to \u201c23.php?q\n=destroyer-droid-start-wars\u201d, and the results in the image above, \u201c23.php?q=destroyer-kaputt-album-\ncover\u201d. \u201cWhen Googlebot follows those links, the script generates spammy pages for them, at the same\ntime it inserts links to new suggested searches,\u201d the researcher said in an instant message chat\nwith KrebsOnSecurity.  \u201cThis way Google suggests new keywords for spammy pages and automatically\nbuilds spam and indexes it.\u201d\n\nSeveral security experts have suggested specific steps that Google could take to cut down on\nscammers using Google Images, such as bumping sites that hot-link images to a much lower ranking in\nthe search results for a given term.\n\nGoogle spokesman Jay Nancarrow said the company was aware of the attacks and that it is making\n\u201cactive efforts to improve both the quality of the results and malware detection,\u201d but declined to\nbe more specific. \u201cWe\u2019re improving, as are the people trying to put users at risk, and in the\ninterests of those users it\u2019s best if we don\u2019t reveal everything that we\u2019re doing about this.\u201d\n\nRogue anti-virus scams almost invariably rely on malicious scripts that can be blocked by the\nexcellent Noscript add-on for Firefox, which lets you decide which sites should be allowed to run\nscripts. If you happen to stumble upon one of these fake anti-virus security alerts, stay calm and\navoid the urge to click your way out of it. Instead, simply hit Ctrl-Alt-Delete, select the browser\nprocess you are using (firefox.exe, iexplore.exe, etc.) and shut it down.\n\n", "polarity": 0.01052353278380675, "subjectivity": 0.4125503567969321, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://krebsonsecurity.com/2011/05/security-group-claims-to-have-subverted-google-chromes-sandbox/", "date": "2011-05-09T00:00:00.000Z", "author": "Brian Krebs", "title": "Security Group Claims to Have Subverted Google Chrome\u2019s Sandbox", "body": "A French security research firm boasted today that it has discovered a two-step process for\ndefeating Google Chrome\u2018s sandbox, the security technology designed to protect the browser from\nbeing compromised by previously unknown security flaws. Experts say the discovery, if true, marks\nthe first time hackers have figured out a way around the vaunted security layer, and almost\ncertainly will encourage attackers to devise similar methods of subverting this technology in Chrome\nand other widely used software.\n\nIn an advisory released today, VUPEN Security said: \u201cWe are (un)happy to announce that we have\nofficial Pwnd Google Chrome and its sandbox.\u201d The post includes a video showing the exploitation of\nwhat VUPEN claims is a previously undocumented security hole in Chrome v.11.0.696.65 on Microsoft\nWindows 7 SP1 (x64).\n\n\u201cWhile Chrome has one of the most secure sandboxes and has always survived the Pwn2Own contest\nduring the last three years, we have now uncovered a reliable way to execute arbitrary code on any\ninstallation of Chrome despite its sandbox, ASLR and DEP,\u201d the advisory notes. ASLR and DEP are two\nof the key security defenses built into Windows Vista and Windows 7\n\nGoogle spokesman Jay Nancarrow said the company was unable to verify VUPEN\u2019s claims, because VUPEN\nhadn\u2019t shared any information about their findings. \u201cShould any modifications become necessary,\nusers  will be automatically updated to the latest version of Chrome,\u201d Nancarrow wrote in an email\nto KrebsOnSecurity.\n\nChaouki Bekar, VUPEN\u2019s CEO and head of research, confirmed that the company had no plans to share\nany details about their findings with Google, nor was it aware of any steps users could take to\nmitigate the threat from this attack.\n\n\u201cNo, we did not alert Google as we only share our vulnerability research with our Government\ncustomers for defensive and offensive security,\u201d Bekar wrote in response to an emailed request for\ncomment. \u201cUnfortunately, we are not aware of any mitigation to protect against these\nvulnerabilities.\u201d\n\nJeremiah Grossman, a Web application security expert and chief technology officer for the security\nconsultancy WhiteHat Security, called the news \u201cquite serious.\u201d\n\n\u201cWe have governments competing for 0days, and we\u2019re not even sure who the  buyers are, maybe the US\ngovernment didn\u2019t get the 0day,\u201d Grossman said \u201cOne way or  the other, consumers are unprotected\nfrom an 0day we can\u2019t really  verify but probably exists. I think that\u2019s quite serious.\u201d\n\nBekar explained that the exploit they devised uses two distinct vulnerabilities: The  first one\nresults in a memory corruption and disclosure leading to the bypass of  ASLR/DEP and execution of\nthe first payload as low integrity level (inside the  sandbox). A second payload is then used to\nexploit another vulnerability which  allows the bypass of the sandbox and execution of the final\npayload with Medium  integrity level (outside the sandbox).\n\nGrossman said that even if VUPEN\u2019s claims can be proven correct, he would still consider Chrome more\nsecure by default than either Firefox or Internet Explorer. \u201cAs VUPEN\u2019s research indicates, to\nexploit Chrome you have to have two vulnerabilities, not just one. With Firefox and IE, you just\nneed one vulnerability in those browsers to compromise the machine.\u201d Also, he said, Chrome applies\nsecurity updates automatically, and aut0-patches third-party plug-ins like Flash, often days before\nAdobe releases the stand-alone patch for Flash.\n\nAccording to the latest statistics from W3Schools.com, Chrome\u2019s market share has been growing\nsteadily over the past year, and now comprises about 25 percent; Internet Explorer\u2019s market share\nhas dropped below that of Chrome (24.3 percent), while Firefox commands nearly 43 percent market\nshare. (At KrebsOnSecurity.com, the browser share breakdown is roughly 23 percent Chrome, 26 percent\nIE, and 39 percent Firefox).\n\nIt seems odd that VUPEN would brag about a flaw that it plans to sell to government clients for\noffensive purposes, since doing so might tip off potential targets to be extra cautious. This also\nraises the question of how long it will be before hackers figure out a way to defeat the sandbox\ntechnology surrounding Adobe\u2019s Reader X, which the company said was based in part on Google\u2019s\nresearch. Currently, there are several zero-day vulnerabilities that Adobe has put off patching in\nReader X, out of an abundance of confidence in the ability of its sandbox technology to thwart these\nattacks.\n\n", "polarity": 0.0574156746031746, "subjectivity": 0.48702050264550256, "_cls": "CyberSpiders.articlemodel.Article"}]