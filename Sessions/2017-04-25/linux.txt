[{"uri": "https://krebsonsecurity.com/2010/12/carders-cc-linux-exploit-org-and-exploit-db-org-hacked/", "date": "2010-12-25T00:00:00.000Z", "author": "Brian Krebs", "title": "Carders.cc, Backtrack-linux.org and Exploit-db.org Hacked", "body": "Carders.cc, a German security forum that specializes in trading stolen credit cards and other\npurloined data, has been hacked by security vigilantes for the second time this year. Also waking up\nto \u201cyou\u2019ve been owned\u201d calling cards this Christmas are exploit database exploit-db.org and\nbacktrack-linux.org, the home of Backtrack, an open source \u201clive CD\u201d distribution of Linux.\n\nThe hacks were detailed in the second edition of \u201cOwned and Exposed,\u201d an ezine whose first edition\nin May included the internal database and thousands of stolen credit card numbers and passwords from\nCarders.cc. The Christmas version of the ezine doesn\u2019t feature credit card numbers, but it does list\nthe user names and hashed passwords of the carders.cc forum administrators. The carders.cc forum\nitself appears to be down at the moment.\n\nMati Aharoni, the main administrator for both exploit-db.org and backtrack-linux.org, confirmed that\nthe hacks against his sites were legitimate. Shortly after my e-mail, Aharoni replied with a link to\na short statement, noting that a hacking team called inj3ct0r initially took credit for the attack,\nonly to find itself also targeted and shamed in this edition of Owned and Exposed.\n\nTo his credit, Aharoni posted a link to the 2nd edition of Owned and Exposed.\n\n\u201cThe irony of posting your zine in our papers section is not lost on us,\u201d Aharoni wrote.\n\nUpdate 10:40 p.m. ET: An earlier version of this blog post incorrectly identified one of the hacked\ndomains as linux-exploit.org. The blog post above has been corrected. My apologies for the\nconfusion.\n\n", "polarity": 0.05644603934077619, "subjectivity": 0.33055555555555555, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/tcp-flaw-in-linux-extends-to-80-percent-of-android-devices/119897/", "date": "2016-08-15T00:00:00.000Z", "author": "Michael Mimoso", "title": "TCP Flaw in Linux Extends to 80 Percent of Android Devices", "body": "Eight out of 10 Android devices are affected by a critical Linux vulnerability disclosed last week\nthat allows attackers to identify hosts communicating over the Transmission Control Protocol (TCP)\nand either terminate connections or attack traffic. \n\nThe flaw has been present in the TCP implementation in Linux systems since 2012 (version 3.6 of the\nkernel), and according to researchers at mobile security company Lookout, 80 percent of Android\ndevices\u2014going back to KitKat\u2014run the same version of the kernel. \n\nThe issue was publicly disclosed last week during the USENIX Security Symposium where researchers\nfrom the University of California Riverside and the U.S. Army Research Laboratory presented a paper\nentitled \u201cOff-Path TCP Exploits: Global Rate Limit Considered Dangerous.\u201d \n\nWhile an attacker would need to be able to identify both ends of a TCP connection before initiating\nan attack, successful exploits would not need that attacker to be in a man-in-the-middle position on\nthe network, the researchers said. \n\nLookout security researcher Andrew Blaich said that some other Android vulnerabilities such as\nStagefright, Quadrooter or other kernel and driver flaws that are being patched on a monthly may be\nmore severe, but this attack is practical and within reach of hackers. \n\n\u201cThis is about information disclosure and an attacker being able to infer where you\u2019re going, what\nyou\u2019re viewing and having the ability to inject code,\u201d Blaich said, adding that chaining this\nvulnerability with a WebKit or browser-related bug could allow for remote code execution. \u201cAll you\nneed is one of those and this is where this bug gets interesting.\u201d \n\nA patch has been pushed to the Linux kernel, but Lookout said that as of Friday, the latest\ndeveloper preview of Android Nougat still remains vulnerable, and the Android Open Source Project\nhas yet to receive the patch as well. Android updates are released monthly to carriers and handset\nmakers, and over-the-air security updates for Nexus devices are sent by Google the first of every\nmonth. \n\nThe Cal-Riverside and Army researchers said last week the problem is linked to the introduction of\nchallenge ACK responses and the imposition of a global rate limit on TCP control packets. \n\n\u201cAt a very high level, the vulnerability allows an attacker to create contention on a shared\nresource, i.e., the global rate limit counter on the target system by sending spoofed packets. The\nattacker can then subsequently observe the effect on the counter changes, measurable through probing\npackets,\u201d the researchers wrote. \u201cThrough extensive experimentation, we demonstrate that the attack\nis extremely effective and reliable. Given any two arbitrary hosts, it takes only 10 seconds to\nsuccessfully infer whether they are communicating. If there is a connection, subsequently, it takes\nalso only tens of seconds to infer the TCP sequence numbers used on the connection.\u201d \n\nBlaich cautioned that in some instances where connections must be long-lived such as video\nconferencing or large file-sharing, attackers could take advantage of those scenarios to exploit\nthis bug. \n\nLookout recommends that until a patch is ready, Android users should rely on encrypted\ncommunications, in particular, deploy a VPN. For rooted Android devices, Lookout recommends using\nthe sysctl tool to change the value for net.ipv4.tcp_challenge_ack_limit a large value such as\n999999999. Blaich said he expects a patch to be ready for the next monthly Android update, which is\nset for Sept. 1. \n\n", "polarity": 0.1072199546485261, "subjectivity": 0.4202573696145125, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/fairware-attacks-targeting-linux-servers/120254/", "date": "2016-08-31T00:00:00.000Z", "author": "Michael Mimoso", "title": "Fairware Attacks Targeting Linux Servers", "body": "Linux server admins are reporting attacks resulting in the disappearance of the server\u2019s web folder\nand websites being down indefinitely. \n\nPosts to the forums on the BleepingComputer website corroborate a number of such attacks, most\nlikely intrusions powered by brute-force attacks against SSH, according to one of the victims. In\neach instance, the web folder is deleted and a read_me file is left behind containing a link to a\nPastebin page hosting a\u00a0ransom note. The note demands two Bitcoin in exchange for the safe return of\nthe files. \n\nAdding some confusion and anxiety around these attacks is that the criminals are saying they\u2019ve\ninfected the Linux server with malware called Fairware, which they are calling ransomware. \n\nHowever, according to Lawrence Abrams of BleepingComputer, that may not necessarily be an accurate\ndepiction of what\u2019s happening. \n\n\u201cIf the attacker uploads a program/script to perform the \u2018attack\u2019 then it would be [ransomware].\nUnfortunately, our information is limited at this time,\u201d Abrams said. \u201cAll reports indicate that the\nservers are being hacked, but I have not been able to verify these reports yet.\u201d \n\nThe ransom note includes a Bitcoin address and gives victims two weeks to pay, otherwise, the note\nthreatens the files will be leaked. \n\n\u201cWe are the only ones in the world that can provide your files to you!\u201d the note reads. \u201cWhen your\nserver was hacked, the files were encrypted and sent to a server we control!\u201d \n\nThe note also provides an email address for \u201csupport,\u201d but demands that the victims not ask for\nverification that the criminals are in possession of the lost files. \n\n\u201cI am not sure what they are doing with the files at this time,\u201d Abrams said. \u201cSince they delete the\nfiles, if they are keeping them,\u00a0it makes more sense\u00a0for them to archive them and upload it to a\nserver rather that bother with encrypting them and then keeping track of individual keys.\u201d \n\nRather than traditional ransomware where vulnerabilities on the machine are exploited, or the victim\nis tricked into executing a malicious file, no such evidence has been found in these attacks. \n\nOne of the victims who posted to BleepingComputer said that most of their Linux server remained\nintact, including database files. The read_me file, the post says, was left in the root folder. The\ndeletion of the files and the refusal to answer verification requests are unusual behaviors for\ncriminals who push ransomware. \n\n\u201cIt definitely could be [a scam], but it would be a poor business decision for the attackers,\u201d\nAbrams said. \u201cWhen ransomware attackers don\u2019t deliver on ransom payments, word gets out, and no one\nelse pays in the future.\u201d \n\nRegardless, victims who see a purported ransomware attack and the threat to publish stolen data\nonline might be nervous and inclined to pay the ransom. Fairware isn\u2019t the first to make such a\nthreat; last November, the Chimera ransomware also made threats to publish data online that was\nencrypted by the malware. Chimera, however, was limited to attacks against German companies. It,\nhowever, was indeed crypto-ransomware and behaved like many other ransomware families by encrypting\nlocally stored data and data on shared network drives. \n\n\u201cThough all ransomware victims should avoid paying a ransom, if you do plan on paying, it is\nsuggested you verify they have your files first,\u201d Abrams said. \n\n", "polarity": 0.04398749398749398, "subjectivity": 0.45318662818662825, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/hackers-take-down-reader-safari-edge-ubuntu-linux-at-pwn2own-2017/124362/", "date": "2017-03-16T00:00:00.000Z", "author": "Chris Brook", "title": "Hackers Take Down Reader, Safari, Edge, Ubuntu Linux at Pwn2Own 2017", "body": "Hackers took down Adobe Reader, Apple Safari, Microsoft Edge, and Ubuntu Linux over the course of 11\nhours on Wednesday, the first day of Pwn2Own, the annual hacking competition held in tandem with the\nCanSecWest conference in Vancouver. \n\nContestants with the Chinese security firm Qihoo 360 were the first to strike; exploiting a heap\noverflow in the way Reader parsed JPEG200, an image compression standard and coding system used by\nsoftware. Hackers combined the heap overflow with a Windows kernel information leak and a remote\ncode execution vulnerability in the Windows kernel to earn $50,000. \n\nBoom! @mj0011sec uses 1 #Adobe and 2 #Windows bugs to take down #Reader & earn $50K. Next up is\n#Safari. https://t.co/IeNyzBUStE #P2O \n\n\u2014 Zero Day Initiative (@thezdi) March 15, 2017 \n\n \n\nThe attack would be the first of two to be carried out against Reader on the day. Later in the\nafternoon hackers working with Tencent Security used an info leak bug and a use-after-free bug to\nachieve code execution. They followed that up with\u00a0leveraging another use-after-free in the kernel\nto gain SYSTEM-level privileges, earning $25K. \n\nAnother group of hackers working with Tencent, Team Ether, broke Microsoft Edge earlier in the day.\nThe bug they found earned the group the largest payout of the day, $80,000 and was tied to an\narbitrary write in Chakra core and a logic bug that escaped the sandbox. Chakra is the JavaScript\nengine that powers Edge and other Windows apps written in HTML, CSS, and JS. \n\n \n\nHackers with another China-based group, Chaitin Security Research Lab, took down both Ubuntu Linux\nand Apple\u2019s Safari browser, in two attempts on Wednesday. \n\nWe win it! https://t.co/bRUCcRulBr \n\n\u2014 Chaitin Tech (@ChaitinTech) March 15, 2017 \n\n \n\nThe Linux bug was a heap out-of-bound access bug in the Linux kernel which earned the group $15,000. \n\nThe Safari bug was a little more involved. The group had to chain together six different bugs,\nincluding an information disclosure in Safari, four different type confusion bugs in the browser,\nand a use-after-free in WindowServer \u2013 a component that manages requests between OS X apps and the\nmachine\u2019s graphics hardware \u2013 to carry it out. The group was able to achieve root access on macOS\nthrough the exploit and earn $35,000. \n\nWednesday\u2019s other Safari hack, like Chaitin\u2019s, involved chaining together multiple Apple bugs. \n\nTwo German hackers, Samuel Gro\u00df and Niklas Baumstark, Capture the Flag players from the Karlsruhe\nInstitute of Technology, got partial credit for hacking the browser early on the first day. The two\nwere able to broadcast a special message across a MacBook Pro\u2019s Touch Bar by chaining together five\nbugs, a use-after-free in Safari, three logic bugs and a null pointer dereference, something which\nallowed them to elevate to root in macOS.\u00a0Apple has apparently already fixed the use-after-free in a\nbeta version of Safari, hence the partial credit. \n\nFirst team to pwn Safari on macOS with escalation to root at #pwn2own! Was a ton of fun to pull that\noff with @5aelo pic.twitter.com/4G8KNXuult \n\n\u2014 Niklas Baumstark (@_niklasb) March 15, 2017 \n\n \n\nTwo groups withdrew attacks planned against Windows and Edge on Wednesday, mounting speculation over\nwhether Microsoft\u2019s delayed Patch Tuesday updates\u00a0broke attack vectors the entrants were planning on\nusing. \n\nUnlike last year, when it was partially broken, it appears Google Chrome will emerge from this\nyear\u2019s Pwn2Own unscathed. There are currently no exploits scheduled against the browser for the\ncompetition\u2019s second day today. Tencent\u2019s Team Sniper attempted to break the browser with a SYSTEM-\nlevel escalation hack yesterday but couldn\u2019t complete their exploit chain in time. \n\nGiven the large\u00a0number of entrants \u2013 17 \u2013 the competition\u2019s sponsors, Trend Micro and Zero Day\nInitiative, are splitting Pwn2Own\u2019s second day into two tracks. Attacks against Mozilla\u2019s Firefox,\nboth Microsoft Windows and Edge, Apple\u2019s macOS and Safari, and Adobe Flash are on tap for Thursday. \n\n", "polarity": 0.07572590011614402, "subjectivity": 0.31097560975609756, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/impact-of-new-linux-kernel-dccp-vulnerability-limited/123863/", "date": "2017-02-23T00:00:00.000Z", "author": "Michael Mimoso", "title": "Impact of New Linux Kernel DCCP Vulnerability Limited", "body": "Linux providers are busy developing and pushing out patches for a vulnerability in an obscure\nnetworking protocol that could allow a local attacker to crash the kernel and elevate privileges. \n\nGoogle software engineer Andrey Konovalov privately disclosed the vulnerability on Monday. The use-\nafter-free bug could expose Linux servers to memory-based attacks that would allow an attacker to\ngain root-level privileges and execute code. Konovalov said he will give admins a few days to patch\nbefore publishing his proof-of-concept exploit. \n\nThe upstream Linux kernel has been patched, while Red Hat has patched Red Hat Enterprise Linux 7 and\n6 so far; Red Hat said that any server with SE Linux enabled is also protected. SUSE Linux says only\nits older SUSE Linux Enterprise Server 10 is affected and customers with extended support contracts\nshould contact SUSE. Current versions of SUSE Linux Enterprise Server 12 (SP 1 and 2) and 11 are not\naffected. \n\nThe vulnerability, CVE-2017-6074, affects only the IPv6 implementation of the Linux kernel\u2019s\nDatagram Congestion Control Protocol (DCCP). DCCP is used to manage network traffic congestion on\nthe application layer; it works on both IPv4 and IPv6. No known exploits are in the wild for this\nbug. In fact, DCCP is largely turned off in most Linux implementations; Red Hat said it combed\nyears-worth of customer support cases and was unable to find any reports of customers having turned\nit on. \n\n\u201cI can\u2019t say no one is using it,\u201d said Red Hat security manager Chris Robinson. \u201cBut I imagine of\nthe people using it, the population is small. We went through thousands of cases and found no calls\nor bug reports around it. \n\n\u201cThe issue is of concern, but fortunately if you have some good security hygiene and protections in\nplace such as SE Linux, a lot of folks should already be mitigating this bug,\u201d Robinson said. \n\nAdditional vendor patches are due soon, and in addition to turning on SE Linux, admins could create\na blacklist rule for the DCCP module. Since an attacker would already have to be on the server to\nexploit this vulnerability, remote attacks are ruled out. Red Hat said an attack would require that\na vulnerable server and client would be running on the same system in order to reference the\nsk_shared_info struct after it has been freed. \n\n\u201cAn exploit would only work if IPv6 is enabled with DCCP,\u201d Robinson said. \u201cAn attacker would be able\nto insert malicious code and crash the kernel or allow them to overwrite memory. If they were smart,\nthey could execute other things.\u201d \n\nGiven the available mitigations and limitations to the attack, the severity of this vulnerability\npales in comparison to recent Linux issues such as the Dirty Cow vulnerability. Dirty Cow was\npresent in the Linux code for close to a decade, and it too gave local attackers root privileges by\nexploiting a race condition that allowed write-access to read-only memory. The bug was found in the\ncopy-on-write feature in Linux and allowed local attackers to modify on-disk binaries and bypass\npermission mechanisms that would prevent such modifications. \n\n\u201cThis is definitely not as bad as Dirty Cow,\u201d Robinson said. \u201cCustomers need to patch it and check\nif they\u2019re protected. Dirty Cow\u2019s probability of something bad happening was much higher. [DCCP] is\nan esoteric package with not a lot of adoption or development over the years. This played to our\nadvantage; most folks had it off and were not using it.\u201d \n\n", "polarity": -0.018761904761904768, "subjectivity": 0.40459523809523823, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/dino-dai-zovi-on-securing-linux-in-modern-workloads/123665/", "date": "2017-02-09T00:00:00.000Z", "author": "Chris Brook", "title": "Dino Dai Zovi on Securing Linux in Modern Workloads", "body": "Security researcher Dino Dai Zovi talks to Mike Mimoso about a new company he cofounded called\nCapsule8\u2014which left stealth mode on Wednesday\u2014that will help IT organizations counter threats to\nLinux infrastructures in the enterprise and cloud. Dai Zovi also talks about the 10-year anniversary\nof his Pwn2Own win, and looks back at the No More Free Bugs movement in context of today\u2019s bug\nbounties. \n\n \n\nDownload:\u00a0Dino_Dai_Zovi_on_Securing_Linux_in_Modern_Workloads.mp3 \n\nMusic by Chris Gonsalves \n\nPhoto via Black Hat Briefings & Trainings \n\n", "polarity": 0.1313852813852814, "subjectivity": 0.3696969696969697, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/old-linux-kernel-code-execution-bug-patched/122336/", "date": "2016-12-08T00:00:00.000Z", "author": "Michael Mimoso", "title": "Old Linux Kernel Code Execution Bug Patched", "body": "A critical, local code-execution vulnerability in the Linux kernel was patched more than a week ago,\ncontinuing a run of\u00a0serious security issues in the operating system, most of which have been hiding\nin the code for years. \n\nDetails on the vulnerability were published Tuesday by researcher Philip Pettersson, who said the\nvulnerable code was introduced in August 2011. A patch was pushed to the mainline Linux kernel Dec.\n2, four days after it was privately disclosed. Pettersson has developed a proof-of-concept exploit\nspecifically for Ubuntu distributions, but told Threatpost his attack could be ported to other\ndistros with some changes. \n\nThe vulnerability is a race condition that was discovered in the af_packet implementation in the\nLinux kernel, and Pettersson said that a local attacker could exploit the bug to gain kernel code\nexecution from unprivileged processes. He said the bug cannot be exploited remotely. \n\nPettersson\u2019s attack opens a rootshell on Ubuntu 16.04; the exploit bypasses Supervisor Mode\nExecution Prevention (SMEP) and Supervisor Mode Access Prevention (SMAP) protections at the kernel\nlevel. Both are features of Intel chips and hamper code execution in the kernel from user mode.\nPettersson said the bypass happens because his attack does not use any userland memory in the\nexploitation process. \n\nPettersson provided a technical description of CVE-2016-8655 in an advisory published this week on\nthe oss-sec mailing list: \n\n\u201cTo create AF_PACKET sockets you need CAP_NET_RAW in your network namespace, which can be acquired\nby unprivileged processes on systems where unprivileged namespaces are enabled (Ubuntu, Fedora,\netc). It can be triggered from within containers to compromise the host kernel. On Android,\nprocesses with gid=3004/AID_NET_RAW are able to create AF_PACKET sockets (mediaserver) and can\ntrigger the bug.\u201d \n\n\u201cBasically it\u2019s a bait-and-switch, the bug allows you to trick the kernel into thinking it is\nworking with one kind of object, while you actually switched it to another kind of object before it\ncould react,\u201d Pettersson told Threatpost. \n\nThe vulnerability not only enables local code execution, but can also allow an attacker to crash a\nserver. \n\n\u201cDepends a bit on the scenario, but the most common attack scenarios for local privilege escalations\non servers are: 1) A web server gets compromised through a buggy webapp (usually PHP), the attacker\ngets low-privilege access and escalates his privilege to root using an exploit like this. 2) An\nattacker steals someone\u2019s login credentials for a server with many users, such as shared hosting\nserver or a big university server,\u201d Pettersson said. \u201cThe attacker then escalates to root and gets\naccess to everyone\u2019s accounts and can pivot further into the network.\u201d \n\nPettersson\u2019s bug is latest critical Linux issue to be addressed in the past few months. In mid-\nNovember, a vulnerability in the cryptsetup utility used to set up encrypted filesystems on\ndifferent Linux distributions was found and patched. The cryptsetup vulnerability paved the way for\nhackers to retrieve a root rescue shell and gain access to data on the hard drive and either modify\nit or move it off the machine. \n\nWeeks prior, the Dirty Cow vulnerability surfaced, a nine-year-old vulnerability in the Linux copy-\non-write feature that also enabled root privileges for a local attacker. The kernel was patched Oct.\n19 and in major distributions shortly thereafter. Google, however, got around to pushing a fix to\nhandset makers in November and pushed a patch this week to its Nexus and Pixel handsets and to the\nAndroid Open Source Project. \n\nIn early October, a systemd vulnerability was disclosed; it allowed attackers with local access to\ncrash Linux distributions with just 48 characters of code. That flaw, researcher Andrew Ayer said,\nwas introduced two years ago into systemd 209. \n\n", "polarity": 0.03283730158730158, "subjectivity": 0.39166666666666666, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/cryptsetup-vulnerability-grants-root-shell-access-on-some-linux-systems/121963/", "date": "2016-11-15T00:00:00.000Z", "author": "Chris Brook", "title": "Cryptsetup Vulnerability Grants Root Shell Access on Some Linux Systems", "body": "A vulnerability in cryptsetup, a utility used to set up encrypted filesystems on Linux\ndistributions, could allow an attacker to retrieve a root rescue shell on some systems. From there,\nan attacker could have the ability to copy, modify, or destroy a hard disk, or use the network to\nexfiltrate data. \n\nCryptsetup, a utility used to setup disk encryption based on the dm-crypt kernel module, is usually\ndeployed in\u00a0Debian and Ubuntu. Researchers warned late last week that if anyone uses the tool to\nencrypt system partitions for the operating systems, they\u2019re likely vulnerable. \n\nTwo researchers, Hector Marco of the University of the West of Scotland and Ismael Ripoll, of the\nPolytechnic University of Valencia, in Spain, disclosed the vulnerability\u00a0on Friday at DeepSec, a\nsecurity conference held at the Imperial Riding School Renaissance Vienna Hotel in Austria. \n\nAccording to the researchers, the script with the vulnerability (CVE-2016-4484) is in the Debian\ncryptsetup package 2:1.7.2-3 and earlier. Systems that use Dracut, an infrastructure commonly\ndeployed on Fedora in lieu of initramfs \u2013 a simple RAM file system directory, are also vulnerable,\naccording to the researchers. The pair say additional\u00a0Linux distributions outside of Debian and\nUbuntu may be vulnerable, they just haven\u2019t tested them yet. \n\nThe problem stems from the incorrect handling of a password check when a partition is ciphered with\nLUKS, or Linux Unified Key Setup, a disk encryption specification that\u2019s standard for Linux. \n\nAssuming an attacker has access to the computer\u2019s console, when presented with the LUKS password\nprompt, they could exploit the vulnerability simply by pressing \u2018Enter\u2019 over and over again until a\nshell appears. The researchers say the exploit could take as few\u00a0as 70 seconds. \n\nAfter a user exceeds the maximum number of three password tries, the boot sequence continues\nnormally. Another script in the utility doesn\u2019t realize this, and drops a BusyBox shell. After\ncarrying out the exploit, the attacker could obtain a root initramfs, or rescue shell. \n\nSince the shell can be executed in the initrd, or initial ram disk, environment, it can lead to a\nhandful of scary outcomes, including elevation of privilege, information disclosure, or denial of\nservice. \n\nThe researchers warn that the vulnerability is especially dangerous in public situations. \n\n\u201cThis vulnerability is specially serious in environments like libraries, ATMs, airport machines,\nlabs, etc, where the whole boot process is protect (password in BIOS and GRUB) and we only have a\nkeyboard or/and a mouse,\u201d the vulnerability disclosure reads. \n\nAll an attacker would need in those instances \u2013 assuming the system is running Linux \u2013 would be\naccess to the keyboard or mouse, Marco and Ripoll say. Tourist information kiosks\u00a0or airport check\nin kiosks could be prime targets, the two write. \n\nWhile an attacker would have to have physical access to carry out the attack in most instances, the\ntwo warn that in some cloud environments, like\u00a0those deployed by Ubuntu, the vulnerability could be\nexploited without physical access. \n\n \n\nUsers can remedy the vulnerability by fixing the cryptroot script file \u2013 /scripts/local-\ntop/cryptroot \u2013 directly, suspending execution forever, according to the researchers. \n\nIt\u2019s unclear when a true fix will make its way to the Linux distributions. Neither Debian or Ubuntu\nimmediately returned a request for comment on the vulnerability Tuesday. \n\nMarco and Ripoll claim they reported the issue to Debian two weeks ago and while the distribution\nfixed it, the researchers claim they don\u2019t fully agree with the way it did it. \n\n\u201cThis is just one of the problems that the boot sequence has in GNU/Linux. It is too permissive on\nerrors, that is. There is the general idea that if the user has physical access to the computer,\nthen the user IS THE OWNER of the computer (this dates from the very beginning of computing). The\nIoT will dramatically change this assumption,\u201d Marco and Ripoll told Threatpost. \n\n\u201cWhen Windows detects an error\u2026 it just shows the blue screen\u2026 which is very bad if you are a\ndeveloper but it is the best solution for 99.9% of the users. Shall the system be developer/hacker\nfriendly, or user secure?\u201d \n\n", "polarity": -0.06150000000000001, "subjectivity": 0.43377976190476186, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/serious-dirty-cow-linux-vulnerability-under-attack/121448/", "date": "2016-10-21T00:00:00.000Z", "author": "Michael Mimoso", "title": "Serious Dirty Cow Linux Vulnerability Under Attack", "body": "A nine-year-old Linux vulnerability that affects most of the major distributions has been recently\nused in public attacks. The flaw, nicknamed Dirty Cow because it lives in the copy-on-write (COW)\nfeature in Linux, is worrisome because it can give a local attacker root privileges. \n\nWhile the Linux kernel was patched on Wednesday, the major distributions are preparing patches. Red\nHat, for example, told Threatpost that it has a temporary mitigation available through the kpatch\ndynamic kernel patching service that customers can receive through their support contact. \n\nDirty Cow is a privilege escalation vulnerability in copy-on-write, CVE-2016-5195. A race condition\nexists that allows local users to gain write-access to read-only memory and elevate their privileges\nto root. \n\nExploits were discovered recently by researcher Phil Oester, who published an informational website\non the bug that includes links to details on the flaw and a proof-of-concept exploit. Oester said\nthe bug has been in the kernel since version 2.6.22, released in 2007. \n\n\u201cThis flaw allows an attacker with a local system account to modify on-disk binaries, bypassing the\nstandard permission mechanisms that would prevent modification without an appropriate permission\nset,\u201d Oester said on his website. \n\nRed Hat Security Strategist Josh Bressers said the vulnerability is serious but since it is not\nremotely exploitable, it\u2019s less critical than Heartbleed and other Internet-wide bugs admins have\ndealt with in the last two-plus years. \n\n\u201cIt\u2019s not on-fire bad like some of the other bugs that have names,\u201d Bressers said. \u201cAn attacker has\nto have broken in already and then exercise the flaw to gain root. It\u2019s serious, but much less\nserious because you essentially need two exploits versus just one.\u201d \n\nCopy-on-write is a feature used in programming across platforms that manages resources in memory.\nMultiple processes may share that same page until a user needs to write to it, which is known as\nmarking the page dirty, Bressers said. \n\n\u201cThe problem comes down to the fact that there was a logic error in the Linux kernel that said you\ncould exercise a race condition so that before the kernel separates pages that are marked dirty, it\nwould let you write to the original page,\u201d Bressers said. \u201cAt the same time, another part of the\nprocess is writing to it. It allows you to change a file on the disk you shouldn\u2019t be able to\nchange.\u201d \n\nBressers said that attackers would also be limited in virtual machines and containers. For example,\nthey would not be able to escape a virtual machine and attack the host server. \n\n\u201cCurrent exploits don\u2019t work in containers given the way they work,\u201d Bressers said. \u201cIf it could be\nexploited in the container, the containment technology will keep you in the container. You need\nsomething else to get out. So it\u2019s clear, newer technology is useful as a mitigation in this case.\u201d \n\n", "polarity": -0.0480918608578183, "subjectivity": 0.3450016886187099, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/hack-crashes-linux-distros-with-48-characters-of-code/121052/", "date": "2016-10-03T00:00:00.000Z", "author": "Tom Spring", "title": "Hack Crashes Linux Distros with 48 Characters of Code", "body": "With just a mere 48 characters of code, Linux admin\u00a0and SSLMate founder Andrew Ayer has figured out\nhow to crash\u00a0major Linux distributions by locally exploiting a flaw in systemd. \n\nAyer said the following command, when run as any user, will crash systemd:\nNOTIFY_SOCKET=/run/systemd/notify systemd-notify \u201c\u201d \n\nSystemd is an essential part of the boot process for most Linux distributions. According to Ayer, in\na blog post titled \u201cHow to Crash Systemd in One Tweet,\u201d after running the command, the Linux\nprocesses identifier 1 (PID 1) is hung in the pause system call. This prevents a clean system reboot\nand results in system instability. \n\n\u201cAll of this can be caused by a command that\u2019s short enough to fit in a Tweet,\u201d Ayer writes. \n\nAyer said the flaw was introduced about two years ago in systemd 209. \u201cDespite the banality, the bug\nis serious, as it allows any local user to trivially perform a denial-of-service attack against a\ncritical system component,\u201d he wrote. \n\n\u201cThe above systemd-notify command sends a zero-length message to the world-accessible UNIX domain\nsocket located at /run/systemd/notify. PID 1 receives the message and fails an assertion that the\nmessage length is greater than zero\u201d creating the systemd failure, Ayer wrote. \n\nSince Ayer red-flagged the vulnerability, systemd has\u00a0patched the denial-of-service bug, according\nto a David Timothy Strauss, CTO and co-founder of Pantheon. Strauss, via a blog post critical of\nAyer, said the vulnerability is a \u201cminor security issue.\u201d \n\n\u201cNot only is the current security issue among the lowest risk classes by being local-only and\ndenial-of-service (versus information disclosure or privilege escalation), but most of Ayer\u2019s claims\nare either wrong or misleading,\u201d Strauss wrote. \n\nStrauss takes aim at Ayer\u2019s assertion that the attack code \u201ccrashes\u201d systemd, when in fact it makes\nit \u201cfeel generally unstable.\u201d Strauss says that Ayer is being subjective. \u201cThere are some services\nthat attempt to use systemd but will time out in 30 seconds (by default) if it is unavailable. These\nfacilities are degrading gracefully, which is exactly what should happen,\u201d he wrote. \n\nStrauss compares the flaw identified by Ayer as a needed Linux function. \u201cEngineering crumple zones\non cars isn\u2019t evidence that they handle poorly. Likewise, improving coredump handling for systemd\nisn\u2019t evidence that it crashes frequently,\u201d he wrote. \n\nIn further defense of systemd, Strauss wrote that Ayer is being overly critical of \u201cone of the most\npowerful tools we have to harden the front lines against the real attacks.\u201d \n\nStrauss wrote: \n\n\u201cMany of the services systemd helps to harden don\u2019t just have local attack vectors that might become\nremote ones. Many of them are network services, and they\u2019re not just a foot in the door for other\nattacks but the keepers of data attackers want.\u201d \n\nIn Ayer\u2019s latest blog post salvo in response Strauss, he fires back that Strauss \u201cvastly overstates\nthe value of these (systemd) features. \n\n\u201cThe best systemd can offer is whole application sandboxing. You can start a daemon as a non-root\nuser, in a restricted filesystem namespace, with mandatory access control,\u201d Ayer wrote. \u201cSince\nsandboxing a whole application cannot protect one part of the application from a compromise of a\ndifferent part, it is ineffective at securing benign-but-insecure software, which is the problem\nfaced on servers.\u201d \n\nDeveloper and author of the Linux library musl, Rich Felker, told Threatpost that the systemd bug\nfound by Ayer was less a serious vulnerability and more an alarm bell for a \u201cmonoculture\u201d\nsurrounding systemd. \n\n\u201cSystemd is not designed to be broken down into small parts that can safely fail and recover from\nboth a security point of view and a robustness standpoint,\u201d Felker said. \u201cYou\u2019ve got one big\nmonolithic process where if one thing breaks the whole thing goes down. That\u2019s the big design\nproblem Ayer is shedding light on. It\u2019s not a big security flaw, it\u2019s a system development design\nflaw.\u201d \n\nFelker said development of systemd, to the exclusion of alternatives Upstart, Runit and s6,\njeopardize a richer more diverse ecosystem of daemons from being developed that would make it harder\nfor hackers to penetrate. \n\nSince Ayer\u2019s original post, the Strauss-Ayer debate has heated up via blogs and Twitter attacks with\nlittle sign of relenting. \n\n", "polarity": 0.06358024691358026, "subjectivity": 0.4333774250440917, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/google-challenges-number-of-android-devices-affected-by-linux-flaw-1/115966/", "date": "2016-01-21T00:00:00.000Z", "author": "Michael Mimoso", "title": "Google Challenges Number of Android Devices Affected by Linux Flaw", "body": "Google is downplaying the scope of the critical Linux vulnerability patched this week, suggesting\nthat the number of affected Android devices has been exaggerated. \n\nThe Android OS is built upon the Linux kernel, but minus many of the libraries that are included in\nstandard Linux builds. Initially, startup Perception Point said that upwards of two-thirds of\nAndroid devices would be affected by the vulnerability. The flaw, introduced into the Linux source\ncode in 2012, could be abused by a local attacker to elevate privileges on a Linux server or Android\nphone via a malicious mobile application. \n\nOn its end, Google has patched the flaw in the Android code and on Wednesday released the fix to\nopen source and its partners. Google\u2019s Adrian Ludwig, lead engineer for Android security, said the\npatch would be required on all devices with a patch level of March 1, 2016 or greater. \n\nLudwig, however, took issue with Perception Point\u2019s estimates that as many as 66 percent of devices\nwere affected. \n\n\u201cWe believe that the number of Android devices affected is significantly smaller than initially\nreported,\u201d Ludwig said, adding that Perception Point did not privately disclose the vulnerability to\nGoogle or the Android security team as it did with the Linux security team. \n\nPerception Point cofounder and CEO Yevgeny Pats told Threatpost this week the vulnerability that it\nwas unknown whether the flaw was under attack. \n\nLudwig, meanwhile, said that while vulnerability affects Linux versions 3.8 and higher,\nsignificantly fewer versions of Android are affected. \n\n\u201cWe believe that no Nexus devices are vulnerable to exploitation by third party applications.\nFurther, devices with Android 5.0 and above are protected, as the Android SELinux policy prevents\nthird party applications from reaching the affected code,\u201d Ludwig said. \u201cAlso, many devices running\nAndroid 4.4 and earlier do not contain the vulnerable code introduced in Linux kernel 3.8, as those\nnewer kernel versions are not common on older Android devices.\u201d \n\nPerception Point provided Threatpost with a statement this morning: \n\n\u201cAs stated, the bug affects android versions with KitKat and higher and it doesn\u2019t matter if the\ndevice has SELinux enabled or not. SELinux only affects the exploitation potential and as stated in\nthe blog our research team is working on an exploitation for Android devices with SELinux enabled.\nThe results of that will be published in the next blogpost. Nexus with the newest version comes with\nthe keyring feature compiled in. So we are still standing behind the ~66% of all android devices are\naffected by the bug.\u201d \n\nAccording to the Android developers dashboard, 33.3 percent of devices are on the most recent\nversions of Android (Lollipop 5.0 and 5.1, and Marshmallow 6.0), while 36.1 percent of devices are\non Android 4.4 (KitKat) and 24.7 percent are running Jelly Bean (4.1, 4.2, 4.3). Duo Labs,\nmeanwhile, published a report this week that said most Android devices are woefully out of date and\nthat fail basic security hygiene such as enabling a passcode. The report said that one in 20 Android\ndevices are rooted (by comparison, Duo Labs said one in 250 iPhones are jailbroken), and that one in\n10 devices don\u2019t have a pre-boot passcode device encryption enabled. \n\nThe vulnerability, CVE-2016-0728, lives in the keyring facility built into the various flavors of\nLinux. The keyring encrypts and stores login information, encryption keys and certificates, and\nmakes them available to applications. In a report published by Perception Point, researchers said\nthe vulnerability is a\u00a0reference leak\u00a0that can be abused to ultimately execute code in the Linux\nkernel. \n\n\u201cUser space applications give [keyring] the option to manage the crypto keys,\u201d Pats said. \u201cThe user\ndoesn\u2019t have to manage keys; the OS does it for the application. Apps use it for security reasons.\nWhen they want to apps to work with crypto, they use this feature. The feature has kernel access;\nthe OS gives the userland app the ability to use this feature. The problem is that the code runs in\nthe kernel.\u201d \n\n", "polarity": 0.049791666666666665, "subjectivity": 0.4364583333333333, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/linux-mint-website-hacked-isos-replaced-with-backdoored-versions/116370/", "date": "2016-02-22T00:00:00.000Z", "author": "Chris Brook", "title": "Linux Mint Website Hacked, ISOs Replaced with Backdoored Versions", "body": "Attackers managed to hijack the website of the Linux Mint operating system to push a backdoored ISO\nimage of the software to users over the weekend. \n\nThe developers behind the software, one of, if not the most popular Linux distribution, are unsure\nwhat the hackers are aiming to achieve by the move but acknowledge that if there are more efforts to\nattack their project, they plan to get the authorities involved. \n\nClement Lefebvre, the creator of Linux Mint,\u00a0disclosed the incident in a blog post\u00a0early Saturday\nmorning and downplayed it by saying only one version, Linux Mint 17.3 Cinnamon, was compromised and\nonly users who downloaded it via the official site on Feb. 20 are believed to be affected. Users who\ndownloaded through torrents or a direct HTTP link are not affected Lefebvre said. \n\nRegardless, Lefebvre encourages\u00a0any user who suspects their version is tainted to verify their ISO\nagainst a handful of valid signatures\u00a0listed in the blog \u2013 and destroy any compromised versions. \n\nIf a user has already installed the ISO, Lefebvre advises users to take the computer offline, backup\ntheir data and either reinstall the OS or format the partition. \n\nLefebvre has been transparent about the breach since it was announced, further clarifying that\nattackers managed to breach Linux Mint\u2019s site in the first place via a WordPress vulnerability and\nfrom there they got a www-data shell. They were running the latest build of WordPress but a custom\ntheme and \u201clax file permissions for a few hours\u201d led to the hack, he wrote. \n\nSome of the hacked ISOs ultimately connect\u00a0to servers in Sofia, Bulgaria, but it\u2019s unclear exactly\nwhat the criminals\u2019 motivation is. \n\n\u2018We don\u2019t know their roles in this, but if we ask for an investigation, this is where it will\nstart,\u201d Lefebvre wrote. \n\nAccording to researchers at Kaspersky Lab who looked at some of the compromised ISO images, the\nmalware is a simple backdoor that\u2019s controlled through an unencrypted IRC connection.\u00a0It\u2019s capable\nof a few things: Running types of UDP and TCP flooding for DDoS attacks, downloading arbitrary files\nto the machine, and executing arbitrary commands. \n\nAccording to Stefan Ortloff, a member of Kaspersky Lab\u2019s Global Research and Analysis Team who wrote\nabout the malware in a post Monday on Securelist, while looking over the C&C channel he noticed \u201cthe\ncriminal sending several SMB-related commands like \u201csmbtree -N\u201d to the connected bots.\u201d \n\n\u201cApparently the attacker tries to access SMB/CIFS shares available in the local network of the\nvictims,\u201d Ortloff wrote. \n\nLefebvre confirmed in a subsequent blog post on Saturday that the site\u2019s forum database was also\ncompromised during the attack and as a result they\u2019re\u00a0urging anyone who has an account on\nforums.linuxmint.com \u2013 and any site where they used the same password \u2013 should change their\npasswords \n\nAdditional details\u00a0in that database that may have been stolen include: \n\nAccording to DistroWatch.com, which keeps track of Linux distributions by the number of page hits\nover a given period of time, Mint is far and away the most popular build, surpassing Debian, Ubuntu,\nand Fedora. \n\nLefebvre claims this is the first time Linux Mint has really experienced anything more serious than\na DDoS attack and that it\u2019s a new, but important experience. \n\n\u201cIt\u2019s also important we communicate about this attack because we\u2019re not talking about downtime or\ninconvenience here, this is a call to action,\u201d he wrote, \u201cWe need people who are affected by this,\nto understand that they are, so they don\u2019t get hurt or used going forward.\u201d \n\n", "polarity": 0.13665927568366595, "subjectivity": 0.5041468693907718, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/critical-glibc-vulnerability-puts-all-linux-machines-at-risk/116261/", "date": "2016-02-16T00:00:00.000Z", "author": "Michael Mimoso", "title": "Critical glibc Vulnerability Puts All Linux Machines at Risk", "body": "Glibc, the GNU C library at the core of last year\u2019s GHOST vulnerability, is vulnerable to another\ncritical flaw affecting nearly all Linux machines, as well as API web services and major web\nframeworks where the code runs. \n\nThe vulnerability, discovered independently by researchers at Google and Red Hat, has been patched. \n\nThe flaw, CVE-2015-7547, is a stack-based buffer overflow in the glibc DNS client-side resolver that\nputs Linux machines at risk for remote code execution. The flaw is triggered when the getaddrinfo()\nlibrary function is used, Google said today in its advisory. \n\n\u201cOverflowing bytes are entirely under the control of the attacker and are the result of a crafted\nDNS response,\u201d said a separate advisory posted by Carlos O\u2019Donnell of Red Hat. O\u2019Donnell and Florian\nWeimer of Red Hat worked on the patch along with Google researcher Fermin J. Serna. \n\n\u201cA back of the envelope analysis shows that it should be possible to write correctly formed DNS\nresponses with attacker controlled payloads that will penetrate a DNS cache hierarchy and therefore\nallow attackers to exploit machines behind such caches,\u201d O\u2019Donnell said. It\u2019s likely that all Linux\nservers and web frameworks such as Rails, PHP and Python are affected, as well as Android apps\nrunning glibc. \n\nThe bug was reported to the glibc maintainers last July, but was apparently introduced in glibc 2.9\nin May 2008. O\u2019Donnell said in the advisory that the vulnerability has likely not been publicly\nattacked. \n\n\u201cLocal testing shows that we have been able to control at least the execution of one free() call\nwith the buffer overflow and gained control of EIP,\u201d O\u2019Donnell said. \u201cFurther exploitation was not\nattempted, only this single attempt to show that it is very likely that execution control can be\ngained without much more effort.\u201d \n\nExperts urge admins to patch immediately. \n\n\u201cIt qualifies as an urgent \u2018patch today\u2019 vulnerability,\u201d said Kenneth White, security researcher and\ndirector of the Open Crypto Audit Project (OCAP). \n\nGoogle\u2019s Serna confirmed the issue affects all versions of glibc since 2.9 and added that there are\ntemporary mitigations that can be implemented until Linux machines can be patched. \n\n\u201cThe vulnerability relies on an oversized (2048+ bytes) UDP or TCP response, which is followed by\nanother response that will overwrite the stack,\u201d Serna said. \u201cOur suggested mitigation is to limit\nthe response (i.e., via DNSMasq or similar programs) sizes accepted by the DNS resolver locally as\nwell as to ensure that DNS queries are sent only to DNS servers which limit the response size for\nUDP responses with the truncation bit set.\u201d \n\nGoogle said that a number of exploitation vectors can be used to attack this vulnerability,\nincluding but not limited to ssh, sudo and curl. \n\n\u201cRemote code execution is possible, but not straightforward,\u201d Serna said. \u201cIt requires bypassing the\nsecurity mitigations present on the system, such as ASLR.\u201d \n\nGlibc is the C library that defines systems calls and other basic functions on Linux systems\nincluding the GNU OS and GNU Linux. \n\n", "polarity": 0.00600649350649351, "subjectivity": 0.4331168831168831, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/serious-linux-kernel-vulnerability-patched/115923/", "date": "2016-01-19T00:00:00.000Z", "author": "Michael Mimoso", "title": "Serious Linux Kernel Vulnerability Patched", "body": "A patch for a critical Linux kernel flaw, present in the code since 2012, is expected to be pushed\nout today. \n\nThe vulnerability affects versions 3.8 and higher, said researchers at startup Perception Point who\ndiscovered the vulnerability. The flaw also extends to two-thirds of Android devices, the company\nadded. \n\n\u201cIt\u2019s pretty bad because a user with legitimate or lower privileges can gain root access and\ncompromise the whole machine,\u201d Yevgeny Pats, cofounder and CEO of Perception Point. \u201cWith no auto\nupdate for the kernel, these versions could be vulnerable for a long time. Every Linux server needs\nto be patched as soon the patch is out.\u201d \n\nPats said an attacker would require local access to exploit the vulnerability on a Linux server. A\nmalicious mobile app would get the job done on an Android device (Kit-Kat and higher), he said. Pats\nadded that exploitation of the flaw is fairly straightforward, but it\u2019s unknown whether it\u2019s been\nattacked to date. \n\n\u201cThe fix was simple,\u201d Pats said. \u201cThe problem is not all devices Linux get patched automatically.\u201d \n\nThe vulnerability, CVE-2016-0728, lives in the keyring facility built into the various flavors of\nLinux. The keyring encrypts and stores login information, encryption keys and certificates, and\nmakes them available to applications. In a report published by Perception Point, researchers said\nthe vulnerability is a reference leak that can be abused to ultimately execute code in the Linux\nkernel. \n\n\u201cUser space applications give [keyring] the option to manage the crypto keys,\u201d Pats said. \u201cThe user\ndoesn\u2019t have to manage keys; the OS does it for the application. Apps use it for security reasons.\nWhen they want to apps to work with crypto, they use this feature. The feature has kernel access;\nthe OS gives the userland app the ability to use this feature. The problem is that the code runs in\nthe kernel.\u201d \n\nPats said that SMEP (Supervisor Mode Execution Protection) and SMAP (Supervicor Mode Access\nProtection) make exploitation difficult on Linux servers, while SELinux does the same for Android\ndevices. SMEP and SMAP are relatively new features that prevent the kernel from accessing and\nexecuting code from userland. \n\nThe flaw may linger a little longer on Android devices, since most updates are not pushed\nautomatically by carriers and manufacturers. Android is built upon the Linux kernel, but customized\nwithout many of the libraries that accompany standard Linux builds. \n\nPerception Point published a technical analysis of the vulnerability and how to exploit it,\nincluding proof-of-concept code published to its Github page. \n\n", "polarity": 0.02895454545454546, "subjectivity": 0.4631341991341991, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/google-ends-chrome-support-on-32-bit-linux-releases-chrome-47/115526/", "date": "2015-12-02T00:00:00.000Z", "author": "Chris Brook", "title": "Google Ends Chrome Support on 32-bit Linux, Releases Chrome 47", "body": "Google announced this week it will end Chrome support for older, 32-bit Linux distributions early\nnext year and will\u00a0maintain the browser on\u00a0more popular distributions of the software. \n\nSpecifically Google plans to stop pushing updates and security fixes to those running Chrome on\n32-bit Linux, Ubuntu Precise 12.04, and Debian 7.\u00a0Most computers manufactured in the last 10 years\ncome complete with 64-bit processors, so it\u2019s\u00a0likely the move has been in the works for some time. \n\nDirk Pranke, a software engineer with Google, explained\u00a0the company\u2019s plan in a post to Chromium\u2019s\ndev mailing group on Monday, and confirmed support would end in early March 2016. \n\nPranke clarified that while Google is doing away with Chrome for\u00a032-bit versions of Linux, it won\u2019t\nentirely spurn the more avid Linux users who run it through their distribution\u2019s software\nrepositories. Pranke claims that Google still plans on supporting the Chromium source code \u2013 upon\nwhich Chrome is based \u2013 for 32-bit build configurations on Linux. Pranke is encouraging users who\nrun the Precise version of Ubuntu to upgrade to the more up to date Trusty version. \n\nThe move is the latest by Google to bring Chrome up to date, ensuring it runs on a contemporary,\nsecure platform. \n\nIn November, the company announced it would end Chrome support for Windows XP, Vista, Mac OS X 10.6,\n10.7, and 10.8 in April 2016, because\u00a0none are actively supported by Microsoft or Apple, and running\nthe browser\u00a0on any of the operating systems could make users more susceptible to viruses and\nmalware. \n\nGoogle also pushed out the latest stable version of Chrome this week, Chrome 47, addressing 41\nsecurity bugs. \n\nThe most pressing issue, a use-after-free bug in AppCache, was branded critical and net\none\u00a0anonymous security researcher $10,000. \n\nThe rest of the vulnerabilities are a collection of cross-origin bypass bugs, overflow bugs, and out\nof bounds access bugs: \n\n", "polarity": 0.26666666666666666, "subjectivity": 0.5459876543209877, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/linux-foundation-badge-program-to-boost-open-source-security/117799/", "date": "2016-05-03T00:00:00.000Z", "author": "Tom Spring", "title": "Linux Foundation Badge Program to Boost Open Source Security", "body": "The Linux Foundation says a new Core Infrastructure Initiative (CII) Best Practices Badge program\nlaunched Tuesday will help companies interested in adopting open source technologies evaluate\nprojects based on security, quality and stability. \n\nThe\u00a0CII Best Practices Badge does not issue certificates nor validate open source projects. Instead,\nCII is a platform for open source projects such as OpenSSL, Node.js, and GitLab to self-disclose\ncritical aspects of their projects. \n\nLinux Foundation\u2019s CTO Nicko van Someren told Threatpost the badge program is a first of its kind\nfor the open source community and offers a free alternative to costly commercial offerings by\ncompanies such as Corsec Security and its Common Criteria certification that can cost upwards\nof\u00a0$100,000. \n\n\u201cOutwardly, this is a great way for project developers to be more transparent and methodical about\nhow their solutions meet agreed upon software benchmarks,\u201d Someren said. A CII Best Practices Badge,\nhe said, removes doubt when it comes to understanding if an open source project is secure or stable\nenough for real-time adoption within businesses. \n\nThe CII badge program will be equally useful for open source developers, Someren said. \u201cDevelopers\nwill be able to use this program to educate on security best practices and provide a directory for\ndevelopers and CIOs to understand what projects have an understanding and methodology that focuses\non security,\u201d he said. \n\nThe Linux Foundation has already announced inaugural badge holders that include Curl, GitLab, the\nLinux kernel, OpenBlox, OpenSSL, Node.js and Zephyr. The CII website will act as a searchable\nrepository for open source projects allowing you to easily find a project and see if it is \u201cpassing\u201d\nor \u201cfailing\u201d to meet CII best practices. \n\nFor example, an OpenSSL CII badge entry before the Heartbleed vulnerability was patched, would have\nbeen\u00a0\u201cfailing.\u201d OpenSSL users can see from the OpenSSL CII website entry that includes basic,\nquality and security information about the project\u2019s status. The CII online badge entries will red-\nflag issues until the project developers fix the problems. OpenSSL\u2019s current status is \u201cpassing\u201d\nwith no reported security issues. \n\nSomeren said if this type of best practices badge would have\u00a0existed prior to the massive Heartbleed\noutbreak, it could have possibly been avoided. \u201cBetter internal and external oversight of open\nsource projects can only be beneficial when it comes to security and reliability,\u201d he said. \n\nCore Infrastructure Initiative was created in April 2014 in the wake of Heartbleed. CII is made up\nof a group of leading IT companies that work together to identify critical open source projects and\nhelp fund them. \n\nSomeren stresses that the CII Best Practices Badge program is also an open project. \u201cIf you don\u2019t\nlike the criteria, you are part of the community and can change it,\u201d he said. Project leaders\nthemselves will be responsible for self-reporting. \n\nProgram backers say a unifying open source badge program is needed as a growing number of source\nprojects are being adopted by the likes of Facebook, Microsoft and Google for critical\ninfrastructure \u2013 such as OpenSSL. \n\n", "polarity": 0.24139393939393938, "subjectivity": 0.4694242424242425, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/google-details-linux-kernel-defenses-new-and-old/119553/", "date": "2016-07-28T00:00:00.000Z", "author": "Chris Brook", "title": "Google Details Linux Kernel Defenses, New and Old", "body": "Developers with Android\u2019s Security Team peeled back some of the layers on the mobile operating\nsystem this week; describing the lengths Google goes to protect the Linux kernel. \n\nIn a post to Google\u2019s Security Blog, Jeff Vander Stoep clarified several mitigations slated for\ninclusion in Nougat, the next stable Android build, and steps they\u2019ve taken over the last few years\nto defend against kernel attacks. \n\nStoep detailed\u00a0three mechanisms designed to protect the Linux kernel from threats, including a\nfeature, Mark Memory As Read-Only/No-Execute, which helps break up kernel memory into sections. \n\nA second feature sets restrictive page access permissions for each section; some sections are marked\nas read only and execute, some are marked as no-execute and also broken down into read-only and\nread-write. \n\nThe third feature helps protect the kernel by preventing it from directly accessing userspace\nmemory. By isolating kernel access, Vander Stoep claims attackers should have a tougher time\ncarrying out attacks, since they have less control over kernel memory that is executable. \n\nVander Stoep also discussed\u00a0three ways Android is seeking to\u00a0diminish the kernel\u2019s attack surface.\nOne of them, stack-protector-strong, is a feature that\u2019s been kicking around since 2014 and helps\nprotect against stack buffer overflows. The feature has evolved since its first iteration however,\nand now supports coverage for more than just character array types, he claims. \n\nReducing the number of entry points, including default access to debug features, has also hardened\nthe kernel. In particular, the amount of access afforded\u00a0perf, a popular developer tool, will be\ncurbed in the next Android build. In Android Nougat, the operating system will block access to the\nperformance-analyzing tool for Linux 2.6+ based systems, by default. Vander Stoep acknowledged that\nperf can be helpful but claims the tool\u00a0\u201cadds unnecessary attack surface\u201d for most Android users. \n\nNougat will also tighten the reins around which apps\u00a0can be\u00a0accessed via IOCTL commands. Only a\n\u201csmall whitelist\u201d of socket ioctl commands will be available to apps, Vander Stoep claims, since\nmost kernel vulnerabilities occur in drivers and are reached via a ioctl syscall. \n\nIt won\u2019t be too much of a burden on functionality, according to Vander Stoep. \n\n\u201cSome ioctl commands are needed by third-party applications, however most are not and access can be\nrestricted without breaking legitimate functionality,\u201d he said. \n\nLastly, Nougat will require all devices to\u00a0support seccomp, a facility that includes an app\nsandboxing mechanism. Similar to how it plans to limit ioctl syscalls, Nougat can also help cut down\non syscalls, which in turn narrows any potential attack surface,\u00a0by requiring seccomp. \n\nGoogle divulged information about Nougat two weeks ago when it announced it was planning on changing\nthe way it handled trusted Certificate Authorities in the OS, something that should limit man-in-\nthe-middle attacks. The new OS is expected to also allow developers to choose how apps trust CAs and\ntrust only connections to certain domains if necessary. \n\nGoogle routinely fixes vulnerabilities that could lead to kernel exploitation with monthly sets of\nAndroid patches. Since\u00a0the Linux kernel is part of the backbone of\u00a0Android\u2019s security model and\nregularly interacts with Mediaserver, a playback engine that\u2019s been by hit by over a dozen bugs in\nthe past year, it has\u00a0remained\u00a0a prime target for attackers. \n\nEarlier this month Google patched an elevation of privilege vulnerability in the kernel file system\nthat could have led to a malicious app executing arbitrary code within the context of the kernel. \n\nIn June it patched multiple critical bugs in Qualcomm drivers (GPU, Wi-Fi, Video, Sound, etc.) that\ncould have resulted in the same outcome. \n\n", "polarity": 0.06421196087862754, "subjectivity": 0.41494092327425663, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/serious-tcp-bug-in-linux-systems-allows-traffic-hijacking/119804/", "date": "2016-08-10T00:00:00.000Z", "author": "Michael Mimoso", "title": "Serious TCP Bug in Linux Systems Allows Traffic Hijacking", "body": "A serious vulnerability in the TCP implementation in Linux systems deployed since 2012 (version 3.6\nof the Linux kernel) can be used by attackers to identify hosts communicating over the protocol and\nultimately attack that traffic. \n\nResearchers from the University of California, Riverside and the U.S. Army Research Laboratory are\nexpected today at the USENIX Security Symposium deliver their paper, \u201cOff-Path TCP Exploits: Global\nRate Limit Considered Dangerous,\u201d that explains the vulnerability and recommendations on how to\nmitigate it. \n\nPatches for the vulnerability have been developed for the current Linux kernel, said Zhiyun Qian, an\nassistant computer science professor at the university and project advisor.\u00a0Qian and fellow authors\nYue Cao, Zhiyun Qian, Zhongjie Wang, Tuan Dao, Srikanth V. Krishnamurthy, and Lisa M. Marvel also\ndeveloped a patch for client and server hosts that raises the challenge ACK limit to large values,\nmaking it difficult to exploit. \n\nAttackers do not need to be in the traffic stream, i.e., via man-in-the-middle attacks, in order to\nexploit the flaw, and Qian said no user interaction is required on the part of the victim. \n\n\u201cThe unique aspect of the attack we demonstrated is the very low requirement to be able to carry it\nout,\u201d Qian said in a statement published by the university. \u201cEssentially, it can be done easily by\nanyone in the world where an attack machine is in a network that allows IP spoofing. The only piece\nof information that is needed is the pair of IP addresses (for victim client and server), which is\nfairly easy to obtain.\u201d \n\nThe vulnerable TCP implementation (CVE-2016-5696) could affect an untold number of devices running\nLinux, including embedded computers, mobile phones and more. The researchers said the attack can be\ncarried out in less than a minute and in their experiments, the academics were successful between 88\npercent and 97 percent of the time. \n\n\u201cIn a nutshell, the vulnerability allows a blind off-path attacker to infer if any two arbitrary\nhosts on the Internet are communicating using a TCP connection,\u201d the researchers wrote in their\npaper. \u201cFurther, if the connection is present, such an off-path attacker can also infer the TCP\nsequence numbers in use, from both sides of the connection; this in turn allows the attacker to\ncause connection termination and perform data injection attacks.\u201d \n\nAttacks can disrupt or degrade supposedly encrypted traffic, including connections over the Tor\nnetwork, the researchers wrote. \n\nThe work challenges previous assumptions that an attacker could not easily determine whether both\nends of a session were communicating over TCP without being in a man-in-the-middle position, and\ntherefore could not hijack nor tamper with traffic. \n\nThe researchers\u2019 \u201coff-path attack\u201d is capable of determining whether hosts are using TCP connections\nand then learning the port numbers of those connections. The attack allows someone off-path to infer\nTCP number sequences and then inject exploits or terminate the traffic stream. \n\n\u201cWe emphasize that the attack can be carried out by a purely off-path attacker without running\nmalicious code on the communicating client or server,\u201d the researchers wrote. \u201cThis can have serious\nimplications on the security and privacy of the Internet at large.\u201d \n\nThe researchers said the problem is linked to the introduction in\u00a0of challenge ACK responses and the\nimposition of a global rate limit on TCP control packets. \n\n\u201cAt a very high level, the vulnerability allows an attacker to create contention on a shared\nresource, i.e., the global rate limit counter on the target system by sending spoofed packets. The\nattacker can then subsequently observe the effect on the counter changes, measurable through probing\npackets,\u201d the researchers wrote. \u201cThrough extensive experimentation, we demonstrate that the attack\nis extremely effective and reliable. Given any two arbitrary hosts, it takes only 10 seconds to\nsuccessfully infer whether they are communicating. If there is a connection, subsequently, it takes\nalso only tens of seconds to infer the TCP sequence numbers used on the connection.\u201d \n\n", "polarity": 0.040574603174603166, "subjectivity": 0.5164624338624338, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/windows-10-attack-surface-grows-with-linux-support-in-anniversary-update/119778/", "date": "2016-08-10T00:00:00.000Z", "author": "Tom Spring", "title": "Windows 10 Attack Surface Grows with Linux Support in Anniversary Update", "body": "Microsoft\u2019s release of Windows Anniversary Update last week included an optional feature called\nWindows Subsystem for Linux that allows native support for Linux binaries. That has some security\nexperts concerned the Windows 10 attack surface has been expanded. \n\nThe threat, according to Alex Ionescu, vice president of endpoint detection and response strategy at\nCrowdstrike, centers on a\u00a0capability that allows for some Ubuntu Linux features to run within the\nWindows 10 operating system. Ionescu, who discussed his research with Threatpost last week at Black\nHat USA, said modified Linux code could make system calls to Windows APIs and execute malicious\nactions within the Windows environment. \n\n\u201cSecurity researchers, admins and forensic security experts are used to hunting Windows threats on\nWindows platforms and are adept at auditing them. Now you have a very interesting new paradigm where\nLinux applications can run on a Windows machine,\u201d Ionescu said. \u201cIf this feature is turned on, you\nhave support for unmodified Linux binaries \u2013 malicious or not.\u201d \n\nMicrosoft representatives counter that the Windows Subsystem for Linux (WSL) is a beta feature in\nthe Windows Anniversary Update. It told Threatpost via a statement that the Ubuntu image is \u201cexposed\nto and examined by anti-malware scanning tools such as Windows Defender.\u201d Still unclear from\nMicrosoft\u2019s explanation is whether Linux binaries generated or introduced to the Ubuntu image are\nalso examined and quarantined by Windows scanning tools. \n\nMicrosoft announced at its Build 2016 developers\u2019 conference Windows support for Linux Bash Shell,\nalong with the entire Linux command environment. Microsoft\u2019s Kevin Gallo, VP, Windows Developer\nPlatform, told attendees \u201cThis is not a VM. This is not cross-compiled tools. This is native.\u201d \n\nDespite what may appear to be a Linux kernel running on Windows 10 systems, the Linux feature\ninstead is a re-implementation of the Linux interface that a Linux kernel provides. It\u2019s not running\ninside an isolated and protected Hyper-V hypervisor environment. It runs on the host and has access\nto files, directories and touches the network stack, Ionescu explained. \n\nMore specifically, Ionescu describes the Linux support as a \u201cwrapper layer located at the Windows\nkernel level. When you run things in the kernel, it means if there is a problem or a vulnerability\nyou either crash the entire system or you can get code execution in the kernel,\u201d he said. \n\nKeeping things in perspective, Ionescu said, the Linux feature doesn\u2019t expand the immediate Windows\n10 threat landscape, but could over time when (or if) the feature becomes more popular. \u201cPeople\nshouldn\u2019t freak out if they turn the feature on. Hackers aren\u2019t targeting the 0.001 percent of\nWindows users,\u201d he said. \n\nIssues that concern\u00a0Ionescu are scenarios where a Windows application could inject code into a Linux\napplication and modify memory and introduce new exploits to the Windows platform. The problem, he\nsaid, centers around Microsoft\u2019s whitelisting service for Windows applications known as AppLocker\nand a lack of support \u2013 at this time \u2013 for Linux applications. \n\nIn one scenario, a malicious Linux binary might be able to slip by Windows defenses within an email\nattachment. \u201cIf this is a Windows user and Linux binary, maybe the endpoint protection isn\u2019t asked\nto scan it. If you click on the Linux executable, will it be hashed properly to see if it\u2019s\nmalicious? We don\u2019t know how the vast majority of Windows endpoints are going to handle ELF files\n(Linux) verses PE files (Windows),\u201d Ionescu said. \n\nIn another scenario, an attacker might leverage Linux support to obfuscate the presence of malware\non a system. Linux can be used to pit an attack against Windows and vice versa, he said. \n\nAccording to Microsoft, by default, Linux processes run on WSL with the same (non-admin) security\nprivileges as any cmd/PowerShell script does. \n\nThreats introduced by Ubuntu into the Windows 10 platform don\u2019t exist yet, said\u00a0Dustin Kirkland,\nUbuntu product and strategy at Canonical, the company that inked a deal with Microsoft to bring\nLinux to Windows 10. Kirkland stressed that today there is no \u201csingle, specific, concrete\nvulnerability that we (Canonical) or Microsoft need to go and address. If and when those are found,\nCanonical will work closely and professionally with Microsoft to address those problems, as\nefficiently as possible.\u201d \n\nMicrosoft said it is working with anti-malware software vendors to help them better protect users\nwho enable and use WSL. \u201cMicrosoft\u2019s teams are continuing to improve the security, manageability,\nstability and performance of WSL for future releases,\u201d it told Threatpost. \n\nOne issue Windows users will not have to worry about is the relatively small but potent number of\nLinux vulnerabilities. Ionescu said Linux exploits don\u2019t run natively within a Windows environment. \n\nIn many respects, because risks are often mitigated at the firewall level, many threats \u2013 Linux,\nWindows or otherwise \u2013 will be able to be identified and neutralized regardless of the OS, Ionescu\nsaid. \n\n\u201cThe key is, if you turn the Linux feature on be aware of it and try to manage it. You need to do\nthe same things people normally do. Look for strange processes, network connections and strange\nfiles being accessed,\u201d Ionsecu said. \n\n", "polarity": 0.17976499690785408, "subjectivity": 0.44971552257266545, "_cls": "CyberSpiders.articlemodel.Article"}, {"uri": "https://threatpost.com/insecure-redis-instances-at-core-of-attacks-against-linux-servers/120312/", "date": "2016-09-01T00:00:00.000Z", "author": "Michael Mimoso", "title": "Insecure Redis Instances at Core of Attacks Against Linux Servers", "body": "A recent run of attacks against Linux servers called Fairware has been traced to insecure internet-\nfacing Redis installations that hackers have abused\u00a0to delete web folders and, in some cases,\ninstall malicious code. \n\nRedis is an open source tool used by web application developers for the purpose of quickly caching\ndata. The tool\u2019s developers configured Redis to be accessed only by trusted clients inside trusted\nenvironments, and are adamant that Redis instances are not meant to be exposed to the internet. \n\nResearchers at Duo Labs, however, found 18,000 insecure Redis implementations online, and discovered\nevidence of attacks against 13,000. While not each one was compromised, Duo Labs\u2019 Jordan Wright\nsaid, there is potential for the problem to grow. \n\nThe Fairware attacks, meanwhile, were reported in posts to the forums at BleepingComputer\nindependently of Duo Labs\u2019 research. In both cases, attackers were deleting web folders on the\nservers and leaving behind a link to a Pastebin site hosting a ransom note. \n\nComparisons between a number of the notes and other artifacts, such as IP addresses and SSH keys\nused by the attackers, are enough evidence to connect the attacks, researchers at Duo Labs and\nBleepingComputer said. \n\nThe ransom note adds urgency for the victims. One note obtained by Duo Labs says the files have been\nencrypted and demands two Bitcoin for the private decryption key. Other samples of the note posted\nto BleepingComputer say the servers are infected with Fairware ransomware and make a similar two\nBitcoin demand or the files will be leaked online. The attackers, however, insist that victims do\nnot contact them about verifying the attack or possession of the deleted or encrypted files. \n\nIn neither case, however, is there evidence of any crypto-ransomware left behind on the machine. The\nattackers were able, instead, to hack the Linux servers through the exposed Redis instances.\nInitially, some of the victims believed the attackers were able to access the servers by brute-\nforcing their SSH keys. \n\n\u201cI think the brute force aspect was a misdiagnosis,\u201d Wright said. \u201cThe victims saw SSH showing the\nattacker logging in and assumed that was it. But they were exploiting different software in Redis\nand getting in, no brute force required.\u201d \n\nDuo Labs set up a honeypot and observed instead that the attackers were carrying out a \u201cclever\u201d\nattack, Wright said. \n\nThe problem begins with the exposure of Redis instances to the Internet. Clients generally connect\nto these instances and are able to issue commands to GET and SET data, retrieve system information\nor make configuration changes remotely. Doing a Shodan search, Duo Labs learned that the majority of\nconnected Redis instances are running on outdated versions of the software; newer versions include a\nprotected mode that shuts down this attack vector. \n\nSince instances can be reconfigured remotely, attackers were able to configure Redis to store a\nkey/value on the disk in the root folder pointing to their public SSH key allowing them to log into\nRedis as a root user. \n\nDuo Labs said it found a key called \u201ccrackit\u201d on most of the infected hosts that contained the same\npublic SSH key. BleepingComputer\u2019s Lawrence Abrams told Threatpost that he confirmed with a number\nof victims that they were seeing the same \u201ccrackit\u201d SSH key and IP addresses involved in the\nattacks. Duo said it observed attacks from 15 IP addresses. Wright said another key called \u201cqwe\u201d was\non close to 4,000 instances. \n\n\u201cWe believe this was set by a separate actor who was downloading and executing DDoS malware,\u201d Wright\nsaid. \u201cAt this point, whenever you compromise a Redis instance this way (adding an SSH key to gain\nroot access), the box is fully compromised. They can just SSH in, and totally compromise the device.\nIt\u2019s never good when something so simple is automated in this way. It\u2019s game over.\u201d \n\nVictims, meanwhile, are encouraged not to pay the ransom since this is likely a scam and the files\nhave been deleted. Researchers said they did not see evidence the files were encrypted nor backed\nup. \n\n\u201cThe big thing is Redis is out there on the internet, not being upgraded and deployed insecurely,\u201d\nWright said. \u201cI\u2019ll be interested if we see more of these \u2018ransomware\u2019 attacks where files are\ndeleted rather than encrypted.\u201d \n\n", "polarity": 0.004700854700854699, "subjectivity": 0.5667506105006105, "_cls": "CyberSpiders.articlemodel.Article"}]